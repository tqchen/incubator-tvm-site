<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1IncompleteTypeNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::IncompleteTypeNode</compoundname>
    <basecompoundref refid="classtvm_1_1TypeNode" prot="public" virt="non-virtual">tvm::TypeNode</basecompoundref>
    <includes refid="ir_2type_8h" local="no">type.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1IncompleteTypeNode_1ab5f37175c1fd0dbbbedc2edaa23d33dc" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1acd267f8d7f55da6ac681239831963279" kindref="member">TypeKind</ref></type>
        <definition>TypeKind tvm::IncompleteTypeNode::kind</definition>
        <argsstring></argsstring>
        <name>kind</name>
        <briefdescription>
<para>kind of the type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="493" column="1" bodyfile="include/tvm/ir/type.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1IncompleteTypeNode_1a01b808c3a957b9950fe369dec250d68d" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::IncompleteTypeNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;IncompleteType&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="508" column="1" bodyfile="include/tvm/ir/type.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1IncompleteTypeNode_1abc1d642d082a67c6fea2b28a9db79542" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::IncompleteTypeNode::VisitAttrs</definition>
        <argsstring>(tvm::AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">tvm::AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="495" column="1" bodyfile="include/tvm/ir/type.h" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1IncompleteTypeNode_1a3e0961f93de3f2cd7905cea065df895b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::IncompleteTypeNode::SEqualReduce</definition>
        <argsstring>(const IncompleteTypeNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="500" column="1" bodyfile="include/tvm/ir/type.h" bodystart="500" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1IncompleteTypeNode_1ac9d333742464ab5ce9578938ddc8b55f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::IncompleteTypeNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="504" column="1" bodyfile="include/tvm/ir/type.h" bodystart="504" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1IncompleteTypeNode_1afbd1522c6361c9476286344b7bae329c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::IncompleteTypeNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(IncompleteTypeNode, TypeNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1TypeNode" kindref="compound">TypeNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="509" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Intermediate values that is used to indicate incomplete type during type inference. </para>    </briefdescription>
    <detaileddescription>
<para>If we view the type relations as &quot;computational graph of types&quot;, then <ref refid="classtvm_1_1IncompleteType" kindref="compound">IncompleteType</ref> represents intermediate values of the graph, <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref> represents the input to the graph.</para><para><simplesect kind="see"><para><ref refid="classtvm_1_1IncompleteType" kindref="compound">IncompleteType</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5347">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="5348" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5348">
        <label>Object</label>
      </node>
      <node id="5346">
        <label>tvm::IncompleteTypeNode</label>
        <link refid="classtvm_1_1IncompleteTypeNode"/>
        <childnode refid="5347" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5353">
        <label>ObjectRef</label>
      </node>
      <node id="5352">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="5353" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5350">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="5351" relation="public-inheritance">
        </childnode>
        <childnode refid="5352" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
      </node>
      <node id="5351">
        <label>Object</label>
      </node>
      <node id="5349">
        <label>tvm::IncompleteTypeNode</label>
        <link refid="classtvm_1_1IncompleteTypeNode"/>
        <childnode refid="5350" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/type.h" line="490" column="1" bodyfile="include/tvm/ir/type.h" bodystart="490" bodyend="510"/>
    <listofallmembers>
      <member refid="classtvm_1_1TypeNode_1ab02f7d165755f57689f986aca467a7e5" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a4179c7d7d55d1141cadfd19547fb1344" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1a01b808c3a957b9950fe369dec250d68d" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1ab5f37175c1fd0dbbbedc2edaa23d33dc" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>kind</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1a3e0961f93de3f2cd7905cea065df895b" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1ac9d333742464ab5ce9578938ddc8b55f" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a7b06d502a5162d51bb205691bbb95bb5" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>span</name></member>
      <member refid="classtvm_1_1TypeNode_1abadff70e220806f889e81a0ad3bca0da" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1afbd1522c6361c9476286344b7bae329c" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1IncompleteTypeNode_1abc1d642d082a67c6fea2b28a9db79542" prot="public" virt="non-virtual"><scope>tvm::IncompleteTypeNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
