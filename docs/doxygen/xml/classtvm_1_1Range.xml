<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1Range" kind="class" language="C++" prot="public">
    <compoundname>tvm::Range</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <includes refid="ir_2expr_8h" local="no">expr.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1Range_1abc08435178fe9ac6ab83db6c9025757c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::Range::Range</definition>
        <argsstring>(PrimExpr begin, PrimExpr end)</argsstring>
        <name>Range</name>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>constructor by begin and end </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The begin of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1Range_1ad3ba24148bf1f5121d2f4187343e23a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::Range::TVM_DEFINE_OBJECT_REF_METHODS</definition>
        <argsstring>(Range, ObjectRef, RangeNode)</argsstring>
        <name>TVM_DEFINE_OBJECT_REF_METHODS</name>
        <param>
          <type><ref refid="classtvm_1_1Range" kindref="compound">Range</ref></type>
        </param>
        <param>
          <type>ObjectRef</type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1RangeNode" kindref="compound">RangeNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="423" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1Range_1a891949f0248812b71ebcde54ac4345cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1Range" kindref="compound">Range</ref></type>
        <definition>static Range tvm::Range::make_by_min_extent</definition>
        <argsstring>(PrimExpr min, PrimExpr extent)</argsstring>
        <name>make_by_min_extent</name>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>construct a new range with min and extent The corresponding constructor is removed, because that is counter convention of tradition meaning of range(begin, end) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extent</parametername>
</parameternamelist>
<parameterdescription>
<para>The extent of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="421" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1Range" kindref="compound">Range</ref> constainer. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6372">
        <label>ObjectRef</label>
      </node>
      <node id="6371">
        <label>tvm::Range</label>
        <link refid="classtvm_1_1Range"/>
        <childnode refid="6372" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6374">
        <label>ObjectRef</label>
      </node>
      <node id="6373">
        <label>tvm::Range</label>
        <link refid="classtvm_1_1Range"/>
        <childnode refid="6374" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/expr.h" line="404" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="404" bodyend="424"/>
    <listofallmembers>
      <member refid="classtvm_1_1Range_1a891949f0248812b71ebcde54ac4345cd" prot="public" virt="non-virtual"><scope>tvm::Range</scope><name>make_by_min_extent</name></member>
      <member refid="classtvm_1_1Range_1abc08435178fe9ac6ab83db6c9025757c" prot="public" virt="non-virtual"><scope>tvm::Range</scope><name>Range</name></member>
      <member refid="classtvm_1_1Range_1ad3ba24148bf1f5121d2f4187343e23a6" prot="public" virt="non-virtual"><scope>tvm::Range</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
