<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structtvm_1_1relay_1_1StructuralHash" kind="struct" language="C++" prot="public">
    <compoundname>tvm::relay::StructuralHash</compoundname>
    <includes refid="analysis_8h" local="no">analysis.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtvm_1_1relay_1_1StructuralHash_1a9a5df8e3b2ebcd69388f18beaba2d3f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::relay::StructuralHash::operator()</definition>
        <argsstring>(const Type &amp;type) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Hash a Relay type. </para>        </briefdescription>
        <detaileddescription>
<para>Implements structural hashing of a Relay type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to hash.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/analysis.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtvm_1_1relay_1_1StructuralHash_1a1789787a993785ce3f3b1bde05bea4ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::relay::StructuralHash::operator()</definition>
        <argsstring>(const Expr &amp;expr) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Hash a Relay expression. </para>        </briefdescription>
        <detaileddescription>
<para>Implements structural hashing of a Relay expression.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to hash.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/analysis.h" line="302" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A hashing structure in the style of std::hash. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7077">
        <label>tvm::relay::StructuralHash</label>
        <link refid="structtvm_1_1relay_1_1StructuralHash"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/analysis.h" line="284" column="1" bodyfile="include/tvm/relay/analysis.h" bodystart="284" bodyend="303"/>
    <listofallmembers>
      <member refid="structtvm_1_1relay_1_1StructuralHash_1a9a5df8e3b2ebcd69388f18beaba2d3f5" prot="public" virt="non-virtual"><scope>tvm::relay::StructuralHash</scope><name>operator()</name></member>
      <member refid="structtvm_1_1relay_1_1StructuralHash_1a1789787a993785ce3f3b1bde05bea4ee" prot="public" virt="non-virtual"><scope>tvm::relay::StructuralHash</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
