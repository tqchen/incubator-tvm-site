<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1relay_1_1OpImplementation" kind="class" language="C++" prot="public">
    <compoundname>tvm::relay::OpImplementation</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <includes refid="op__strategy_8h" local="no">op_strategy.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1OpImplementation_1a04d79f30d070ca87272c439dc7ed2d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">te::Tensor</ref> &gt;</type>
        <definition>Array&lt;te::Tensor&gt; tvm::relay::OpImplementation::Compute</definition>
        <argsstring>(const Attrs &amp;attrs, const Array&lt; te::Tensor &gt; &amp;inputs, const Type &amp;out_type)</argsstring>
        <name>Compute</name>
        <param>
          <type>const <ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref> &amp;</type>
          <declname>attrs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">te::Tensor</ref> &gt; &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref> &amp;</type>
          <declname>out_type</declname>
        </param>
        <briefdescription>
<para>Invoke the operator compute function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute of the primitive </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The input tensors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The output type information. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output compute description of the operator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/op_strategy.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1OpImplementation_1a13a90107dc66983c53faf1620b022d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">te::Schedule</ref></type>
        <definition>te::Schedule tvm::relay::OpImplementation::Schedule</definition>
        <argsstring>(const Attrs &amp;attrs, const Array&lt; te::Tensor &gt; &amp;outs, const Target &amp;target)</argsstring>
        <name>Schedule</name>
        <param>
          <type>const <ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref> &amp;</type>
          <declname>attrs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">te::Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Build the computation schedule. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute of the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The build target. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The computation schedule. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/op_strategy.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1OpImplementation_1ae5236bb7515bb15a490c6631528034ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::relay::OpImplementation::TVM_DEFINE_OBJECT_REF_METHODS</definition>
        <argsstring>(OpImplementation, ObjectRef, OpImplementationNode)</argsstring>
        <name>TVM_DEFINE_OBJECT_REF_METHODS</name>
        <param>
          <type><ref refid="classtvm_1_1relay_1_1OpImplementation" kindref="compound">OpImplementation</ref></type>
        </param>
        <param>
          <type>ObjectRef</type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1relay_1_1OpImplementationNode" kindref="compound">OpImplementationNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/op_strategy.h" line="87" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Operator implementation class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5956">
        <label>tvm::relay::OpImplementation</label>
        <link refid="classtvm_1_1relay_1_1OpImplementation"/>
        <childnode refid="5957" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5957">
        <label>ObjectRef</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5958">
        <label>tvm::relay::OpImplementation</label>
        <link refid="classtvm_1_1relay_1_1OpImplementation"/>
        <childnode refid="5959" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5959">
        <label>ObjectRef</label>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/op_strategy.h" line="64" column="1" bodyfile="include/tvm/relay/op_strategy.h" bodystart="64" bodyend="88"/>
    <listofallmembers>
      <member refid="classtvm_1_1relay_1_1OpImplementation_1a04d79f30d070ca87272c439dc7ed2d52" prot="public" virt="non-virtual"><scope>tvm::relay::OpImplementation</scope><name>Compute</name></member>
      <member refid="classtvm_1_1relay_1_1OpImplementation_1a13a90107dc66983c53faf1620b022d28" prot="public" virt="non-virtual"><scope>tvm::relay::OpImplementation</scope><name>Schedule</name></member>
      <member refid="classtvm_1_1relay_1_1OpImplementation_1ae5236bb7515bb15a490c6631528034ab" prot="public" virt="non-virtual"><scope>tvm::relay::OpImplementation</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
