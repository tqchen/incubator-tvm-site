<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1OpMap" kind="class" language="C++" prot="public">
    <compoundname>tvm::OpMap</compoundname>
    <includes refid="ir_2op_8h" local="no">op.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>ValueType</declname>
        <defname>ValueType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1OpMap_1a2c31e8a3c11caeb061d69db14ebb0e95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Op</definition>
        <argsstring></argsstring>
        <name>Op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="397" column="1" bodyfile="include/tvm/ir/op.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1OpMap_1a1ffa47d6354edfc038e0cdf80f2bd3de" prot="private" static="no" mutable="no">
        <type>const <ref refid="classtvm_1_1GenericOpMap" kindref="compound">GenericOpMap</ref> &amp;</type>
        <definition>const GenericOpMap&amp; tvm::OpMap&lt; ValueType &gt;::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
<para>The internal map field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="401" column="1" bodyfile="include/tvm/ir/op.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1OpMap_1a682c5cbb2d79f69e047d0f04041bd1c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::OpMap&lt; ValueType &gt;::count</definition>
        <argsstring>(const Op &amp;op) const </argsstring>
        <name>count</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Check if the map has op as key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if op is contained in map, 0 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="373" column="1" bodyfile="include/tvm/ir/op.h" bodystart="607" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1OpMap_1ab719867303894f6e441a59348cab4ced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType</type>
        <definition>ValueType tvm::OpMap&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(const Op &amp;op) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="379" column="1" bodyfile="include/tvm/ir/op.h" bodystart="612" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1OpMap_1a3704a7d04cd90cf722361b1a7b3eec2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType</type>
        <definition>ValueType tvm::OpMap&lt; ValueType &gt;::get</definition>
        <argsstring>(const Op &amp;op, ValueType def_value) const </argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>def_value</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op with default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value when the key does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="386" column="1" bodyfile="include/tvm/ir/op.h" bodystart="617" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1OpMap_1ae1069dc1bd6bf1b277960ef4b791c8c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType</type>
        <definition>ValueType tvm::OpMap&lt; ValueType &gt;::get</definition>
        <argsstring>(const RelayExpr &amp;expr, ValueType def_value) const </argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="classtvm_1_1RelayExpr" kindref="compound">RelayExpr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>def_value</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op with default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value when the key does not exist or if expr is not an <ref refid="classtvm_1_1Op" kindref="compound">Op</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="394" column="1" bodyfile="include/tvm/ir/op.h" bodystart="623" bodyend="626"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtvm_1_1OpMap_1a0654dc13e0bd88bd31a489b0b52aba09" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::OpMap&lt; ValueType &gt;::OpMap</definition>
        <argsstring>(const GenericOpMap &amp;map)</argsstring>
        <name>OpMap</name>
        <param>
          <type>const <ref refid="classtvm_1_1GenericOpMap" kindref="compound">GenericOpMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="399" column="1" bodyfile="include/tvm/ir/op.h" bodystart="399" bodyend="399"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Map&lt;Op,ValueType&gt; used to store meta-information about <ref refid="classtvm_1_1Op" kindref="compound">Op</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value stored in map. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="5967">
        <label>tvm::OpMap&lt; ValueType &gt;</label>
        <link refid="classtvm_1_1OpMap"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/op.h" line="43" column="1" bodyfile="include/tvm/ir/op.h" bodystart="43" bodyend="-1"/>
    <listofallmembers>
      <member refid="classtvm_1_1OpMap_1a682c5cbb2d79f69e047d0f04041bd1c1" prot="public" virt="non-virtual"><scope>tvm::OpMap</scope><name>count</name></member>
      <member refid="classtvm_1_1OpMap_1a3704a7d04cd90cf722361b1a7b3eec2c" prot="public" virt="non-virtual"><scope>tvm::OpMap</scope><name>get</name></member>
      <member refid="classtvm_1_1OpMap_1ae1069dc1bd6bf1b277960ef4b791c8c3" prot="public" virt="non-virtual"><scope>tvm::OpMap</scope><name>get</name></member>
      <member refid="classtvm_1_1OpMap_1a1ffa47d6354edfc038e0cdf80f2bd3de" prot="private" virt="non-virtual"><scope>tvm::OpMap</scope><name>map_</name></member>
      <member refid="classtvm_1_1OpMap_1a2c31e8a3c11caeb061d69db14ebb0e95" prot="private" virt="non-virtual"><scope>tvm::OpMap</scope><name>Op</name></member>
      <member refid="classtvm_1_1OpMap_1ab719867303894f6e441a59348cab4ced" prot="public" virt="non-virtual"><scope>tvm::OpMap</scope><name>operator[]</name></member>
      <member refid="classtvm_1_1OpMap_1a0654dc13e0bd88bd31a489b0b52aba09" prot="private" virt="non-virtual"><scope>tvm::OpMap</scope><name>OpMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
