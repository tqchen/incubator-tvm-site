<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ir_2attrs_8h" kind="file" language="C++">
    <compoundname>attrs.h</compoundname>
    <includes local="no">dmlc/common.h</includes>
    <includes refid="ir_2expr_8h" local="no">tvm/ir/expr.h</includes>
    <includes refid="packed__func_8h" local="no">tvm/runtime/packed_func.h</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includedby refid="ir_2function_8h" local="no">include/tvm/ir/function.h</includedby>
    <includedby refid="ir_2op_8h" local="no">include/tvm/ir/op.h</includedby>
    <includedby refid="type__relation_8h" local="no">include/tvm/ir/type_relation.h</includedby>
    <includedby refid="relay_2adt_8h" local="no">include/tvm/relay/adt.h</includedby>
    <includedby refid="algorithm_8h" local="no">include/tvm/relay/attrs/algorithm.h</includedby>
    <includedby refid="annotation_8h" local="no">include/tvm/relay/attrs/annotation.h</includedby>
    <includedby refid="bitserial_8h" local="no">include/tvm/relay/attrs/bitserial.h</includedby>
    <includedby refid="debug_8h" local="no">include/tvm/relay/attrs/debug.h</includedby>
    <includedby refid="device__copy_8h" local="no">include/tvm/relay/attrs/device_copy.h</includedby>
    <includedby refid="image_8h" local="no">include/tvm/relay/attrs/image.h</includedby>
    <includedby refid="relay_2attrs_2memory_8h" local="no">include/tvm/relay/attrs/memory.h</includedby>
    <includedby refid="include_2tvm_2relay_2attrs_2nn_8h" local="no">include/tvm/relay/attrs/nn.h</includedby>
    <includedby refid="reduce_8h" local="no">include/tvm/relay/attrs/reduce.h</includedby>
    <includedby refid="include_2tvm_2relay_2attrs_2transform_8h" local="no">include/tvm/relay/attrs/transform.h</includedby>
    <includedby refid="vision_8h" local="no">include/tvm/relay/attrs/vision.h</includedby>
    <includedby refid="relay_2expr_8h" local="no">include/tvm/relay/expr.h</includedby>
    <includedby refid="relay_2type_8h" local="no">include/tvm/relay/type.h</includedby>
    <includedby refid="relay_2qnn_2attrs_8h" local="no">include/tvm/relay/qnn/attrs.h</includedby>
    <incdepgraph>
      <node id="10052">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10028" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
      </node>
      <node id="10027">
        <label>atomic</label>
      </node>
      <node id="10042">
        <label>functional</label>
      </node>
      <node id="10044">
        <label>limits</label>
      </node>
      <node id="10033">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="10034" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="10035" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10037" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
      </node>
      <node id="10032">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10033" relation="include">
        </childnode>
        <childnode refid="10038" relation="include">
        </childnode>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10042" relation="include">
        </childnode>
        <childnode refid="10043" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10044" relation="include">
        </childnode>
        <childnode refid="10035" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10046">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
      </node>
      <node id="10018">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10027" relation="include">
        </childnode>
      </node>
      <node id="10022">
        <label>stdint.h</label>
      </node>
      <node id="10038">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10039" relation="include">
        </childnode>
        <childnode refid="10027" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
      </node>
      <node id="10049">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10046" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10042" relation="include">
        </childnode>
      </node>
      <node id="10025">
        <label>string</label>
      </node>
      <node id="10016">
        <label>dmlc/common.h</label>
      </node>
      <node id="10050">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="10046" relation="include">
        </childnode>
        <childnode refid="10051" relation="include">
        </childnode>
      </node>
      <node id="10047">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10048" relation="include">
        </childnode>
        <childnode refid="10037" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
      </node>
      <node id="10023">
        <label>stddef.h</label>
      </node>
      <node id="10015">
        <label>include/tvm/ir/attrs.h</label>
        <link refid="ir/attrs.h"/>
        <childnode refid="10016" relation="include">
        </childnode>
        <childnode refid="10017" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
        <childnode refid="10037" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10042" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
      </node>
      <node id="10017">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10028" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10052" relation="include">
        </childnode>
        <childnode refid="10053" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10054" relation="include">
        </childnode>
        <childnode refid="10044" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10043">
        <label>tuple</label>
      </node>
      <node id="10019">
        <label>dmlc/logging.h</label>
      </node>
      <node id="10036">
        <label>vector</label>
      </node>
      <node id="10045">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10046" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
      </node>
      <node id="10034">
        <label>dmlc/io.h</label>
      </node>
      <node id="10020">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="10021" relation="include">
        </childnode>
        <childnode refid="10022" relation="include">
        </childnode>
        <childnode refid="10023" relation="include">
        </childnode>
      </node>
      <node id="10053">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10028" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10052" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
      </node>
      <node id="10026">
        <label>utility</label>
      </node>
      <node id="10028">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="10031" relation="include">
        </childnode>
        <childnode refid="10050" relation="include">
        </childnode>
        <childnode refid="10047" relation="include">
        </childnode>
        <childnode refid="10045" relation="include">
        </childnode>
        <childnode refid="10049" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10040">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="10030">
        <label>cstdlib</label>
      </node>
      <node id="10051">
        <label>iostream</label>
      </node>
      <node id="10039">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="10034" relation="include">
        </childnode>
        <childnode refid="10040" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10038" relation="include">
        </childnode>
      </node>
      <node id="10037">
        <label>unordered_map</label>
      </node>
      <node id="10031">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
        <childnode refid="10038" relation="include">
        </childnode>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10045" relation="include">
        </childnode>
        <childnode refid="10049" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10029">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10030" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10041">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="10020" relation="include">
        </childnode>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
      </node>
      <node id="10024">
        <label>type_traits</label>
      </node>
      <node id="10054">
        <label>algorithm</label>
      </node>
      <node id="10021">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="10035">
        <label>memory</label>
      </node>
      <node id="10048">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10075">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="10069">
        <label>include/tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="10068" relation="include">
        </childnode>
        <childnode refid="10070" relation="include">
        </childnode>
        <childnode refid="10063" relation="include">
        </childnode>
        <childnode refid="10064" relation="include">
        </childnode>
      </node>
      <node id="10056">
        <label>include/tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="10057" relation="include">
        </childnode>
        <childnode refid="10074" relation="include">
        </childnode>
        <childnode refid="10080" relation="include">
        </childnode>
      </node>
      <node id="10102">
        <label>include/tvm/relay/attrs/nn.h</label>
        <link refid="include_2tvm_2relay_2attrs_2nn_8h"/>
      </node>
      <node id="10080">
        <label>include/tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="10081" relation="include">
        </childnode>
        <childnode refid="10062" relation="include">
        </childnode>
      </node>
      <node id="10088">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="10065">
        <label>include/tvm/ir/type_relation.h</label>
        <link refid="type__relation_8h"/>
        <childnode refid="10066" relation="include">
        </childnode>
        <childnode refid="10079" relation="include">
        </childnode>
      </node>
      <node id="10092">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="10082">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="10083" relation="include">
        </childnode>
        <childnode refid="10090" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10092" relation="include">
        </childnode>
        <childnode refid="10093" relation="include">
        </childnode>
        <childnode refid="10085" relation="include">
        </childnode>
        <childnode refid="10094" relation="include">
        </childnode>
        <childnode refid="10088" relation="include">
        </childnode>
      </node>
      <node id="10061">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="10067">
        <label>include/tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="10068" relation="include">
        </childnode>
        <childnode refid="10069" relation="include">
        </childnode>
        <childnode refid="10070" relation="include">
        </childnode>
        <childnode refid="10071" relation="include">
        </childnode>
        <childnode refid="10072" relation="include">
        </childnode>
        <childnode refid="10063" relation="include">
        </childnode>
        <childnode refid="10073" relation="include">
        </childnode>
        <childnode refid="10074" relation="include">
        </childnode>
        <childnode refid="10075" relation="include">
        </childnode>
        <childnode refid="10076" relation="include">
        </childnode>
        <childnode refid="10077" relation="include">
        </childnode>
        <childnode refid="10078" relation="include">
        </childnode>
        <childnode refid="10064" relation="include">
        </childnode>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10095">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="10089">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="10094">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10085" relation="include">
        </childnode>
        <childnode refid="10088" relation="include">
        </childnode>
      </node>
      <node id="10104">
        <label>include/tvm/relay/attrs/vision.h</label>
        <link refid="vision_8h"/>
      </node>
      <node id="10093">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="10086" relation="include">
        </childnode>
      </node>
      <node id="10101">
        <label>include/tvm/relay/attrs/image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="10068">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type__functor_8h"/>
      </node>
      <node id="10087">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="10085">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10087" relation="include">
        </childnode>
        <childnode refid="10088" relation="include">
        </childnode>
      </node>
      <node id="10072">
        <label>include/tvm/relay/attrs/transform.h</label>
        <link refid="include_2tvm_2relay_2attrs_2transform_8h"/>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10064">
        <label>include/tvm/relay/pattern_functor.h</label>
        <link refid="pattern__functor_8h"/>
      </node>
      <node id="10055">
        <label>include/tvm/ir/attrs.h</label>
        <link refid="ir/attrs.h"/>
        <childnode refid="10056" relation="include">
        </childnode>
        <childnode refid="10066" relation="include">
        </childnode>
        <childnode refid="10065" relation="include">
        </childnode>
        <childnode refid="10069" relation="include">
        </childnode>
        <childnode refid="10096" relation="include">
        </childnode>
        <childnode refid="10097" relation="include">
        </childnode>
        <childnode refid="10098" relation="include">
        </childnode>
        <childnode refid="10099" relation="include">
        </childnode>
        <childnode refid="10100" relation="include">
        </childnode>
        <childnode refid="10101" relation="include">
        </childnode>
        <childnode refid="10071" relation="include">
        </childnode>
        <childnode refid="10102" relation="include">
        </childnode>
        <childnode refid="10103" relation="include">
        </childnode>
        <childnode refid="10072" relation="include">
        </childnode>
        <childnode refid="10104" relation="include">
        </childnode>
        <childnode refid="10067" relation="include">
        </childnode>
        <childnode refid="10079" relation="include">
        </childnode>
        <childnode refid="10105" relation="include">
        </childnode>
      </node>
      <node id="10091">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="10058">
        <label>include/tvm/ir/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="10059" relation="include">
        </childnode>
        <childnode refid="10063" relation="include">
        </childnode>
        <childnode refid="10064" relation="include">
        </childnode>
      </node>
      <node id="10074">
        <label>include/tvm/relay/function.h</label>
        <link refid="relay_2function_8h"/>
        <childnode refid="10070" relation="include">
        </childnode>
        <childnode refid="10063" relation="include">
        </childnode>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10059">
        <label>include/tvm/ir/transform.h</label>
        <link refid="include_2tvm_2ir_2transform_8h"/>
        <childnode refid="10060" relation="include">
        </childnode>
        <childnode refid="10062" relation="include">
        </childnode>
      </node>
      <node id="10062">
        <label>include/tvm/tir/transform.h</label>
        <link refid="include_2tvm_2tir_2transform_8h"/>
      </node>
      <node id="10090">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="10083" relation="include">
        </childnode>
      </node>
      <node id="10100">
        <label>include/tvm/relay/attrs/device_copy.h</label>
        <link refid="device__copy_8h"/>
      </node>
      <node id="10081">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="10082" relation="include">
        </childnode>
        <childnode refid="10084" relation="include">
        </childnode>
        <childnode refid="10091" relation="include">
        </childnode>
        <childnode refid="10095" relation="include">
        </childnode>
        <childnode refid="10086" relation="include">
        </childnode>
        <childnode refid="10093" relation="include">
        </childnode>
      </node>
      <node id="10086">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="10057">
        <label>include/tvm/ir/module.h</label>
        <link refid="ir_2module_8h"/>
        <childnode refid="10058" relation="include">
        </childnode>
        <childnode refid="10059" relation="include">
        </childnode>
        <childnode refid="10065" relation="include">
        </childnode>
        <childnode refid="10070" relation="include">
        </childnode>
        <childnode refid="10067" relation="include">
        </childnode>
        <childnode refid="10073" relation="include">
        </childnode>
        <childnode refid="10075" relation="include">
        </childnode>
      </node>
      <node id="10079">
        <label>include/tvm/relay/type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="10069" relation="include">
        </childnode>
        <childnode refid="10070" relation="include">
        </childnode>
        <childnode refid="10067" relation="include">
        </childnode>
        <childnode refid="10076" relation="include">
        </childnode>
        <childnode refid="10077" relation="include">
        </childnode>
      </node>
      <node id="10103">
        <label>include/tvm/relay/attrs/reduce.h</label>
        <link refid="reduce_8h"/>
      </node>
      <node id="10083">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="10084" relation="include">
        </childnode>
        <childnode refid="10089" relation="include">
        </childnode>
        <childnode refid="10085" relation="include">
        </childnode>
      </node>
      <node id="10071">
        <label>include/tvm/relay/attrs/memory.h</label>
        <link refid="relay_2attrs_2memory_8h"/>
      </node>
      <node id="10073">
        <label>include/tvm/relay/feature.h</label>
        <link refid="feature_8h"/>
      </node>
      <node id="10060">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="10061" relation="include">
        </childnode>
      </node>
      <node id="10063">
        <label>include/tvm/relay/expr_functor.h</label>
        <link refid="relay_2expr__functor_8h"/>
      </node>
      <node id="10066">
        <label>include/tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="10067" relation="include">
        </childnode>
        <childnode refid="10076" relation="include">
        </childnode>
      </node>
      <node id="10077">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="10078" relation="include">
        </childnode>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10099">
        <label>include/tvm/relay/attrs/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="10096">
        <label>include/tvm/relay/attrs/algorithm.h</label>
        <link refid="algorithm_8h"/>
      </node>
      <node id="10098">
        <label>include/tvm/relay/attrs/bitserial.h</label>
        <link refid="bitserial_8h"/>
      </node>
      <node id="10105">
        <label>include/tvm/relay/qnn/attrs.h</label>
        <link refid="relay_2qnn_2attrs_8h"/>
      </node>
      <node id="10070">
        <label>include/tvm/relay/analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="10084">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="10085" relation="include">
        </childnode>
      </node>
      <node id="10076">
        <label>include/tvm/relay/op.h</label>
        <link refid="relay_2op_8h"/>
        <childnode refid="10063" relation="include">
        </childnode>
        <childnode refid="10064" relation="include">
        </childnode>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10078">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="10097">
        <label>include/tvm/relay/attrs/annotation.h</label>
        <link refid="annotation_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtvm_1_1AttrError" prot="public">tvm::AttrError</innerclass>
    <innerclass refid="classtvm_1_1AttrFieldInfoNode" prot="public">tvm::AttrFieldInfoNode</innerclass>
    <innerclass refid="classtvm_1_1AttrFieldInfo" prot="public">tvm::AttrFieldInfo</innerclass>
    <innerclass refid="classtvm_1_1AttrsEqual" prot="public">tvm::AttrsEqual</innerclass>
    <innerclass refid="classtvm_1_1AttrsHash" prot="public">tvm::AttrsHash</innerclass>
    <innerclass refid="classtvm_1_1BaseAttrsNode" prot="public">tvm::BaseAttrsNode</innerclass>
    <innerclass refid="classtvm_1_1Attrs" prot="public">tvm::Attrs</innerclass>
    <innerclass refid="classtvm_1_1DictAttrsNode" prot="public">tvm::DictAttrsNode</innerclass>
    <innerclass refid="classtvm_1_1DictAttrs" prot="public">tvm::DictAttrs</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1AttrNopEntry" prot="public">tvm::detail::AttrNopEntry</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrNormalVisitor" prot="public">tvm::detail::AttrNormalVisitor</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrsEqualVisitor" prot="public">tvm::detail::AttrsEqualVisitor</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrsSEqualVisitor" prot="public">tvm::detail::AttrsSEqualVisitor</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrsHashVisitor" prot="public">tvm::detail::AttrsHashVisitor</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrsSHashVisitor" prot="public">tvm::detail::AttrsSHashVisitor</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1AttrInitEntry" prot="public">tvm::detail::AttrInitEntry</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrInitVisitor" prot="public">tvm::detail::AttrInitVisitor</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName" prot="public">tvm::detail::TypeName</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01int_01_4" prot="public">tvm::detail::TypeName&lt; int &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01int64__t_01_4" prot="public">tvm::detail::TypeName&lt; int64_t &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01uint64__t_01_4" prot="public">tvm::detail::TypeName&lt; uint64_t &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01DataType_01_4" prot="public">tvm::detail::TypeName&lt; DataType &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01bool_01_4" prot="public">tvm::detail::TypeName&lt; bool &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01void_01_5_01_4" prot="public">tvm::detail::TypeName&lt; void * &gt;</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1TypeName_3_01double_01_4" prot="public">tvm::detail::TypeName&lt; double &gt;</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrDocEntry" prot="public">tvm::detail::AttrDocEntry</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrDocVisitor" prot="public">tvm::detail::AttrDocVisitor</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrExistVisitor" prot="public">tvm::detail::AttrExistVisitor</innerclass>
    <innerclass refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" prot="public">tvm::detail::AttrTriggerNonDefaultEntry</innerclass>
    <innerclass refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor" prot="public">tvm::detail::AttrNonDefaultVisitor</innerclass>
    <innerclass refid="classtvm_1_1AttrsNode" prot="public">tvm::AttrsNode</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1detail">tvm::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="ir_2attrs_8h_1ac869a7c3d7169282810ce7819918314a" prot="public" static="no">
        <name>TVM_DECLARE_ATTRS</name>
        <param><defname>ClassName</defname></param>
        <param><defname>TypeKey</defname></param>
        <initializer>static constexpr const char* _type_key = TypeKey;                \
  <ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(ClassName, ::<ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">tvm::BaseAttrsNode</ref>)   \
  template&lt;typename FVisit&gt;                                        \
  void __VisitAttrs__(FVisit&amp; __fvisit__)</initializer>
        <briefdescription>
<para>Declare an attribute function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ClassName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the class. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TypeKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The type key to be used by the TVM node system. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/attrs.h" line="64" column="9" bodyfile="include/tvm/ir/attrs.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ir_2attrs_8h_1a578da113eb199bad72e26c03ad24832f" prot="public" static="no">
        <name>TVM_ATTR_FIELD</name>
        <param><defname>FieldName</defname></param>
        <initializer>__fvisit__(#FieldName, &amp;FieldName)</initializer>
        <briefdescription>
<para>Declare an attribute field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/attrs.h" line="75" column="9" bodyfile="include/tvm/ir/attrs.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helpers for attribute objects. </para>    </briefdescription>
    <detaileddescription>
<para>This module enables declaration of named attributes which support default value setup and bound checking.</para><para><programlisting><codeline><highlight class="normal">struct<sp/>MyAttrs<sp/>:<sp/>public<sp/>tvm::AttrsNode&lt;MyAttrs&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>float<sp/>learning_rate;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>num_hidden;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>declare<sp/>attribute<sp/>fields<sp/>in<sp/>header<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TVM_DECLARE_ATTRS(MyAttrs,<sp/>&quot;attrs.MyAttrs&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TVM_ATTR_FIELD(num_hidden).set_lower_bound(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TVM_ATTR_FIELD(learning_rate).set_default(0.01f);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TVM_ATTR_FIELD(name).set_default(&quot;hello&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">//<sp/>register<sp/>it<sp/>in<sp/>cc<sp/>file</highlight></codeline>
<codeline><highlight class="normal">TVM_REGISTER_NODE_TYPE(MyAttrs);</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para>AttrsNode, <ref refid="ir_2attrs_8h_1ac869a7c3d7169282810ce7819918314a" kindref="member">TVM_DECLARE_ATTRS</ref>, <ref refid="ir_2attrs_8h_1a578da113eb199bad72e26c03ad24832f" kindref="member">TVM_ATTR_FIELD</ref> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">#ifndef<sp/>TVM_IR_ATTRS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_IR_ATTRS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dmlc/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ir_2expr_8h" kindref="compound">tvm/ir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="packed__func_8h" kindref="compound">tvm/runtime/packed_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="ir_2attrs_8h_1ac869a7c3d7169282810ce7819918314a" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_DECLARE_ATTRS(ClassName,<sp/>TypeKey)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>static<sp/>constexpr<sp/>const<sp/>char*<sp/>_type_key<sp/>=<sp/>TypeKey;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>TVM_DECLARE_FINAL_OBJECT_INFO(ClassName,<sp/>::tvm::BaseAttrsNode)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>template&lt;typename<sp/>FVisit&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/>void<sp/>__VisitAttrs__(FVisit&amp;<sp/>__fvisit__)<sp/><sp/>//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="ir_2attrs_8h_1a578da113eb199bad72e26c03ad24832f" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_ATTR_FIELD(FieldName)<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/>__fvisit__(#FieldName,<sp/>&amp;FieldName)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TObjectRef&gt;</highlight></codeline>
<codeline lineno="85" refid="namespacetvm_1ab6c242e8ac09beb463fba306948b7f15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TObjectRef<sp/><ref refid="namespacetvm_1ab6c242e8ac09beb463fba306948b7f15" kindref="member">NullValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TObjectRef(ObjectPtr&lt;Object&gt;(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="90" refid="namespacetvm_1a28c693333c2b15702b1a9a57dec0fbf5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/><ref refid="namespacetvm_1a28c693333c2b15702b1a9a57dec0fbf5" kindref="member">NullValue&lt;DataType&gt;</ref>()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da2a59b355bef5ebc40bd78833666197cb" kindref="member">DataType::kHandle</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structtvm_1_1AttrError" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1AttrError" kindref="compound">AttrError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>dmlc::Error<sp/>{</highlight></codeline>
<codeline lineno="100" refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" kindref="member">AttrError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacedmlc" kindref="compound">dmlc</ref>::<ref refid="classtvm_1_1Error" kindref="compound">Error</ref>(msg)<sp/>{}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classtvm_1_1AttrFieldInfoNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1AttrFieldInfoNode" kindref="compound">AttrFieldInfoNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110" refid="classtvm_1_1AttrFieldInfoNode_1a94f3593b41c2dd3be2aea793794d4dca" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1AttrFieldInfoNode_1a94f3593b41c2dd3be2aea793794d4dca" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="112" refid="classtvm_1_1AttrFieldInfoNode_1a625467e8153ee8657ae080693baa374c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1AttrFieldInfoNode_1a625467e8153ee8657ae080693baa374c" kindref="member">type_info</ref>;</highlight></codeline>
<codeline lineno="114" refid="classtvm_1_1AttrFieldInfoNode_1a1a281d5417d10840872e3c2c67c7290b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1AttrFieldInfoNode_1a1a281d5417d10840872e3c2c67c7290b" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classtvm_1_1AttrFieldInfoNode_1aa8428bae334dcf9c3f2f6594a818742c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrFieldInfoNode_1aa8428bae334dcf9c3f2f6594a818742c" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;type_info&quot;</highlight><highlight class="normal">,<sp/>&amp;type_info);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,<sp/>&amp;description);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classtvm_1_1AttrFieldInfoNode_1afe4293c9f1aea71f845c5ed9633af2c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AttrFieldInfo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123" refid="classtvm_1_1AttrFieldInfoNode_1afdb98106a5c8d5ad2106fd03043283f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_type_has_method_sequal_reduce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124" refid="classtvm_1_1AttrFieldInfoNode_1a29563a91b0ce0f0118c755e072c10dfc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_type_has_method_shash_reduce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1AttrFieldInfoNode" kindref="compound">AttrFieldInfoNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classtvm_1_1AttrFieldInfo" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1AttrFieldInfo" kindref="compound">AttrFieldInfo</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" kindref="member">TVM_DEFINE_OBJECT_REF_METHODS</ref>(<ref refid="classtvm_1_1AttrFieldInfo" kindref="compound">AttrFieldInfo</ref>,<sp/>ObjectRef,<sp/><ref refid="classtvm_1_1AttrFieldInfoNode" kindref="compound">AttrFieldInfoNode</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AttrsHashHandler;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AttrsEqualHandler;</highlight></codeline>
<codeline lineno="146" refid="classtvm_1_1AttrsEqual" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148" refid="classtvm_1_1AttrsEqual_1af65f9cf21d8c4355388d7e54d0bdb1ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1af65f9cf21d8c4355388d7e54d0bdb1ef" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fuzzy<sp/>float<sp/>pt<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atol<sp/>=<sp/>1e-9;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhs<sp/>==<sp/>rhs)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>lhs<sp/>-<sp/>rhs;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff<sp/>&gt;<sp/>-atol<sp/>&amp;&amp;<sp/>diff<sp/>&lt;<sp/>atol;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classtvm_1_1AttrsEqual_1a93b456b86566cac5b319db9eea0ea7f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1a93b456b86566cac5b319db9eea0ea7f1" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159" refid="classtvm_1_1AttrsEqual_1a644f5e9603108f79b65cdb4753e38b6a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1a644f5e9603108f79b65cdb4753e38b6a" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162" refid="classtvm_1_1AttrsEqual_1a9038da9b1c4cc4216de13dc30e45a2f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1a9038da9b1c4cc4216de13dc30e45a2f7" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165" refid="classtvm_1_1AttrsEqual_1abf0d990a522127ceb3d0b0badd5e4dc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1abf0d990a522127ceb3d0b0badd5e4dc8" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168" refid="classtvm_1_1AttrsEqual_1a39fd9bc47e3055367f216445a679255e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1a39fd9bc47e3055367f216445a679255e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171" refid="classtvm_1_1AttrsEqual_1aab0d53b8bc5dfb6b833f0a4b59266ff6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual_1aab0d53b8bc5dfb6b833f0a4b59266ff6" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>comparator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectRef&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectRef&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178" refid="classtvm_1_1AttrsEqual_1a82543680d85e663c8085c06ccc229827" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AttrsEqualHandler;</highlight></codeline>
<codeline lineno="180" refid="classtvm_1_1AttrsEqual_1a8296ba912da1568dca506f079f0ab6c9" refkind="member"><highlight class="normal"><sp/><sp/>AttrsEqualHandler*<sp/>handler_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classtvm_1_1AttrsHash" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191" refid="classtvm_1_1AttrsHash_1a17271e9215dcc670fd82b6f54dcdd160" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1a17271e9215dcc670fd82b6f54dcdd160" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;double&gt;()(value);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194" refid="classtvm_1_1AttrsHash_1aa2bccb3fda57c4b96f14f2d77564382b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1aa2bccb3fda57c4b96f14f2d77564382b" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;int64_t&gt;()(value);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197" refid="classtvm_1_1AttrsHash_1a164a440cd00993b74fb74644d3cb234a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1a164a440cd00993b74fb74644d3cb234a" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;uint64_t&gt;()(value);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200" refid="classtvm_1_1AttrsHash_1aa69c6ed1824bd0818e2dd49384faaa8f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1aa69c6ed1824bd0818e2dd49384faaa8f" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;int&gt;()(value);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203" refid="classtvm_1_1AttrsHash_1adfbed9e31f46503bc792ba0fa9c1dd5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1adfbed9e31f46503bc792ba0fa9c1dd5e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;bool&gt;()(value);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206" refid="classtvm_1_1AttrsHash_1aa2e71ac14e2fb6eec6e510e95e6e4709" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1aa2e71ac14e2fb6eec6e510e95e6e4709" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;std::string&gt;()(value);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209" refid="classtvm_1_1AttrsHash_1a194e030739814e7419cc71575efad949" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash_1a194e030739814e7419cc71575efad949" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref>&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;int&gt;()(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(value.<ref refid="classtvm_1_1runtime_1_1DataType_1a20aec12c682b0e73d3f47ba3b62c418b" kindref="member">code</ref>())<sp/>|</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(static_cast&lt;int&gt;(value.<ref refid="classtvm_1_1runtime_1_1DataType_1ac26a4b0d3de99a8c08ecc2618a8659d9" kindref="member">bits</ref>())<sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="classtvm_1_1runtime_1_1DataType_1abc92c7ca9966808f024983c76e12cf4a" kindref="member">lanes</ref>())<sp/>&lt;&lt;<sp/>16));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectRef&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218" refid="classtvm_1_1AttrsHash_1a1070cab2b30682fe2945c7b68f461036" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AttrsHashHandler;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>AttrsHashHandler*<sp/>handler_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classtvm_1_1BaseAttrsNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231" refid="classtvm_1_1BaseAttrsNode_1a257561dad74174cbdc08f6725a45d8ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">TVMArgs</ref><sp/>=<sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">runtime::TVMArgs</ref>;</highlight></codeline>
<codeline lineno="232" refid="classtvm_1_1BaseAttrsNode_1a1f56f080d0c1fab79d9469029aef8ebb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref><sp/>=<sp/><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">runtime::TVMRetValue</ref>;</highlight></codeline>
<codeline lineno="234" refid="classtvm_1_1BaseAttrsNode_1a225581a40231b2de219da30fced428a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode_1a225581a40231b2de219da30fced428a2" kindref="member">~BaseAttrsNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>visit<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classtvm_1_1BaseAttrsNode_1af145cd54a0d92705871500a675e43abe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode_1af145cd54a0d92705871500a675e43abe" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitBySeq(Args&amp;&amp;<sp/>...args);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintDocString(std::ostream<sp/>&amp;os)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight></codeline>
<codeline lineno="255"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitNonDefaultAttrs(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;AttrFieldInfo&gt;</ref><sp/>ListFieldInfo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitByPackedArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">TVMArgs</ref>&amp;<sp/>kwargs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_unknown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ContentEqual(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>other,<sp/><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ContentHash(<ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref><sp/>hasher)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classtvm_1_1BaseAttrsNode_1ad812afdb028fe3944a80cd922dceff82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_type_has_method_sequal_reduce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285" refid="classtvm_1_1BaseAttrsNode_1ad85f4aca5e8840d23851c0c07acd0862" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_type_has_method_shash_reduce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286" refid="classtvm_1_1BaseAttrsNode_1a8e4fd4e728774e0556cda84b0c2b80d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Attrs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" kindref="member">TVM_DECLARE_BASE_OBJECT_INFO</ref>(<ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classtvm_1_1Attrs" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" kindref="member">TVM_DEFINE_OBJECT_REF_METHODS</ref>(<ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref>,<sp/>ObjectRef,<sp/><ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classtvm_1_1DictAttrsNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1DictAttrsNode" kindref="compound">DictAttrsNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="308" refid="classtvm_1_1DictAttrsNode_1a84b24dd355be6b65a0748d4b4e02feed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/><ref refid="classtvm_1_1DictAttrsNode_1a84b24dd355be6b65a0748d4b4e02feed" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classtvm_1_1DictAttrsNode_1ae0218d9d2bea5d4244bfbfc7a3635d35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1DictAttrsNode_1ae0218d9d2bea5d4244bfbfc7a3635d35" kindref="member">SEqualReduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1DictAttrsNode" kindref="compound">DictAttrsNode</ref>*<sp/>other,<sp/><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>(dict,<sp/>other-&gt;<ref refid="classtvm_1_1DictAttrsNode_1a84b24dd355be6b65a0748d4b4e02feed" kindref="member">dict</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classtvm_1_1DictAttrsNode_1a9b325fbc574606d832cca3b483bac572" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1DictAttrsNode_1a9b325fbc574606d832cca3b483bac572" kindref="member">SHashReduce</ref>(<ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref><sp/>hash_reduce)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_reduce(dict);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitAttrs(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitNonDefaultAttrs(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitByPackedArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">runtime::TVMArgs</ref>&amp;<sp/>args,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_unknown)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;AttrFieldInfo&gt;</ref><sp/>ListFieldInfo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ContentEqual(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>other,<sp/><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ContentHash(<ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref><sp/>hasher)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="classtvm_1_1DictAttrsNode_1aaef3e4d948905fc26a25d5ea8fd15c27" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DictAttrs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1DictAttrsNode" kindref="compound">DictAttrsNode</ref>,<sp/><ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classtvm_1_1DictAttrs" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1DictAttrs" kindref="compound">DictAttrs</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1DictAttrs" kindref="compound">DictAttrs</ref>(<ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>dict);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" kindref="member">TVM_DEFINE_OBJECT_REF_METHODS</ref>(DictAttrs,<sp/><ref refid="classtvm_1_1Attrs" kindref="compound">Attrs</ref>,<sp/><ref refid="classtvm_1_1DictAttrsNode" kindref="compound">DictAttrsNode</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1af8330e3864503fb7c4133ae4d48fe4a2" kindref="member">TVM_DEFINE_OBJECT_REF_COW_METHOD</ref>(<ref refid="classtvm_1_1DictAttrsNode" kindref="compound">DictAttrsNode</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Namespace<sp/>containing<sp/>detail<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="namespacetvm_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgValue" kindref="compound">runtime::TVMArgValue</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>entry<sp/>that<sp/>does<sp/>nothing<sp/>in<sp/>set_default/bound/describe<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="structtvm_1_1detail_1_1AttrNopEntry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="354" refid="structtvm_1_1detail_1_1AttrNopEntry_1adab25bf47ec60e73d1e02c3cef2f6898" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">TSelf</ref><sp/>=<sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structtvm_1_1detail_1_1AttrNopEntry_1a9bd1f913549c1b4376c0137f4101b791" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry_1a9bd1f913549c1b4376c0137f4101b791" kindref="member">describe</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="360" refid="structtvm_1_1detail_1_1AttrNopEntry_1a370e92bafbada9ba805a52e72881f98b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry_1a370e92bafbada9ba805a52e72881f98b" kindref="member">set_default</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="364" refid="structtvm_1_1detail_1_1AttrNopEntry_1a36da34fc54009d63283d07e9d41657f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry_1a36da34fc54009d63283d07e9d41657f7" kindref="member">set_lower_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>begin)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="368" refid="structtvm_1_1detail_1_1AttrNopEntry_1add2843b725ee43be26672a8d2d641cce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry_1add2843b725ee43be26672a8d2d641cce" kindref="member">set_upper_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>for<sp/>normal<sp/>visitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="classtvm_1_1detail_1_1AttrNormalVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrNormalVisitor" kindref="compound">AttrNormalVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376" refid="classtvm_1_1detail_1_1AttrNormalVisitor_1a6ba81b2db584e6625a7ccf04d4bd04ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrNormalVisitor_1a6ba81b2db584e6625a7ccf04d4bd04ed" kindref="member">AttrNormalVisitor</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>visitor_(visitor)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="380" refid="classtvm_1_1detail_1_1AttrNormalVisitor_1a40693839ab67a4ba887040c8b4496463" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrNormalVisitor_1a40693839ab67a4ba887040c8b4496463" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>visitor_-&gt;Visit(key,<sp/>value);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor_;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wrapper<sp/>for<sp/>normal<sp/>visitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classtvm_1_1detail_1_1AttrsEqualVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrsEqualVisitor" kindref="compound">AttrsEqualVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392" refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1a3903dd9e71e23344f1a807644d43707f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result_{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1a52b47272211c0223868c03a3c39a85cf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1a52b47272211c0223868c03a3c39a85cf" kindref="member">AttrsEqualVisitor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>rhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref>&amp;<sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lhs_(lhs),<sp/>rhs_(rhs),<sp/>equal_(equal)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="398" refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1aa0b64b3e89858c3402ea553d402bbee1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1aa0b64b3e89858c3402ea553d402bbee1" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>lhs_value)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>rhs_value<sp/>=</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs_)<sp/>+</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(reinterpret_cast&lt;const<sp/>char*&gt;(lhs_value)<sp/>-</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lhs_)));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!equal_(*lhs_value,<sp/>*rhs_value))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>lhs_;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>rhs_;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref>&amp;<sp/>equal_;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">};</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classtvm_1_1detail_1_1AttrsSEqualVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrsSEqualVisitor" kindref="compound">AttrsSEqualVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="419" refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1aeda3a91f0b2d1a7a9a075828954ff77f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result_{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1ac67ceda6a413da78e61fa91ca61fcf26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1ac67ceda6a413da78e61fa91ca61fcf26" kindref="member">AttrsSEqualVisitor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>rhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref>&amp;<sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lhs_(lhs),<sp/>rhs_(rhs),<sp/>equal_(equal)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="425" refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1aaea4233b109948ae631d100368a02ad1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1aaea4233b109948ae631d100368a02ad1" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>lhs_value)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>rhs_value<sp/>=</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rhs_)<sp/>+</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(reinterpret_cast&lt;const<sp/>char*&gt;(lhs_value)<sp/>-</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lhs_)));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!equal_(*lhs_value,<sp/>*rhs_value))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>lhs_;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>rhs_;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref>&amp;<sp/>equal_;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classtvm_1_1detail_1_1AttrsHashVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrsHashVisitor" kindref="compound">AttrsHashVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446" refid="classtvm_1_1detail_1_1AttrsHashVisitor_1aef1bb3e8aebea0a00e41771ce7b4a069" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrsHashVisitor_1aef1bb3e8aebea0a00e41771ce7b4a069" kindref="member">AttrsHashVisitor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref>&amp;<sp/>hasher)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>hasher_(hasher)<sp/>{}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="classtvm_1_1detail_1_1AttrsHashVisitor_1ae9491954f6d62082106ec1a89297a344" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result_{0};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="452" refid="classtvm_1_1detail_1_1AttrsHashVisitor_1acef34f01ee1d62e46bade808cf76ab2e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrsHashVisitor_1acef34f01ee1d62e46bade808cf76ab2e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>result_<sp/>=<sp/>dmlc::HashCombine(result_,<sp/>hasher_(*value));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref>&amp;<sp/>hasher_;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">};</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classtvm_1_1detail_1_1AttrsSHashVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrsSHashVisitor" kindref="compound">AttrsSHashVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="463" refid="classtvm_1_1detail_1_1AttrsSHashVisitor_1af5b71e60c1383705d275a5087f3073bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrsSHashVisitor_1af5b71e60c1383705d275a5087f3073bb" kindref="member">AttrsSHashVisitor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref>&amp;<sp/>hash_reducer)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>hash_reducer_(hash_reducer)<sp/>{}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="467" refid="classtvm_1_1detail_1_1AttrsSHashVisitor_1a0b9995a8e489eefd6f8ef44eaf7840ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrsSHashVisitor_1a0b9995a8e489eefd6f8ef44eaf7840ca" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_reducer_(*value);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref>&amp;<sp/>hash_reducer_;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>entry<sp/>that<sp/>does<sp/>initialization,<sp/>set<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="478" refid="structtvm_1_1detail_1_1AttrInitEntry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">AttrInitEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="structtvm_1_1detail_1_1AttrInitEntry_1acac846c239440c570206f36c2d04c373" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">TSelf</ref><sp/>=<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">AttrInitEntry&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="structtvm_1_1detail_1_1AttrInitEntry_1a573a25648ca0d3d8fe28f6c7614248bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a573a25648ca0d3d8fe28f6c7614248bf" kindref="member">type_key_</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>field<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="structtvm_1_1detail_1_1AttrInitEntry_1a5ed0b852e3229c1c1e0b8c924c53479e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a5ed0b852e3229c1c1e0b8c924c53479e" kindref="member">key_</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="structtvm_1_1detail_1_1AttrInitEntry_1aea83f0af9e7ea95e5f7d614a717b7760" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1aea83f0af9e7ea95e5f7d614a717b7760" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>value<sp/>is<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="structtvm_1_1detail_1_1AttrInitEntry_1aaba94dddd1e9c367023dbe03e76634bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_missing_{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>is<sp/>still<sp/>missing<sp/>in<sp/>destruction<sp/>time<sp/>throw<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="structtvm_1_1detail_1_1AttrInitEntry_1a7f0c496115e88acf39d413875b44cd28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a7f0c496115e88acf39d413875b44cd28" kindref="member">~AttrInitEntry</ref>()<sp/>DMLC_THROW_EXCEPTION<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_missing_)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>type_key_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Cannot<sp/>find<sp/>required<sp/>field<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>key_</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;<sp/>during<sp/>initialization&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" kindref="member">AttrError</ref>(os.str());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>lower<sp/>bound<sp/>of<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="structtvm_1_1detail_1_1AttrInitEntry_1a8ce4f70cc359b281428014c493cf69ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a8ce4f70cc359b281428014c493cf69ad" kindref="member">set_lower_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>begin)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;value_missing_)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val<sp/>=<sp/>*value_;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>&gt;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>type_key_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>key_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>lower<sp/>bound<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>begin;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" kindref="member">AttrError</ref>(os.str());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>upper<sp/>bound<sp/>of<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="structtvm_1_1detail_1_1AttrInitEntry_1abec687904758f8544313bba7edbcbf34" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1abec687904758f8544313bba7edbcbf34" kindref="member">set_upper_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;value_missing_)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val<sp/>=<sp/>*value_;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>type_key_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>key_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>upper<sp/>bound<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>end;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" kindref="member">AttrError</ref>(os.str());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>default<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="structtvm_1_1detail_1_1AttrInitEntry_1ae23e7210dac22db414244fe34e5a64e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1ae23e7210dac22db414244fe34e5a64e5" kindref="member">set_default</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value_missing_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>*value_<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>value_missing_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532" refid="structtvm_1_1detail_1_1AttrInitEntry_1a64eca870988f14379a2c47085cb5a0f2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a64eca870988f14379a2c47085cb5a0f2" kindref="member">describe</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>function<sp/>to<sp/>allow<sp/>smart<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>Expr<sp/>types<sp/>into<sp/>the<sp/>constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="540" refid="namespacetvm_1_1detail_1ae91709b0cb7daf1bca69432bee0a3568" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1ae91709b0cb7daf1bca69432bee0a3568" kindref="member">SetValue</ref>(T*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>*ptr<sp/>=<sp/>val.operator<sp/>T();</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="545" refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" kindref="member">SetIntValue</ref>(T*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.type_code()<sp/>==<sp/>kDLInt)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.value().v_int64);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1IntImm" kindref="compound">IntImm</ref><sp/>expr<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(expr-&gt;value);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetValue&lt;std::string&gt;(std::string*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.type_code()<sp/>==<sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" kindref="member">kTVMStr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>val.operator<sp/>std::string();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(FATAL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expect<sp/>str&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="564" refid="namespacetvm_1_1detail_1a2565d82719660de2ab39178c917d6628" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1a2565d82719660de2ab39178c917d6628" kindref="member">SetValue&lt;double&gt;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.type_code()<sp/>==<sp/>kDLFloat<sp/>||<sp/>val.type_code()<sp/>==<sp/>kDLInt)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>val.operator<sp/>double();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectRef<sp/>expr<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(expr.defined());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImmNode" kindref="compound">IntImmNode</ref>*<sp/>op<sp/>=<sp/>expr.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(op-&gt;value);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1FloatImmNode" kindref="compound">FloatImmNode</ref>*<sp/>op<sp/>=<sp/>expr.as&lt;<ref refid="classtvm_1_1FloatImmNode" kindref="compound">FloatImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(op-&gt;value);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(FATAL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expect<sp/>float<sp/>value,<sp/>but<sp/>get<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expr-&gt;GetTypeKey();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="580" refid="namespacetvm_1_1detail_1a107ebbb0ef4a94f47cd25cb2213dcd96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1a107ebbb0ef4a94f47cd25cb2213dcd96" kindref="member">SetValue&lt;int&gt;</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" kindref="member">SetIntValue</ref>(ptr,<sp/>val);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="584" refid="namespacetvm_1_1detail_1ad20586749a52e831a52c20984a926d67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1ad20586749a52e831a52c20984a926d67" kindref="member">SetValue&lt;int64_t&gt;</ref>(int64_t*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" kindref="member">SetIntValue</ref>(ptr,<sp/>val);</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="588" refid="namespacetvm_1_1detail_1acb3382242cbf538f64edae13e4ec5a84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1acb3382242cbf538f64edae13e4ec5a84" kindref="member">SetValue&lt;uint64_t&gt;</ref>(uint64_t*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" kindref="member">SetIntValue</ref>(ptr,<sp/>val);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="592" refid="namespacetvm_1_1detail_1addd17cedbd26f5b4b257d7651ca5b6fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1detail_1addd17cedbd26f5b4b257d7651ca5b6fe" kindref="member">SetValue&lt;bool&gt;</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVMArgValue&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1detail_1af7e68b984c27ffe1726578bc9cc59322" kindref="member">SetIntValue</ref>(ptr,<sp/>val);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visitor<sp/>for<sp/>value<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FFind&gt;</highlight></codeline>
<codeline lineno="598" refid="classtvm_1_1detail_1_1AttrInitVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrInitVisitor" kindref="compound">AttrInitVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Counter<sp/>of<sp/>number<sp/>of<sp/>matched<sp/>attributes<sp/>during<sp/>visit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>to<sp/>decide<sp/>if<sp/>there<sp/>is<sp/>additional<sp/>unmatched<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="classtvm_1_1detail_1_1AttrInitVisitor_1a40694e8ade57b3e5167ec74404188f9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hit_count_{0};</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="classtvm_1_1detail_1_1AttrInitVisitor_1ac3c800c9249fee195db2a5fa473fe960" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrInitVisitor_1ac3c800c9249fee195db2a5fa473fe960" kindref="member">AttrInitVisitor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_key,<sp/>FFind<sp/>ffind)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>type_key_(type_key),<sp/>ffind_(ffind)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="609" refid="classtvm_1_1detail_1_1AttrInitVisitor_1af0856406dd74c88334291da4eff0543d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">AttrInitEntry&lt;T&gt;</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrInitVisitor_1af0856406dd74c88334291da4eff0543d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>TVMArgValue<sp/>val;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrInitEntry" kindref="compound">AttrInitEntry&lt;T&gt;</ref><sp/>opt;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.<ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a573a25648ca0d3d8fe28f6c7614248bf" kindref="member">type_key_</ref><sp/>=<sp/>type_key_;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.<ref refid="structtvm_1_1detail_1_1AttrInitEntry_1a5ed0b852e3229c1c1e0b8c924c53479e" kindref="member">key_</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.<ref refid="structtvm_1_1detail_1_1AttrInitEntry_1aea83f0af9e7ea95e5f7d614a717b7760" kindref="member">value_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ffind_(key,<sp/>&amp;val))<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1detail_1ae91709b0cb7daf1bca69432bee0a3568" kindref="member">SetValue</ref>(value,<sp/>val);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structtvm_1_1detail_1_1AttrInitEntry_1aaba94dddd1e9c367023dbe03e76634bf" kindref="member">value_missing_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++hit_count_;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.<ref refid="structtvm_1_1detail_1_1AttrInitEntry_1aaba94dddd1e9c367023dbe03e76634bf" kindref="member">value_missing_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>type<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_key_;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>FFind<sp/>ffind_;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">};</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FFind&gt;</highlight></codeline>
<codeline lineno="632" refid="namespacetvm_1_1detail_1abe71237e8e483fd9277356234eca35d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrInitVisitor" kindref="compound">AttrInitVisitor&lt;FFind&gt;</ref><sp/><ref refid="namespacetvm_1_1detail_1abe71237e8e483fd9277356234eca35d4" kindref="member">CreateInitVisitor</ref>(</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_key,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>FFind<sp/>ffind)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrInitVisitor" kindref="compound">AttrInitVisitor&lt;FFind&gt;</ref>(type_key,<sp/>ffind);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="643" refid="structtvm_1_1detail_1_1TypeName" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref><sp/>{</highlight></codeline>
<codeline lineno="644" refid="structtvm_1_1detail_1_1TypeName_1a58c1b5351ce2e7c0c7787448c18287a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/>T::ContainerType::_type_key;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">};</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="648" refid="structtvm_1_1detail_1_1TypeName_3_01int_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;int&gt;<sp/>{</highlight></codeline>
<codeline lineno="649" refid="structtvm_1_1detail_1_1TypeName_3_01int_01_4_1a3d260766bba29599abdef176ac44a9aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">};</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="653" refid="structtvm_1_1detail_1_1TypeName_3_01int64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;int64_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="654" refid="structtvm_1_1detail_1_1TypeName_3_01int64__t_01_4_1a0c4adfb05b647001a3b365b723269fa4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">};</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="658" refid="structtvm_1_1detail_1_1TypeName_3_01uint64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;uint64_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="659" refid="structtvm_1_1detail_1_1TypeName_3_01uint64__t_01_4_1a49e7cec3abbfc4db8144c7a3741b19e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;uint64_t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">};</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="663" refid="structtvm_1_1detail_1_1TypeName_3_01DataType_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="664" refid="structtvm_1_1detail_1_1TypeName_3_01DataType_01_4_1a53fef3c8f6efd6960f326efdc7247191" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DataType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">};</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::string&gt;<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;str&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="673" refid="structtvm_1_1detail_1_1TypeName_3_01bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;bool&gt;<sp/>{</highlight></codeline>
<codeline lineno="674" refid="structtvm_1_1detail_1_1TypeName_3_01bool_01_4_1a4ec09fca4aca8d1750d479c360f69c58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bool&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal">};</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="678" refid="structtvm_1_1detail_1_1TypeName_3_01void_01_5_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;void*&gt;<sp/>{</highlight></codeline>
<codeline lineno="679" refid="structtvm_1_1detail_1_1TypeName_3_01void_01_5_01_4_1a05dde8e9fdc15287aa0b1bf8d2e4b584" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;handle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="683" refid="structtvm_1_1detail_1_1TypeName_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName</ref>&lt;double&gt;<sp/>{</highlight></codeline>
<codeline lineno="684" refid="structtvm_1_1detail_1_1TypeName_3_01double_01_4_1abd511d0b0bf46cf6fe251eea8c20c386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">};</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="classtvm_1_1detail_1_1AttrDocEntry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">AttrDocEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="689" refid="classtvm_1_1detail_1_1AttrDocEntry_1a8bab3adf8242c94bd163ab7484170a5d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">TSelf</ref><sp/>=<sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">AttrDocEntry</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="classtvm_1_1detail_1_1AttrDocEntry_1ad364f21d28cf391fcfd8dc2364d88f89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry_1ad364f21d28cf391fcfd8dc2364d88f89" kindref="member">AttrDocEntry</ref>(ObjectPtr&lt;AttrFieldInfoNode&gt;<sp/>info)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>info_(info)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694" refid="classtvm_1_1detail_1_1AttrDocEntry_1a8b5f78f95056953d0460740f916c8e6c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry_1a8b5f78f95056953d0460740f916c8e6c" kindref="member">describe</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>info_-&gt;description<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="699" refid="classtvm_1_1detail_1_1AttrDocEntry_1ae42cd45d8f626450cfcfa35b9849f1e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry_1ae42cd45d8f626450cfcfa35b9849f1e3" kindref="member">set_default</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>info_-&gt;type_info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>default=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>info_-&gt;type_info<sp/>=<sp/>os.str();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="706" refid="classtvm_1_1detail_1_1AttrDocEntry_1a201e9d6c937d2f444d91fcc8185f8309" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry_1a201e9d6c937d2f444d91fcc8185f8309" kindref="member">set_lower_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/>T<sp/>begin)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="710" refid="classtvm_1_1detail_1_1AttrDocEntry_1aec039b071d826ab164c5abe123aefaa3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry_1aec039b071d826ab164c5abe123aefaa3" kindref="member">set_upper_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/>T<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>ObjectPtr&lt;AttrFieldInfoNode&gt;<sp/>info_;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">};</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="classtvm_1_1detail_1_1AttrDocVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrDocVisitor" kindref="compound">AttrDocVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="721" refid="classtvm_1_1detail_1_1AttrDocVisitor_1a1091752fc7d78b471b034877ad9344b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">AttrDocEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrDocVisitor_1a1091752fc7d78b471b034877ad9344b3" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectPtr&lt;AttrFieldInfoNode&gt;<sp/>info</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>make_object&lt;AttrFieldInfoNode&gt;();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;name<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;type_info<sp/>=<sp/><ref refid="structtvm_1_1detail_1_1TypeName" kindref="compound">TypeName&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>fields_.push_back(<ref refid="classtvm_1_1AttrFieldInfo" kindref="compound">AttrFieldInfo</ref>(info));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrDocEntry" kindref="compound">AttrDocEntry</ref>(info);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="classtvm_1_1detail_1_1AttrDocVisitor_1aa32707d90cd2cf8e5334afa4fe3d4722" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;AttrFieldInfo&gt;</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrDocVisitor_1aa32707d90cd2cf8e5334afa4fe3d4722" kindref="member">fields_</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="classtvm_1_1detail_1_1AttrExistVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrExistVisitor" kindref="compound">AttrExistVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="735" refid="classtvm_1_1detail_1_1AttrExistVisitor_1a42cfd0949c298dea06fb2c4fb39e188d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1detail_1_1AttrExistVisitor_1a42cfd0949c298dea06fb2c4fb39e188d" kindref="member">key_</ref>;</highlight></codeline>
<codeline lineno="736" refid="classtvm_1_1detail_1_1AttrExistVisitor_1ac6ae7aa3d30f25a953810bcc0d0a938f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exist_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="739" refid="classtvm_1_1detail_1_1AttrExistVisitor_1a345bb38b31b732a830eb9df3e16f6895" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref><sp/><ref refid="classtvm_1_1detail_1_1AttrExistVisitor_1a345bb38b31b732a830eb9df3e16f6895" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exist_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>key_)<sp/>exist_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrNopEntry" kindref="compound">AttrNopEntry</ref>();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal">};</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="747" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">AttrTriggerNonDefaultEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="748" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1ac7176780304bdf87b523bcae079e17ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">TSelf</ref><sp/>=<sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">AttrTriggerNonDefaultEntry&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a572356cfd8d20c258b03f7a5c62d3909" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a572356cfd8d20c258b03f7a5c62d3909" kindref="member">AttrTriggerNonDefaultEntry</ref>(</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>data)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>visitor_(visitor),<sp/>key_(key),<sp/>data_(data)<sp/>{}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1ae3ca1012c8502b2d3132cc81530c6c0e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1ae3ca1012c8502b2d3132cc81530c6c0e" kindref="member">~AttrTriggerNonDefaultEntry</ref>()<sp/>DMLC_THROW_EXCEPTION<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trigger_)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visitor_-&gt;Visit(key_,<sp/>data_);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1aa9eac8ca63d91dab631e14547ec4ce00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1aa9eac8ca63d91dab631e14547ec4ce00" kindref="member">describe</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1ae88a65b8d90a7c55fc6ea6bb1863b425" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1ae88a65b8d90a7c55fc6ea6bb1863b425" kindref="member">set_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref>()(value,<sp/>*data_))<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trigger_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a8cbd96cebaceae86c9c7613de9cc43dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a8cbd96cebaceae86c9c7613de9cc43dd" kindref="member">set_lower_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>begin)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771" refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a9d4c6a36abe06ee7e5edde567ae45f41" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">TSelf</ref>&amp;<sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry_1a9d4c6a36abe06ee7e5edde567ae45f41" kindref="member">set_upper_bound</ref>(DMLC_ATTRIBUTE_UNUSED<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor_;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>key_;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>T<sp/>*data_;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trigger_{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="780"><highlight class="normal">};</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor" kindref="compound">AttrNonDefaultVisitor</ref><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="784" refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor_1a8b27d05c6de24ab60b999c227e346337" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor_1a8b27d05c6de24ab60b999c227e346337" kindref="member">AttrNonDefaultVisitor</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>visitor_(visitor)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">AttrTriggerNonDefaultEntry&lt;T&gt;</ref></highlight></codeline>
<codeline lineno="789" refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor_1aa359d725f84781937ffd4eeb4445fc66" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor_1aa359d725f84781937ffd4eeb4445fc66" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>T*<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1detail_1_1AttrTriggerNonDefaultEntry" kindref="compound">AttrTriggerNonDefaultEntry&lt;T&gt;</ref>(visitor_,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>visitor_;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">};</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DerivedType&gt;</highlight></codeline>
<codeline lineno="805" refid="classtvm_1_1AttrsNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1AttrsNode" kindref="compound">AttrsNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode" kindref="compound">BaseAttrsNode</ref><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="807" refid="classtvm_1_1AttrsNode_1a5da687ced06b4f2dfa04b142a34a9c72" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1a5da687ced06b4f2dfa04b142a34a9c72" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrNormalVisitor" kindref="compound">::tvm::detail::AttrNormalVisitor</ref><sp/>vis(v);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(vis);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="classtvm_1_1AttrsNode_1acd05137ba529ac7cd07053e3da885205" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1acd05137ba529ac7cd07053e3da885205" kindref="member">VisitNonDefaultAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrNonDefaultVisitor" kindref="compound">::tvm::detail::AttrNonDefaultVisitor</ref><sp/>vis(v);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(vis);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="classtvm_1_1AttrsNode_1acfba199ef906818f35432d2e5532559a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1acfba199ef906818f35432d2e5532559a" kindref="member">InitByPackedArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">runtime::TVMArgs</ref>&amp;<sp/>args,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_unknown)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ(args.size()<sp/>%<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kLinearSearchBound<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>applies<sp/>two<sp/>stratgies<sp/>to<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.size()<sp/>&lt;<sp/>kLinearSearchBound)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>linear<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ffind<sp/>=<sp/>[&amp;args](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="classtvm_1_1runtime_1_1TVMArgValue" kindref="compound">runtime::TVMArgValue</ref>*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>args.size();<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(args.type_codes[i],<sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" kindref="member">kTVMStr</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!std::strcmp(key,<sp/>args.values[i].v_str))<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>args[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vis<sp/>=<sp/><ref refid="namespacetvm_1_1detail_1abe71237e8e483fd9277356234eca35d4" kindref="member">::tvm::detail::CreateInitVisitor</ref>(DerivedType::_type_key,<sp/>ffind);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(vis);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hit_count<sp/>=<sp/>vis.hit_count_;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>a<sp/>map<sp/>then<sp/>do<sp/>lookup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>runtime::TVMArgValue&gt;<sp/>kwargs;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>args.size();<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(args.type_codes[i],<sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" kindref="member">kTVMStr</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[args[i].operator<sp/>std::string()]<sp/>=<sp/>args[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ffind<sp/>=<sp/>[&amp;kwargs](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/><ref refid="classtvm_1_1runtime_1_1TVMArgValue" kindref="compound">runtime::TVMArgValue</ref>*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>kwargs.find(key);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>kwargs.end())<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vis<sp/>=<sp/><ref refid="namespacetvm_1_1detail_1abe71237e8e483fd9277356234eca35d4" kindref="member">::tvm::detail::CreateInitVisitor</ref>(DerivedType::_type_key,<sp/>ffind);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(vis);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hit_count<sp/>=<sp/>vis.hit_count_;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>handling,<sp/>slow<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit_count<sp/>*<sp/>2<sp/>!=<sp/>args.size()<sp/>&amp;&amp;<sp/>!allow_unknown)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>args.size();<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrExistVisitor" kindref="compound">::tvm::detail::AttrExistVisitor</ref><sp/>visitor;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrExistVisitor_1a42cfd0949c298dea06fb2c4fb39e188d" kindref="member">key_</ref><sp/>=<sp/>args[i].operator<sp/>std::string();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visitor.<ref refid="classtvm_1_1detail_1_1AttrExistVisitor_1ac6ae7aa3d30f25a953810bcc0d0a938f" kindref="member">exist_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>DerivedType::_type_key</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>does<sp/>not<sp/>have<sp/>field<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrExistVisitor_1a42cfd0949c298dea06fb2c4fb39e188d" kindref="member">key_</ref></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;,<sp/>Possible<sp/>fields:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;PrintDocString(os);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1AttrError_1a34484ea3d145d7de08a65c107f25d7e2" kindref="member">AttrError</ref>(os.str());</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="classtvm_1_1AttrsNode_1af8192054af4e2797953cc7b67625092f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1af8192054af4e2797953cc7b67625092f" kindref="member">SEqualReduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DerivedType*<sp/>other,<sp/><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>DerivedType*<sp/>pself<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsSEqualVisitor" kindref="compound">::tvm::detail::AttrsSEqualVisitor</ref><sp/>visitor(pself,<sp/>other,<sp/>equal);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrsSEqualVisitor_1aeda3a91f0b2d1a7a9a075828954ff77f" kindref="member">result_</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="classtvm_1_1AttrsNode_1ad6cc4d8a955e30b9f55c0b5367ccce38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1ad6cc4d8a955e30b9f55c0b5367ccce38" kindref="member">SHashReduce</ref>(<ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref><sp/>hash_reducer)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsSHashVisitor" kindref="compound">::tvm::detail::AttrsSHashVisitor</ref><sp/>visitor(hash_reducer);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887" refid="classtvm_1_1AttrsNode_1acefe615381b5d881870af9db7ce6a981" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;AttrFieldInfo&gt;</ref><sp/><ref refid="classtvm_1_1AttrsNode_1acefe615381b5d881870af9db7ce6a981" kindref="member">ListFieldInfo</ref>()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrDocVisitor" kindref="compound">::tvm::detail::AttrDocVisitor</ref><sp/>visitor;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrDocVisitor_1aa32707d90cd2cf8e5334afa4fe3d4722" kindref="member">fields_</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="classtvm_1_1AttrsNode_1a7f609d3a1b52df0b442793f043cc49ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1a7f609d3a1b52df0b442793f043cc49ae" kindref="member">ContentEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Object*<sp/>other,<sp/><ref refid="classtvm_1_1AttrsEqual" kindref="compound">AttrsEqual</ref><sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>DerivedType*<sp/>pself<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pself<sp/>==<sp/>other)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pself-&gt;type_index()<sp/>!=<sp/>other-&gt;type_index())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsEqualVisitor" kindref="compound">::tvm::detail::AttrsEqualVisitor</ref><sp/>visitor(pself,<sp/>other,<sp/><ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrsEqualVisitor_1a3903dd9e71e23344f1a807644d43707f" kindref="member">result_</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="classtvm_1_1AttrsNode_1abe3e0fd8559c5d446a136490d4dbee12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1AttrsNode_1abe3e0fd8559c5d446a136490d4dbee12" kindref="member">ContentHash</ref>(<ref refid="classtvm_1_1AttrsHash" kindref="compound">AttrsHash</ref><sp/>hasher)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1detail_1_1AttrsHashVisitor" kindref="compound">::tvm::detail::AttrsHashVisitor</ref><sp/>visitor(hasher);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrsHashVisitor_1ae9491954f6d62082106ec1a89297a344" kindref="member">result_</ref><sp/>=<sp/>this-&gt;GetTypeKeyHash();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()-&gt;__VisitAttrs__(visitor);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.<ref refid="classtvm_1_1detail_1_1AttrsHashVisitor_1ae9491954f6d62082106ec1a89297a344" kindref="member">result_</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>DerivedType*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">DerivedType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">DerivedType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal">};</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="919" refid="classtvm_1_1BaseAttrsNode_1aef9e5266d16e163ccc7b1b16c1ea3269" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode_1aef9e5266d16e163ccc7b1b16c1ea3269" kindref="member">BaseAttrsNode::InitBySeq</ref>(Args&amp;&amp;<sp/>...args)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">runtime::PackedFunc</ref><sp/>pf([</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1TVMArgs" kindref="compound">TVMArgs</ref>&amp;<sp/>args,<sp/><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref><sp/>*rv)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;InitByPackedArgs(args);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>pf(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="classtvm_1_1BaseAttrsNode_1a118837841487c80b157dbead88f18513" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1BaseAttrsNode_1a118837841487c80b157dbead88f18513" kindref="member">BaseAttrsNode::PrintDocString</ref>(std::ostream<sp/>&amp;os)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;AttrFieldInfo&gt;</ref><sp/>entry<sp/>=<sp/>this-&gt;ListFieldInfo();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classtvm_1_1AttrFieldInfo" kindref="compound">AttrFieldInfo</ref><sp/>info<sp/>:<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>info-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>info-&gt;type_info<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;description.length()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>info-&gt;description<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_IR_ATTRS_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/ir/attrs.h"/>
  </compounddef>
</doxygen>
