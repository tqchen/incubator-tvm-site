<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structtvm_1_1runtime_1_1vm_1_1VMFunction" kind="struct" language="C++" prot="public">
    <compoundname>tvm::runtime::vm::VMFunction</compoundname>
    <includes refid="vm_8h" local="no">vm.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ae2f6bf699f51fb33d1659d88ff6855e0" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tvm::runtime::vm::VMFunction::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The function&apos;s name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="401" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a6d480483112097888c71501504665693" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; tvm::runtime::vm::VMFunction::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
<para>The function parameter names. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="403" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a046985e3f5a2b4201298555514d5d356" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref> &gt;</type>
        <definition>std::vector&lt;Instruction&gt; tvm::runtime::vm::VMFunction::instructions</definition>
        <argsstring></argsstring>
        <name>instructions</name>
        <briefdescription>
<para>The instructions representing the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="405" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a5b910095e5c2826cf57793afb4f2078a" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref></type>
        <definition>Index tvm::runtime::vm::VMFunction::register_file_size</definition>
        <argsstring></argsstring>
        <name>register_file_size</name>
        <briefdescription>
<para>The size of the frame for this function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="407" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a49ca45b1b44655ea5e4fbb74966e0b35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::vm::VMFunction::VMFunction</definition>
        <argsstring>(const std::string &amp;name, std::vector&lt; std::string &gt; params, const std::vector&lt; Instruction &gt; &amp;instructions, Index register_file_size)</argsstring>
        <name>VMFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref> &gt; &amp;</type>
          <declname>instructions</declname>
        </param>
        <param>
          <type><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref></type>
          <declname>register_file_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="409" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="409" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ac0a863bff962be11a964e569c9fb2df3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::vm::VMFunction::VMFunction</definition>
        <argsstring>()</argsstring>
        <name>VMFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="417" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="417" bodyend="417"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a4dd5eae76553d1be115e71f38775e3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const VMFunction &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/vm.h" line="419" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A representation of a Relay function in the VM. </para>    </briefdescription>
    <detaileddescription>
<para>Contains metadata about the compiled function, as well as the compiled VM instructions. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="7596">
        <label>tvm::runtime::vm::VMFunction</label>
        <link refid="structtvm_1_1runtime_1_1vm_1_1VMFunction"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/runtime/vm.h" line="399" column="1" bodyfile="include/tvm/runtime/vm.h" bodystart="399" bodyend="420"/>
    <listofallmembers>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a046985e3f5a2b4201298555514d5d356" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>instructions</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ae2f6bf699f51fb33d1659d88ff6855e0" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>name</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a4dd5eae76553d1be115e71f38775e3fc" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>operator&lt;&lt;</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a6d480483112097888c71501504665693" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>params</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a5b910095e5c2826cf57793afb4f2078a" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>register_file_size</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a49ca45b1b44655ea5e4fbb74966e0b35" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>VMFunction</name></member>
      <member refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ac0a863bff962be11a964e569c9fb2df3" prot="public" virt="non-virtual"><scope>tvm::runtime::vm::VMFunction</scope><name>VMFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
