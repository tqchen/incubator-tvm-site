<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1TypeNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::TypeNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Object</basecompoundref>
    <derivedcompoundref refid="classtvm_1_1BaseTensorTypeNode" prot="public" virt="non-virtual">tvm::BaseTensorTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1FuncTypeNode" prot="public" virt="non-virtual">tvm::FuncTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1GlobalTypeVarNode" prot="public" virt="non-virtual">tvm::GlobalTypeVarNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1IncompleteTypeNode" prot="public" virt="non-virtual">tvm::IncompleteTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1PointerTypeNode" prot="public" virt="non-virtual">tvm::PointerTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1PrimTypeNode" prot="public" virt="non-virtual">tvm::PrimTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1RelayRefTypeNode" prot="public" virt="non-virtual">tvm::RelayRefTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1TupleTypeNode" prot="public" virt="non-virtual">tvm::TupleTypeNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1TypeCallNode" prot="public" virt="non-virtual">tvm::TypeCallNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1TypeConstraintNode" prot="public" virt="non-virtual">tvm::TypeConstraintNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1TypeDataNode" prot="public" virt="non-virtual">tvm::TypeDataNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1TypeVarNode" prot="public" virt="non-virtual">tvm::TypeVarNode</derivedcompoundref>
    <includes refid="ir_2type_8h" local="no">type.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1TypeNode_1a7b06d502a5162d51bb205691bbb95bb5" prot="public" static="no" mutable="yes">
        <type><ref refid="classtvm_1_1Span" kindref="compound">Span</ref></type>
        <definition>Span tvm::TypeNode::span</definition>
        <argsstring></argsstring>
        <name>span</name>
        <briefdescription>
<para><ref refid="classtvm_1_1Span" kindref="compound">Span</ref> that points to the original source code. Reserved debug information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="79" column="1" bodyfile="include/tvm/ir/type.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1TypeNode_1afa1561c887198fbf21aaadd4c13eb2c2" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::TypeNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;Type&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="81" column="1" bodyfile="include/tvm/ir/type.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1TypeNode_1ab02f7d165755f57689f986aca467a7e5" prot="public" static="yes" mutable="no">
        <type>constexpr const bool</type>
        <definition>constexpr const bool tvm::TypeNode::_type_has_method_sequal_reduce</definition>
        <argsstring></argsstring>
        <name>_type_has_method_sequal_reduce</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="82" column="1" bodyfile="include/tvm/ir/type.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1TypeNode_1a4179c7d7d55d1141cadfd19547fb1344" prot="public" static="yes" mutable="no">
        <type>constexpr const bool</type>
        <definition>constexpr const bool tvm::TypeNode::_type_has_method_shash_reduce</definition>
        <argsstring></argsstring>
        <name>_type_has_method_shash_reduce</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="83" column="1" bodyfile="include/tvm/ir/type.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1TypeNode_1abadff70e220806f889e81a0ad3bca0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::TypeNode::TVM_DECLARE_BASE_OBJECT_INFO</definition>
        <argsstring>(TypeNode, Object)</argsstring>
        <name>TVM_DECLARE_BASE_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1TypeNode" kindref="compound">TypeNode</ref></type>
        </param>
        <param>
          <type>Object</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1Type" kindref="compound">Type</ref> is the base type of all types. </para>    </briefdescription>
    <detaileddescription>
<para>Relay&apos;s type system contains following subclasses:</para><para><itemizedlist>
<listitem><para><ref refid="classtvm_1_1PrimType" kindref="compound">PrimType</ref>: type of primitive type values used in the low-level IR.</para></listitem><listitem><para><ref refid="classtvm_1_1FuncType" kindref="compound">FuncType</ref>: type of a function.</para></listitem><listitem><para><ref refid="classtvm_1_1TensorType" kindref="compound">TensorType</ref>: type of certain Tensor values in the expression.</para></listitem></itemizedlist>
</para><para>There are also advanced types to support generic(polymorphic types). <simplesect kind="see"><para><ref refid="classtvm_1_1Type" kindref="compound">Type</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7454">
        <label>tvm::TypeDataNode</label>
        <link refid="classtvm_1_1TypeDataNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7449">
        <label>tvm::RelayRefTypeNode</label>
        <link refid="classtvm_1_1RelayRefTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7455">
        <label>tvm::TypeVarNode</label>
        <link refid="classtvm_1_1TypeVarNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7447">
        <label>tvm::PointerTypeNode</label>
        <link refid="classtvm_1_1PointerTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7451">
        <label>tvm::TypeCallNode</label>
        <link refid="classtvm_1_1TypeCallNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7440">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="7441" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7441">
        <label>Object</label>
      </node>
      <node id="7442">
        <label>tvm::BaseTensorTypeNode</label>
        <link refid="classtvm_1_1BaseTensorTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7444">
        <label>tvm::FuncTypeNode</label>
        <link refid="classtvm_1_1FuncTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7446">
        <label>tvm::IncompleteTypeNode</label>
        <link refid="classtvm_1_1IncompleteTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7453">
        <label>tvm::TypeRelationNode</label>
        <link refid="classtvm_1_1TypeRelationNode"/>
        <childnode refid="7452" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7452">
        <label>tvm::TypeConstraintNode</label>
        <link refid="classtvm_1_1TypeConstraintNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7448">
        <label>tvm::PrimTypeNode</label>
        <link refid="classtvm_1_1PrimTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7450">
        <label>tvm::TupleTypeNode</label>
        <link refid="classtvm_1_1TupleTypeNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7443">
        <label>tvm::TensorTypeNode</label>
        <link refid="classtvm_1_1TensorTypeNode"/>
        <childnode refid="7442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7445">
        <label>tvm::GlobalTypeVarNode</label>
        <link refid="classtvm_1_1GlobalTypeVarNode"/>
        <childnode refid="7440" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7459">
        <label>ObjectRef</label>
      </node>
      <node id="7458">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="7459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7456">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="7457" relation="public-inheritance">
        </childnode>
        <childnode refid="7458" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
      </node>
      <node id="7457">
        <label>Object</label>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/type.h" line="73" column="1" bodyfile="include/tvm/ir/type.h" bodystart="73" bodyend="85"/>
    <listofallmembers>
      <member refid="classtvm_1_1TypeNode_1ab02f7d165755f57689f986aca467a7e5" prot="public" virt="non-virtual"><scope>tvm::TypeNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a4179c7d7d55d1141cadfd19547fb1344" prot="public" virt="non-virtual"><scope>tvm::TypeNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1TypeNode_1afa1561c887198fbf21aaadd4c13eb2c2" prot="public" virt="non-virtual"><scope>tvm::TypeNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1TypeNode_1a7b06d502a5162d51bb205691bbb95bb5" prot="public" virt="non-virtual"><scope>tvm::TypeNode</scope><name>span</name></member>
      <member refid="classtvm_1_1TypeNode_1abadff70e220806f889e81a0ad3bca0da" prot="public" virt="non-virtual"><scope>tvm::TypeNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
