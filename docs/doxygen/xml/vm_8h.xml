<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vm_8h" kind="file" language="C++">
    <compoundname>vm.h</compoundname>
    <includes refid="object_8h" local="no">tvm/runtime/object.h</includes>
    <includes refid="runtime_2memory_8h" local="no">tvm/runtime/memory.h</includes>
    <includes refid="packed__func_8h" local="no">tvm/runtime/packed_func.h</includes>
    <includes refid="registry_8h" local="no">tvm/runtime/registry.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="interpreter_8h" local="no">include/tvm/relay/interpreter.h</includedby>
    <incdepgraph>
      <node id="15260">
        <label>atomic</label>
      </node>
      <node id="15273">
        <label>functional</label>
      </node>
      <node id="15275">
        <label>limits</label>
      </node>
      <node id="15264">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="15265" relation="include">
        </childnode>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15251" relation="include">
        </childnode>
        <childnode refid="15261" relation="include">
        </childnode>
        <childnode refid="15266" relation="include">
        </childnode>
        <childnode refid="15267" relation="include">
        </childnode>
        <childnode refid="15258" relation="include">
        </childnode>
        <childnode refid="15268" relation="include">
        </childnode>
        <childnode refid="15263" relation="include">
        </childnode>
      </node>
      <node id="15263">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="15252" relation="include">
        </childnode>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15264" relation="include">
        </childnode>
        <childnode refid="15269" relation="include">
        </childnode>
        <childnode refid="15272" relation="include">
        </childnode>
        <childnode refid="15251" relation="include">
        </childnode>
        <childnode refid="15273" relation="include">
        </childnode>
        <childnode refid="15274" relation="include">
        </childnode>
        <childnode refid="15267" relation="include">
        </childnode>
        <childnode refid="15258" relation="include">
        </childnode>
        <childnode refid="15275" relation="include">
        </childnode>
        <childnode refid="15266" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
        <childnode refid="15257" relation="include">
        </childnode>
      </node>
      <node id="15251">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="15252" relation="include">
        </childnode>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15257" relation="include">
        </childnode>
        <childnode refid="15258" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
        <childnode refid="15260" relation="include">
        </childnode>
      </node>
      <node id="15255">
        <label>stdint.h</label>
      </node>
      <node id="15269">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15251" relation="include">
        </childnode>
        <childnode refid="15270" relation="include">
        </childnode>
        <childnode refid="15260" relation="include">
        </childnode>
        <childnode refid="15267" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
      </node>
      <node id="15250">
        <label>include/tvm/runtime/vm.h</label>
        <link refid="vm.h"/>
        <childnode refid="15251" relation="include">
        </childnode>
        <childnode refid="15261" relation="include">
        </childnode>
        <childnode refid="15263" relation="include">
        </childnode>
        <childnode refid="15276" relation="include">
        </childnode>
        <childnode refid="15266" relation="include">
        </childnode>
        <childnode refid="15258" relation="include">
        </childnode>
        <childnode refid="15268" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
        <childnode refid="15267" relation="include">
        </childnode>
      </node>
      <node id="15258">
        <label>string</label>
      </node>
      <node id="15256">
        <label>stddef.h</label>
      </node>
      <node id="15274">
        <label>tuple</label>
      </node>
      <node id="15252">
        <label>dmlc/logging.h</label>
      </node>
      <node id="15267">
        <label>vector</label>
      </node>
      <node id="15265">
        <label>dmlc/io.h</label>
      </node>
      <node id="15253">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="15254" relation="include">
        </childnode>
        <childnode refid="15255" relation="include">
        </childnode>
        <childnode refid="15256" relation="include">
        </childnode>
      </node>
      <node id="15259">
        <label>utility</label>
      </node>
      <node id="15271">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="15262">
        <label>cstdlib</label>
      </node>
      <node id="15270">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="15265" relation="include">
        </childnode>
        <childnode refid="15271" relation="include">
        </childnode>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15269" relation="include">
        </childnode>
      </node>
      <node id="15268">
        <label>unordered_map</label>
      </node>
      <node id="15261">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="15251" relation="include">
        </childnode>
        <childnode refid="15262" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
        <childnode refid="15257" relation="include">
        </childnode>
      </node>
      <node id="15276">
        <label>tvm/runtime/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="15263" relation="include">
        </childnode>
        <childnode refid="15258" relation="include">
        </childnode>
        <childnode refid="15267" relation="include">
        </childnode>
        <childnode refid="15259" relation="include">
        </childnode>
      </node>
      <node id="15272">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="15253" relation="include">
        </childnode>
        <childnode refid="15252" relation="include">
        </childnode>
        <childnode refid="15257" relation="include">
        </childnode>
      </node>
      <node id="15257">
        <label>type_traits</label>
      </node>
      <node id="15254">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="15266">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15278">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="15277">
        <label>include/tvm/runtime/vm.h</label>
        <link refid="vm.h"/>
        <childnode refid="15278" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" prot="public">tvm::runtime::vm::ClosureObj</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1Closure" prot="public">tvm::runtime::vm::Closure</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj" prot="public">tvm::runtime::vm::VMClosureObj</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1VMClosure" prot="public">tvm::runtime::vm::VMClosure</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1vm_1_1Instruction" prot="public">tvm::runtime::vm::Instruction</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" prot="public">tvm::runtime::vm::VMFunction</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1vm_1_1VMFrame" prot="public">tvm::runtime::vm::VMFrame</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1Executable" prot="public">tvm::runtime::vm::Executable</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine" prot="public">tvm::runtime::vm::VirtualMachine</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1runtime">tvm::runtime</innernamespace>
    <innernamespace refid="namespacetvm_1_1runtime_1_1vm">tvm::runtime::vm</innernamespace>
    <briefdescription>
<para>A virtual machine for executing Relay programs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TVM_RUNTIME_VM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_RUNTIME_VM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="object_8h" kindref="compound">tvm/runtime/object.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="runtime_2memory_8h" kindref="compound">tvm/runtime/memory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="packed__func_8h" kindref="compound">tvm/runtime/packed_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="registry_8h" kindref="compound">tvm/runtime/registry.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runtime<sp/>{</highlight></codeline>
<codeline lineno="39" refid="namespacetvm_1_1runtime_1_1vm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vm<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" kindref="compound">ClosureObj</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1ad7b69fbf85ebd1370aa6c000468131aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1ad7b69fbf85ebd1370aa6c000468131aa" kindref="member">_type_index</ref><sp/>=<sp/><ref refid="namespacetvm_1_1relay_1_1attr_1aef553198f20f8cd26b73cdfa61baec2a" kindref="member">TypeIndex::kClosure</ref>;</highlight></codeline>
<codeline lineno="48" refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1a2d48c3192358b0be23ba9fadbe7345a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1a2d48c3192358b0be23ba9fadbe7345a0" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Closure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1a4801d292ac517cef20eddf90acfd1c25" kindref="member">TVM_DECLARE_BASE_OBJECT_INFO</ref>(<ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" kindref="compound">ClosureObj</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classtvm_1_1runtime_1_1vm_1_1Closure" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1Closure" kindref="compound">Closure</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" kindref="member">TVM_DEFINE_OBJECT_REF_METHODS</ref>(<ref refid="classtvm_1_1runtime_1_1vm_1_1Closure" kindref="compound">Closure</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" kindref="compound">ClosureObj</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj" kindref="compound">VMClosureObj</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" kindref="compound">ClosureObj</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67" refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj_1af252588d00a4e0b7086edcea4cdfae6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj_1af252588d00a4e0b7086edcea4cdfae6f" kindref="member">func_index</ref>;</highlight></codeline>
<codeline lineno="69" refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj_1ab16d6772f7b61f37b47ee7aa30aaa4cd" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ObjectRef&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj_1ab16d6772f7b61f37b47ee7aa30aaa4cd" kindref="member">free_vars</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj_1a704c7fdf838ecd4295823f484818d94d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj_1a2d48c3192358b0be23ba9fadbe7345a0" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;vm.Closure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj" kindref="compound">VMClosureObj</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1ClosureObj" kindref="compound">ClosureObj</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classtvm_1_1runtime_1_1vm_1_1VMClosure" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosure" kindref="compound">VMClosure</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Closure" kindref="compound">Closure</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosure" kindref="compound">VMClosure</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>func_index,<sp/>std::vector&lt;ObjectRef&gt;<sp/>free_vars);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" kindref="member">TVM_DEFINE_OBJECT_REF_METHODS</ref>(<ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosure" kindref="compound">VMClosure</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Closure" kindref="compound">Closure</ref>,<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VMClosureObj" kindref="compound">VMClosureObj</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacetvm_1_1runtime_1_1vm_1a29161815faff1b5a221c0dae1c87bb4e" refkind="member"><highlight class="normal">constexpr<sp/>uint64_t<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a29161815faff1b5a221c0dae1c87bb4e" kindref="member">kTVMNDArrayListMagic</ref><sp/>=<sp/>0xF7E58D4F05049CB7;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>=<sp/>int64_t;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ec" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ec" kindref="member">Opcode</ref><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca6bc362dbf494c61ea117fe3c71ca48a5" kindref="member">Move</ref><sp/>=<sp/>0U,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaa4228a09dd66155de8e93a39245768bd" kindref="member">Ret</ref><sp/>=<sp/>1U,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecab9376e9e3c4d48f5e35a3f355ae1f74a" kindref="member">Invoke</ref><sp/>=<sp/>2U,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca46990b57941483ce17bb07e3af6da59c" kindref="member">InvokeClosure</ref><sp/>=<sp/>3U,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca97ad0208b167666da31720813abe1174" kindref="member">InvokePacked</ref><sp/>=<sp/>4U,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca2bcae1ed3af462c3c4533a22377a75ea" kindref="member">AllocTensor</ref><sp/>=<sp/>5U,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecac8086b44868c71384cfec25bf1f1a6e6" kindref="member">AllocTensorReg</ref><sp/>=<sp/>6U,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaee7bac5c7a1354c4d644508d4d82380e" kindref="member">AllocADT</ref><sp/>=<sp/>7U,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca564a5812fad1ae9a2db0d77614c5d8bc" kindref="member">AllocClosure</ref><sp/>=<sp/>8U,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecad3e2f43779da90565fa9c24f9175dc04" kindref="member">GetField</ref><sp/>=<sp/>9U,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca786887572f6ef1c20f2d8177cb2f1639" kindref="member">If</ref><sp/>=<sp/>10U,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca68b393c7b4c9e1672b7a1a05161390f7" kindref="member">LoadConst</ref><sp/>=<sp/>11U,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaae8fae3d74fdc80ef40995c3c6ca152e" kindref="member">Goto</ref><sp/>=<sp/>12U,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecabbfa589e414211911a8254ba7896b127" kindref="member">GetTag</ref><sp/>=<sp/>13U,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca9558cee150d88040130f7b86d8d5dc58" kindref="member">LoadConsti</ref><sp/>=<sp/>14U,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca882384ec38ce8d9582b57e70861730e4" kindref="member">Fatal</ref><sp/>=<sp/>15U,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaa15cc1ca91f763a268e85bbc298987d7" kindref="member">AllocStorage</ref><sp/>=<sp/>16U,</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structtvm_1_1runtime_1_1vm_1_1Instruction" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/>{</highlight></codeline>
<codeline lineno="129" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aa16a3e7e4030a69da0def6465d65e745" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ec" kindref="member">Opcode</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aa16a3e7e4030a69da0def6465d65e745" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a17f056cc4798d31c8bcee6903be8dd1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a17f056cc4798d31c8bcee6903be8dd1d" kindref="member">dst</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>AllocTensor<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a3412cabd3b4f42f106f56fc22257f6ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a3412cabd3b4f42f106f56fc22257f6ca" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="139" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a173d5883d5721b633350c0bfc24122b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a173d5883d5721b633350c0bfc24122b9" kindref="member">ndim</ref>;</highlight></codeline>
<codeline lineno="141" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a1354fe84e9c14c550a53f5de8f48d968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a1354fe84e9c14c550a53f5de8f48d968" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="143" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a91614b450055e58850c47949b3ed2714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DLDataType<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a91614b450055e58850c47949b3ed2714" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>alloc_tensor;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>AllocTensorReg<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>storage;</highlight></codeline>
<codeline lineno="149" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0a650382fcb2cacf9d6de7007aecf3c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0a650382fcb2cacf9d6de7007aecf3c5" kindref="member">shape_register</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DLDataType<sp/>dtype;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>alloc_tensor_reg;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>InvokeClosure<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a3a175836bc0893d99935f32911e45bfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a3a175836bc0893d99935f32911e45bfd" kindref="member">closure</ref>;</highlight></codeline>
<codeline lineno="157" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ad4b0bb0bc9012b8e34c6fd621390532f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ad4b0bb0bc9012b8e34c6fd621390532f" kindref="member">num_closure_args</ref>;</highlight></codeline>
<codeline lineno="159" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aee9011e3fab2ace2ae167db9a4394ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aee9011e3fab2ace2ae167db9a4394ee8" kindref="member">closure_args</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ae0d33229af059c727db2abd3616660e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ae0d33229af059c727db2abd3616660e0" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a50da0d506e9a2bffeaf75c702cf2cc33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a50da0d506e9a2bffeaf75c702cf2cc33" kindref="member">from</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>InvokePacked<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ac60e60c96d7bb22d8ac06169d5969232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ac60e60c96d7bb22d8ac06169d5969232" kindref="member">packed_index</ref>;</highlight></codeline>
<codeline lineno="173" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a360b264ed892e620935b648e5a91a5ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a360b264ed892e620935b648e5a91a5ea" kindref="member">arity</ref>;</highlight></codeline>
<codeline lineno="175" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a6bb6a1b8be0c078394f2336970aab1af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a6bb6a1b8be0c078394f2336970aab1af" kindref="member">output_size</ref>;</highlight></codeline>
<codeline lineno="177" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a5a39350aa263659863295deab57996ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a5a39350aa263659863295deab57996ed" kindref="member">packed_args</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1adebc0e955069bdaa543df3a908351532" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1adebc0e955069bdaa543df3a908351532" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="183" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a46879dbe84105fb621a6167f8d73b223" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a46879dbe84105fb621a6167f8d73b223" kindref="member">target</ref>;</highlight></codeline>
<codeline lineno="185" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a58e6e5eba0eba678b94273ef7deb1df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a58e6e5eba0eba678b94273ef7deb1df2" kindref="member">true_offset</ref>;</highlight></codeline>
<codeline lineno="187" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a20f3b29da9e03f2fa6977743c30a02de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a20f3b29da9e03f2fa6977743c30a02de" kindref="member">false_offset</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>if_op;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aa60b1a70648dbba4e7ec35a56a29a02d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aa60b1a70648dbba4e7ec35a56a29a02d" kindref="member">func_index</ref>;</highlight></codeline>
<codeline lineno="193" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a5d98a3b5b50e6fa9029d05f741c0bce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a5d98a3b5b50e6fa9029d05f741c0bce9" kindref="member">num_args</ref>;</highlight></codeline>
<codeline lineno="195" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a6fc678bca0e215303087981a79f23b7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a6fc678bca0e215303087981a79f23b7f" kindref="member">invoke_args_registers</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>LoadConst<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief<sp/>The<sp/>index<sp/>into<sp/>the<sp/>constant<sp/>pool.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a950d212c6493a47bfcbf368daa974853" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a950d212c6493a47bfcbf368daa974853" kindref="member">const_index</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>LoadConsti<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief<sp/>The<sp/>index<sp/>into<sp/>the<sp/>constant<sp/>pool.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ac1e5be6bd195486a884bd8a26b5d12f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ac1e5be6bd195486a884bd8a26b5d12f9" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>load_consti;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>Jump<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a721907173e94d564bff879792b29f789" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a721907173e94d564bff879792b29f789" kindref="member">pc_offset</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>Proj<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0ac4dada6519d071a819cc897cb15cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0ac4dada6519d071a819cc897cb15cf1" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="213" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a623d715b7b22a5fa853e8d000a6f1ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a623d715b7b22a5fa853e8d000a6f1ecd" kindref="member">field_index</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>GetTag<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>object;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>get_tag;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>AllocADT<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a7349fa2a2e70149d4af08289c539150f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a7349fa2a2e70149d4af08289c539150f" kindref="member">constructor_tag</ref>;</highlight></codeline>
<codeline lineno="223" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a45fa340afb68a10e339b9482fda65ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a45fa340afb68a10e339b9482fda65ba7" kindref="member">num_fields</ref>;</highlight></codeline>
<codeline lineno="225" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a25adb383014a74a9c4ac805beefe86b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a25adb383014a74a9c4ac805beefe86b6" kindref="member">datatype_fields</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>AllocClosure<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aaea1385d3562231a2e242faa0b51c616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1aaea1385d3562231a2e242faa0b51c616" kindref="member">clo_index</ref>;</highlight></codeline>
<codeline lineno="231" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1adbf563aa259f209ad20619c25921cdc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1adbf563aa259f209ad20619c25921cdc1" kindref="member">num_freevar</ref>;</highlight></codeline>
<codeline lineno="233" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a720b762553a301b526d66042afcd5ca3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a720b762553a301b526d66042afcd5ca3" kindref="member">free_vars</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="comment">/*<sp/>AllocStorage<sp/>Operands<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a4f907889caa7c348a3a2dea88e89b827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a4f907889caa7c348a3a2dea88e89b827" kindref="member">allocation_size</ref>;</highlight></codeline>
<codeline lineno="239" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ad56f744402eb006b4b8ec94ccbe840c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1ad56f744402eb006b4b8ec94ccbe840c3" kindref="member">alignment</ref>;</highlight></codeline>
<codeline lineno="241" refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0f48c1e04fe9ba735576bef37caf9cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DLDataType<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction_1a0f48c1e04fe9ba735576bef37caf9cce" kindref="member">dtype_hint</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>alloc_storage;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaa4228a09dd66155de8e93a39245768bd" kindref="member">Ret</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>return_reg);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca882384ec38ce8d9582b57e70861730e4" kindref="member">Fatal</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca97ad0208b167666da31720813abe1174" kindref="member">InvokePacked</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>packed_index,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>arity,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>output_size,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RegName&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca2bcae1ed3af462c3c4533a22377a75ea" kindref="member">AllocTensor</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>storage,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/><ref refid="namespacetopi_1a649c66231bc50f3ed98ac8bb6b6e2518" kindref="member">shape</ref>,<sp/>DLDataType<sp/>dtype,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecac8086b44868c71384cfec25bf1f1a6e6" kindref="member">AllocTensorReg</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>storage,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>shape_register,<sp/>DLDataType<sp/>dtype,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaee7bac5c7a1354c4d644508d4d82380e" kindref="member">AllocADT</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>tag,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>num_fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RegName&gt;&amp;<sp/>fields,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca564a5812fad1ae9a2db0d77614c5d8bc" kindref="member">AllocClosure</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>func_index,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>num_freevar,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RegName&gt;&amp;<sp/>free_vars,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecad3e2f43779da90565fa9c24f9175dc04" kindref="member">GetField</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>object_reg,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>field_index,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecabbfa589e414211911a8254ba7896b127" kindref="member">GetTag</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>object_reg,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca786887572f6ef1c20f2d8177cb2f1639" kindref="member">If</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>test,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>target,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>true_branch,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>false_branch);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaae8fae3d74fdc80ef40995c3c6ca152e" kindref="member">Goto</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>pc_offset);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecab9376e9e3c4d48f5e35a3f355ae1f74a" kindref="member">Invoke</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>func_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RegName&gt;&amp;<sp/>args,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca46990b57941483ce17bb07e3af6da59c" kindref="member">InvokeClosure</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>closure,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RegName&gt;&amp;<sp/>args,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca68b393c7b4c9e1672b7a1a05161390f7" kindref="member">LoadConst</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>const_index,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca9558cee150d88040130f7b86d8d5dc58" kindref="member">LoadConsti</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>val,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca6bc362dbf494c61ea117fe3c71ca48a5" kindref="member">Move</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>src,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecaa15cc1ca91f763a268e85bbc298987d7" kindref="member">AllocStorage</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>size,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>alignment,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DLDataType<sp/>dtype_hint,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>dst);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>&amp;<sp/>instr);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a69c32fbd96181f5c21d2c878ab285e4f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>&amp;<sp/>instr);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>~<ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetvm_1_1runtime_1af22b89284299c81d0c1802199af446d7" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>&amp;);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="401" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ae2f6bf699f51fb33d1659d88ff6855e0" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ae2f6bf699f51fb33d1659d88ff6855e0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="403" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a6d480483112097888c71501504665693" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a6d480483112097888c71501504665693" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="405" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a046985e3f5a2b4201298555514d5d356" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Instruction&gt;<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a046985e3f5a2b4201298555514d5d356" kindref="member">instructions</ref>;</highlight></codeline>
<codeline lineno="407" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a5b910095e5c2826cf57793afb4f2078a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a5b910095e5c2826cf57793afb4f2078a" kindref="member">register_file_size</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a49ca45b1b44655ea5e4fbb74966e0b35" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1a49ca45b1b44655ea5e4fbb74966e0b35" kindref="member">VMFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>std::vector&lt;std::string&gt;<sp/>params,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Instruction&gt;&amp;<sp/>instructions,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>register_file_size)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name(name),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params(params),</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instructions(instructions),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register_file_size(register_file_size)<sp/>{}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ac0a863bff962be11a964e569c9fb2df3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction_1ac0a863bff962be11a964e569c9fb2df3" kindref="member">VMFunction</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacetvm_1_1runtime_1af22b89284299c81d0c1802199af446d7" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref>&amp;);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">};</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame" kindref="compound">VMFrame</ref><sp/>{</highlight></codeline>
<codeline lineno="431" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1af798dec5a7e9049d6673093d2f3e7dea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1af798dec5a7e9049d6673093d2f3e7dea" kindref="member">pc</ref>;</highlight></codeline>
<codeline lineno="433" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a96a641c01ca63e6b146ef321319ec1f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a96a641c01ca63e6b146ef321319ec1f4" kindref="member">func_index</ref>;</highlight></codeline>
<codeline lineno="435" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a189d59efcb86fa14dc486c2852a5f01b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a189d59efcb86fa14dc486c2852a5f01b" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="437" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a6b1467a43cd8cb5123b08bbb4b39f428" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>*<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a6b1467a43cd8cb5123b08bbb4b39f428" kindref="member">code</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a583dcf6c0ed3f3d2916679382c7a0775" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ObjectRef&gt;<sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a583dcf6c0ed3f3d2916679382c7a0775" kindref="member">register_file</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a2f6c425a89ee6872ead9bc71ab87fdd1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a2f6c425a89ee6872ead9bc71ab87fdd1" kindref="member">caller_return_register</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a8f8c990ee4fa7cb7472f5440f2ca3bde" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFrame_1a8f8c990ee4fa7cb7472f5440f2ca3bde" kindref="member">VMFrame</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>pc,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>func_index,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>*<sp/>code,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>register_file_size)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pc(pc),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_index(func_index),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args(args),</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code(code),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register_file(register_file_size),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_return_register(0)<sp/>{}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">};</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classtvm_1_1runtime_1_1vm_1_1Executable" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable" kindref="compound">Executable</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ModuleNode" kindref="compound">ModuleNode</ref><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref><sp/>GetFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Object&gt;</ref>&amp;<sp/>sptr_to_self)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="structTVMByteArray" kindref="compound">TVMByteArray</ref><sp/>Save();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Module" kindref="compound">runtime::Module</ref><sp/>Load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Module" kindref="compound">runtime::Module</ref><sp/>lib);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>std::string<sp/>GetBytecode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>std::string<sp/>Stats()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1ae02ad73c98dd82f842796bfaa1d018a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Module" kindref="compound">runtime::Module</ref><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1ae02ad73c98dd82f842796bfaa1d018a4" kindref="member">GetLib</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lib;<sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetFunctionArity(std::string<sp/>func)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>std::string<sp/>GetFunctionParameterName(std::string<sp/>func,<sp/>uint32_t<sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a99432cdf9ce74de84f08feec9b08ed5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a99432cdf9ce74de84f08feec9b08ed5e" kindref="member">~Executable</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1aef4f3663ee57fcbdf2d775f4dbbe79dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1aef4f3663ee57fcbdf2d775f4dbbe79dc" kindref="member">type_key</ref>()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;VMExecutable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a0d69e974364e3f2eb643c25b77c74015" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Module" kindref="compound">runtime::Module</ref><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a0d69e974364e3f2eb643c25b77c74015" kindref="member">lib</ref>;</highlight></codeline>
<codeline lineno="570" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a64a56d507939eee688f485057a2c7d2e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ObjectRef&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a64a56d507939eee688f485057a2c7d2e" kindref="member">constants</ref>;</highlight></codeline>
<codeline lineno="572" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a9a808f0c63ae0d65ad8d625e3a7cb749" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Index&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1a9a808f0c63ae0d65ad8d625e3a7cb749" kindref="member">global_map</ref>;</highlight></codeline>
<codeline lineno="576" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1ab5a31e8670a4f20564abc48610a90e8c" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Index&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1ab5a31e8670a4f20564abc48610a90e8c" kindref="member">primitive_map</ref>;</highlight></codeline>
<codeline lineno="578" refid="classtvm_1_1runtime_1_1vm_1_1Executable_1af7d75150b6a98a7766a552d7e7e34a11" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;VMFunction&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable_1af7d75150b6a98a7766a552d7e7e34a11" kindref="member">functions</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveGlobalSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveConstantSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SavePrimitiveOpNames(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveCodeSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadGlobalSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadConstantSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadPrimitiveOpNames(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadCodeSection(dmlc::Stream*<sp/>strm);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>std::string<sp/>code_;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine" kindref="compound">VirtualMachine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ModuleNode" kindref="compound">runtime::ModuleNode</ref><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref><sp/>GetFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Object&gt;</ref>&amp;<sp/>sptr_to_self);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a62dead74c40c1a6ac03aec56918d98c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a62dead74c40c1a6ac03aec56918d98c7" kindref="member">~VirtualMachine</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a00f035566a720dbac56f5dea042fb0ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a00f035566a720dbac56f5dea042fb0ec" kindref="member">type_key</ref>()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;VirtualMachine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a6edbbbb71000617f644232de37d53338" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a6edbbbb71000617f644232de37d53338" kindref="member">VirtualMachine</ref>()<sp/>:<sp/>frames_(),<sp/>func_index_(0),<sp/>code_(nullptr),<sp/>pc_(0),<sp/>exec_(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadExecutable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable" kindref="compound">Executable</ref>*<sp/>exec);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="690" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ae2e5377a5dbf7335ed8989512457a2f5" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;PackedFunc&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ae2e5377a5dbf7335ed8989512457a2f5" kindref="member">packed_funcs_</ref>;</highlight></codeline>
<codeline lineno="692" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a4a268dec17fdd0942fe7dce78974783f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;VMFrame&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a4a268dec17fdd0942fe7dce78974783f" kindref="member">frames_</ref>;</highlight></codeline>
<codeline lineno="694" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1af9d51023b5d6451dac20d1a146ce5d38" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1af9d51023b5d6451dac20d1a146ce5d38" kindref="member">func_index_</ref>;</highlight></codeline>
<codeline lineno="696" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ab220bfa34c9abb2935c3b622d9bc03b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1Instruction" kindref="compound">Instruction</ref>*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ab220bfa34c9abb2935c3b622d9bc03b2" kindref="member">code_</ref>;</highlight></codeline>
<codeline lineno="698" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a583f4afb3292882df571a4fdf3cbf947" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a583f4afb3292882df571a4fdf3cbf947" kindref="member">pc_</ref>;</highlight></codeline>
<codeline lineno="700" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1afd0505002da7e7f86f82b2f3325ff127" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1afd0505002da7e7f86f82b2f3325ff127" kindref="member">return_register_</ref>;</highlight></codeline>
<codeline lineno="702" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ad478992798013d0e3a72d220003c8881" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1Executable" kindref="compound">Executable</ref>*<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ad478992798013d0e3a72d220003c8881" kindref="member">exec_</ref>;</highlight></codeline>
<codeline lineno="704" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a7d46e436c01133647cd303719752f456" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::vector&lt;ObjectRef&gt;&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1a7d46e436c01133647cd303719752f456" kindref="member">inputs_</ref>;</highlight></codeline>
<codeline lineno="706" refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ae52ecf76ef854f8288ca2baa8f9d01ed" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;TVMContext&gt;<sp/><ref refid="classtvm_1_1runtime_1_1vm_1_1VirtualMachine_1ae52ecf76ef854f8288ca2baa8f9d01ed" kindref="member">ctxs_</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PushFrame(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>arg_count,<sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>ret_pc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref>&amp;<sp/>vm_func);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>PopFrame();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteRegister(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>reg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>obj);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/>ReadRegister(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>reg)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>int32_t<sp/>LoadScalarInt(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3bbbf700719e9dc3dda2bc25210c18ae" kindref="member">RegName</ref><sp/>reg)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecab9376e9e3c4d48f5e35a3f355ae1f74a" kindref="member">Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref>&amp;<sp/>func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectRef&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(@jroesch):<sp/>I<sp/>really<sp/>would<sp/>like<sp/>this<sp/>to<sp/>be<sp/>a<sp/>global<sp/>variable.</highlight></codeline>
<codeline lineno="753"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870ecab9376e9e3c4d48f5e35a3f355ae1f74a" kindref="member">Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectRef&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a8d8d95ce8d629c7213f2f595917870eca97ad0208b167666da31720813abe1174" kindref="member">InvokePacked</ref>(<ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>packed_index,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref>&amp;<sp/>func,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>arg_count,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1runtime_1_1vm_1a3597867d2db714bf760876a23d6b7d3d" kindref="member">Index</ref><sp/>output_size,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectRef&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TVMContext&gt;&amp;<sp/>contexts);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RunLoop();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref><sp/>GetParamsContext()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InvokeGlobal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1vm_1_1VMFunction" kindref="compound">VMFunction</ref>&amp;<sp/>func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ObjectRef&gt;&amp;<sp/>args);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>std::vector&lt;ObjectRef&gt;<sp/>const_pool_;</highlight></codeline>
<codeline lineno="797"><highlight class="normal">};</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_RUNTIME_VM_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/runtime/vm.h"/>
  </compounddef>
</doxygen>
