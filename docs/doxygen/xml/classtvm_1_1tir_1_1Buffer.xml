<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1Buffer" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::Buffer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1tir_1_1Buffer_1aba3e2da6a30d5495fb89307b8db2926a" prot="public" static="no">
        <type><ref refid="classtvm_1_1tir_1_1BufferNode" kindref="compound">BufferNode</ref></type>
        <definition>using tvm::tir::Buffer::ContainerType =  BufferNode</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
<para>specify container node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="100" column="1" bodyfile="include/tvm/tir/buffer.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a0f8d32c4cedbf65f645c22ed9e33fa45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::Buffer::Buffer</definition>
        <argsstring>()</argsstring>
        <name>Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="53" column="1" bodyfile="include/tvm/tir/buffer.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1ac033e5ebb29588c789152fb01dc99eff" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::Buffer::Buffer</definition>
        <argsstring>(ObjectPtr&lt; Object &gt; n)</argsstring>
        <name>Buffer</name>
        <param>
          <type>ObjectPtr&lt; Object &gt;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="54" column="1" bodyfile="include/tvm/tir/buffer.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a4e76e165819e6acfdd5929480774d8f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref></type>
        <definition>Buffer tvm::tir::Buffer::MakeStrideView</definition>
        <argsstring>() const </argsstring>
        <name>MakeStrideView</name>
        <briefdescription>
<para>Return a new buffer that is equivalent with current one but always add stride field. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The strided version of the buffer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a4ca636501d4d64d760b6762fa606f019" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref></type>
        <definition>Buffer tvm::tir::Buffer::MakeSlice</definition>
        <argsstring>(Array&lt; PrimExpr &gt; begins, Array&lt; PrimExpr &gt; extents) const </argsstring>
        <name>MakeSlice</name>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
          <declname>begins</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
          <declname>extents</declname>
        </param>
        <briefdescription>
<para>Make a new symbolic buffer representing a slice of the buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begins</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning position of each dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extents</parametername>
</parameternamelist>
<parameterdescription>
<para>The extent of each dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function will make target buffer as compact as possible. If stride is not needed in the slice, it won&apos;t be presented </para></simplesect>
<simplesect kind="return"><para>the result buffer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a746b074c21acb1782fa1079be5337128" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::Buffer::access_ptr</definition>
        <argsstring>(int access_mask, DataType ptr_type=DataType::Handle(), int content_lanes=1, PrimExpr offset=make_const(DataType::Int(32), 0)) const </argsstring>
        <name>access_ptr</name>
        <param>
          <type>int</type>
          <declname>access_mask</declname>
        </param>
        <param>
          <type><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref></type>
          <declname>ptr_type</declname>
          <defval><ref refid="classtvm_1_1runtime_1_1DataType_1aebad9f7235dd20af649fb5c2113797b8" kindref="member">DataType::Handle</ref>()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>content_lanes</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>offset</declname>
          <defval><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32), 0)</defval>
        </param>
        <briefdescription>
<para>Get access ptr to the entire buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>access_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The access mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content_lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes for the (data) type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a0fb4f8f83e61b8c8a6c2d21331dcdd8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::Buffer::vload</definition>
        <argsstring>(Array&lt; PrimExpr &gt; begin, DataType dtype) const </argsstring>
        <name>vload</name>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
<para>Create an Expr that does a vector load at begin index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type to be loaded. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a9ea73d1913c16bcd7c1417a202c05bc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>Stmt tvm::tir::Buffer::vstore</definition>
        <argsstring>(Array&lt; PrimExpr &gt; begin, PrimExpr value) const </argsstring>
        <name>vstore</name>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref> that does a vector store at begin index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Buffer_1a5f3eca6b64a0cc6f1be7d50224c217c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1BufferNode" kindref="compound">BufferNode</ref> *</type>
        <definition>const BufferNode * tvm::tir::Buffer::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>access the internal node container </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the internal node container </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/buffer.h" line="97" column="1" bodyfile="include/tvm/tir/buffer.h" bodystart="202" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref> is a symbolic n-darray structure. It is a composition of primitive symbolic types, used to specify the memory layout of the Tensor used in program input. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4470">
        <label>ObjectRef</label>
      </node>
      <node id="4469">
        <label>tvm::tir::Buffer</label>
        <link refid="classtvm_1_1tir_1_1Buffer"/>
        <childnode refid="4470" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4472">
        <label>ObjectRef</label>
      </node>
      <node id="4471">
        <label>tvm::tir::Buffer</label>
        <link refid="classtvm_1_1tir_1_1Buffer"/>
        <childnode refid="4472" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/buffer.h" line="51" column="1" bodyfile="include/tvm/tir/buffer.h" bodystart="51" bodyend="101"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1Buffer_1a746b074c21acb1782fa1079be5337128" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>access_ptr</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a0f8d32c4cedbf65f645c22ed9e33fa45" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>Buffer</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1ac033e5ebb29588c789152fb01dc99eff" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>Buffer</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1aba3e2da6a30d5495fb89307b8db2926a" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>ContainerType</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a4ca636501d4d64d760b6762fa606f019" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>MakeSlice</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a4e76e165819e6acfdd5929480774d8f7" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>MakeStrideView</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a5f3eca6b64a0cc6f1be7d50224c217c4" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a0fb4f8f83e61b8c8a6c2d21331dcdd8f" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>vload</name></member>
      <member refid="classtvm_1_1tir_1_1Buffer_1a9ea73d1913c16bcd7c1417a202c05bc3" prot="public" virt="non-virtual"><scope>tvm::tir::Buffer</scope><name>vstore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
