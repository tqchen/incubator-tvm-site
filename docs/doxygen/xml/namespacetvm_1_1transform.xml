<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacetvm_1_1transform" kind="namespace" language="C++">
    <compoundname>tvm::transform</compoundname>
    <innerclass refid="classtvm_1_1transform_1_1Pass" prot="public">tvm::transform::Pass</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1PassContext" prot="public">tvm::transform::PassContext</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1PassContextNode" prot="public">tvm::transform::PassContextNode</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1PassInfo" prot="public">tvm::transform::PassInfo</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1PassInfoNode" prot="public">tvm::transform::PassInfoNode</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1PassNode" prot="public">tvm::transform::PassNode</innerclass>
    <innerclass refid="classtvm_1_1transform_1_1Sequential" prot="public">tvm::transform::Sequential</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacetvm_1_1transform_1a0904052a95bd90a669cba07770694652" prot="public" static="no">
        <type><ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">runtime::TypedPackedFunc</ref>&lt; void(const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;ir_module, const <ref refid="classtvm_1_1transform_1_1PassInfo" kindref="compound">PassInfo</ref> &amp;ctx, bool is_before)&gt;</type>
        <definition>using tvm::transform::TraceFunc = typedef runtime::TypedPackedFunc&lt;void(const IRModule&amp; ir_module, const PassInfo&amp; ctx, bool is_before)&gt;</definition>
        <argsstring></argsstring>
        <name>TraceFunc</name>
        <briefdescription>
<para>A callback for tracing passes, useful for debugging and logging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="74" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetvm_1_1transform_1a6b8fcf03bde56b5b0ad51ad9a0f5fd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1transform_1_1Pass" kindref="compound">Pass</ref></type>
        <definition>Pass tvm::transform::CreateModulePass</definition>
        <argsstring>(const runtime::TypedPackedFunc&lt; IRModule(IRModule, PassContext)&gt; &amp;pass_func, int opt_level, const std::string &amp;name, const Array&lt; PrimExpr &gt; &amp;required)</argsstring>
        <name>CreateModulePass</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">runtime::TypedPackedFunc</ref>&lt; <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref>(<ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref>, <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref>)&gt; &amp;</type>
          <declname>pass_func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opt_level</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt; &amp;</type>
          <declname>required</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="345" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/tvm/ir/transform.h" line="66" column="1"/>
  </compounddef>
</doxygen>
