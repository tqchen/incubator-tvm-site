<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1Var" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::Var</compoundname>
    <basecompoundref refid="classtvm_1_1PrimExpr" prot="public" virt="non-virtual">tvm::PrimExpr</basecompoundref>
    <derivedcompoundref refid="classtvm_1_1tir_1_1SizeVar" prot="public" virt="non-virtual">tvm::tir::SizeVar</derivedcompoundref>
    <includes refid="tir_2expr_8h" local="no">expr.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1tir_1_1Var_1a4b52ee26bf893b70e12087eb5700da6a" prot="public" static="no">
        <type><ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref></type>
        <definition>using tvm::tir::Var::ContainerType =  VarNode</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
<para>type indicate the container type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="132" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a21ba7568a83bfc2a5896f9e0ff181129" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::Var::Var</definition>
        <argsstring>(ObjectPtr&lt; Object &gt; n)</argsstring>
        <name>Var</name>
        <param>
          <type>ObjectPtr&lt; Object &gt;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="97" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a04d3346f5887ed96b8ba1c130d9393eb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::Var::Var</definition>
        <argsstring>(std::string name_hint=&quot;v&quot;, DataType dtype=DataType::Int(32))</argsstring>
        <name>Var</name>
        <param>
          <type>std::string</type>
          <declname>name_hint</declname>
          <defval>&quot;v&quot;</defval>
        </param>
        <param>
          <type><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref></type>
          <declname>dtype</declname>
          <defval><ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32)</defval>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>data type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a435e58da4d11329d9cb70ce77a15f78d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::Var::Var</definition>
        <argsstring>(std::string name_hint, Type type_annotation)</argsstring>
        <name>Var</name>
        <param>
          <type>std::string</type>
          <declname>name_hint</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Type" kindref="compound">Type</ref></type>
          <declname>type_annotation</declname>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref> which provides a more detailed type annotation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_annotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The type annotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a614c7820e199ca7251bc64cac4210465" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref></type>
        <definition>Var tvm::tir::Var::copy_with_suffix</definition>
        <argsstring>(const std::string &amp;suffix) const </argsstring>
        <name>copy_with_suffix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Make a new copy of var with same type, append suffix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>The suffix to be appended. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new <ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref> copy </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a15138d962c7fee302e1024cafe05b15a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref> *</type>
        <definition>const VarNode* tvm::tir::Var::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Get pointer to the internal value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the corresponding Variable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="121" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1Var_1a73a8df326077f135e3d97ea428bbe785" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref> *</type>
        <definition>const VarNode* tvm::tir::Var::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
<para>Get pointer to the internal value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the corresponding Variable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="128" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="128" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a named variable in TVM </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7530">
        <label>ObjectRef</label>
      </node>
      <node id="7531">
        <label>tvm::tir::SizeVar</label>
        <link refid="classtvm_1_1tir_1_1SizeVar"/>
        <childnode refid="7527" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7528">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="7529" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7529">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="7530" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7527">
        <label>tvm::tir::Var</label>
        <link refid="classtvm_1_1tir_1_1Var"/>
        <childnode refid="7528" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7535">
        <label>ObjectRef</label>
      </node>
      <node id="7533">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="7534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7534">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="7535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7532">
        <label>tvm::tir::Var</label>
        <link refid="classtvm_1_1tir_1_1Var"/>
        <childnode refid="7533" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/expr.h" line="95" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="95" bodyend="133"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1Var_1a4b52ee26bf893b70e12087eb5700da6a" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>ContainerType</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a614c7820e199ca7251bc64cac4210465" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>copy_with_suffix</name></member>
      <member refid="classtvm_1_1PrimExpr_1a1098008618699c33adfbd19e582f9ffd" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>dtype</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a73a8df326077f135e3d97ea428bbe785" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>get</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a15138d962c7fee302e1024cafe05b15a" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1PrimExpr_1a7f0ca30e951608a0b36a77a66d4d19e0" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>PrimExpr</name></member>
      <member refid="classtvm_1_1PrimExpr_1a756d3f8b17b019560946524951ae6118" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>PrimExpr</name></member>
      <member refid="classtvm_1_1PrimExpr_1aa7ef79a97755173304b89581e79d485a" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>PrimExpr</name></member>
      <member refid="classtvm_1_1PrimExpr_1a3ad47a31c4ce693077a93f154b2b1e12" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
      <member refid="classtvm_1_1BaseExpr_1aa513c6abed6e5b76c7fc9441649b3e4c" prot="public" virt="non-virtual" ambiguityscope="tvm::BaseExpr::"><scope>tvm::tir::Var</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a21ba7568a83bfc2a5896f9e0ff181129" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>Var</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a04d3346f5887ed96b8ba1c130d9393eb" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>Var</name></member>
      <member refid="classtvm_1_1tir_1_1Var_1a435e58da4d11329d9cb70ce77a15f78d" prot="public" virt="non-virtual"><scope>tvm::tir::Var</scope><name>Var</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
