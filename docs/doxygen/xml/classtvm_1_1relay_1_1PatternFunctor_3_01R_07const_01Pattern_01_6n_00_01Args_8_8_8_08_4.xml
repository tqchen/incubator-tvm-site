<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4" kind="class" language="C++" prot="public">
    <compoundname>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</compoundname>
    <includes refid="pattern__functor_8h" local="no">pattern_functor.h</includes>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1af21386af57c2d83da162053db887c1c9" prot="private" static="no">
        <type><ref refid="classtvm_1_1relay_1_1PatternFunctor" kindref="compound">PatternFunctor</ref>&lt; R(const <ref refid="classtvm_1_1relay_1_1Pattern" kindref="compound">Pattern</ref> &amp;n, Args...)&gt;</type>
        <definition>using tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::TSelf =  PatternFunctor&lt;R(const Pattern&amp; n, Args...)&gt;</definition>
        <argsstring></argsstring>
        <name>TSelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="70" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1a15204f38c5fc5384bbed07e381953187" prot="private" static="no">
        <type><ref refid="classtvm_1_1NodeFunctor" kindref="compound">tvm::NodeFunctor</ref>&lt; R(const ObjectRef &amp;n, <ref refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4" kindref="compound">TSelf</ref> *self, Args...)&gt;</type>
        <definition>using tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::FType =  tvm::NodeFunctor&lt;R(const ObjectRef&amp; n, TSelf* self, Args...)&gt;</definition>
        <argsstring></argsstring>
        <name>FType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="71" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad3446527dc668d6e1b3e753378d4e4d6" prot="public" static="no">
        <type>R</type>
        <definition>using tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::result_type =  R</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
<para>the result type of this functor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="75" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1a4c56c067b4d7406fc5267fca717833a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::~PatternFunctor</definition>
        <argsstring>()</argsstring>
        <name>~PatternFunctor</name>
        <briefdescription>
<para>virtual destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="77" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ab69db8ff3c90fc7a91673a5b9f7493f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::operator()</definition>
        <argsstring>(const Pattern &amp;n, Args...args)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1Pattern" kindref="compound">Pattern</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Same as call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="84" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1abcf80d4f5b0aca1c3a373000b747673c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPattern</definition>
        <argsstring>(const Pattern &amp;n, Args...args)</argsstring>
        <name>VisitPattern</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1Pattern" kindref="compound">Pattern</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>The functor call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="93" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad8e3b155b95a5504666c182a470c99d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPattern_</definition>
        <argsstring>(const PatternWildcardNode *op, Args...args)</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternWildcardNode" kindref="compound">PatternWildcardNode</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="99" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="99" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aadcac1521b0deb3a6c35a6ca89c02794" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPattern_</definition>
        <argsstring>(const PatternVarNode *op, Args...args)</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternVarNode" kindref="compound">PatternVarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="101" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aa770e826edec27f4e8c28dd9f531d190" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPattern_</definition>
        <argsstring>(const PatternConstructorNode *op, Args...args)</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternConstructorNode" kindref="compound">PatternConstructorNode</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="103" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="103" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aec2751be0d75f51e6699672bd06492e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPattern_</definition>
        <argsstring>(const PatternTupleNode *op, Args...args)</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternTupleNode" kindref="compound">PatternTupleNode</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="105" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="105" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad71efcd0b9a937b35f7fd4e2b6131773" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>R</type>
        <definition>virtual R tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::VisitPatternDefault_</definition>
        <argsstring>(const Object *op, Args...)</argsstring>
        <name>VisitPatternDefault_</name>
        <param>
          <type>const Object *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="107" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1af99f0993f59d447627aee99980ee9648" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1NodeFunctor" kindref="compound">FType</ref></type>
        <definition>static FType tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;::InitVTable</definition>
        <argsstring>()</argsstring>
        <name>InitVTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="114" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="114" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6090">
        <label>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</label>
        <link refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/pattern_functor.h" line="68" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="68" bodyend="123"/>
    <listofallmembers>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1a15204f38c5fc5384bbed07e381953187" prot="private" virt="non-virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>FType</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1af99f0993f59d447627aee99980ee9648" prot="private" virt="non-virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>InitVTable</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ab69db8ff3c90fc7a91673a5b9f7493f3" prot="public" virt="non-virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>operator()</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad3446527dc668d6e1b3e753378d4e4d6" prot="public" virt="non-virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>result_type</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1af21386af57c2d83da162053db887c1c9" prot="private" virt="non-virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>TSelf</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1abcf80d4f5b0aca1c3a373000b747673c" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPattern</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad8e3b155b95a5504666c182a470c99d7" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aadcac1521b0deb3a6c35a6ca89c02794" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aa770e826edec27f4e8c28dd9f531d190" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1aec2751be0d75f51e6699672bd06492e7" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1ad71efcd0b9a937b35f7fd4e2b6131773" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>VisitPatternDefault_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternFunctor_3_01R_07const_01Pattern_01_6n_00_01Args_8_8_8_08_4_1a4c56c067b4d7406fc5267fca717833a8" prot="public" virt="virtual"><scope>tvm::relay::PatternFunctor&lt; R(const Pattern &amp;n, Args...)&gt;</scope><name>~PatternFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
