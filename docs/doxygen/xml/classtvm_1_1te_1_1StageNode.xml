<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1te_1_1StageNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::te::StageNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Object</basecompoundref>
    <includes refid="schedule_8h" local="no">schedule.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a1e98ce6b9c48fd7ec5077c06f35d2ae1" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref></type>
        <definition>Operation tvm::te::StageNode::op</definition>
        <argsstring></argsstring>
        <name>op</name>
        <briefdescription>
<para>The operation of stage, can be different from original op. If it is null, then this stage is a group stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="450" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a3e7c2fb80404a12a9e843fcb38accd78" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref></type>
        <definition>Operation tvm::te::StageNode::origin_op</definition>
        <argsstring></argsstring>
        <name>origin_op</name>
        <briefdescription>
<para>The original operator. The op field can change during schedule to alternate the dataflow, while origin_op remains fixed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="456" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1ae4592502d1c99f2515be61a6503bb7a6" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref> &gt;</type>
        <definition>Array&lt;IterVar&gt; tvm::te::StageNode::all_iter_vars</definition>
        <argsstring></argsstring>
        <name>all_iter_vars</name>
        <briefdescription>
<para>All the nodes in the iter var. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="458" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a80162bcc647f01efa9ab97da3ca57410" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref> &gt;</type>
        <definition>Array&lt;IterVar&gt; tvm::te::StageNode::leaf_iter_vars</definition>
        <argsstring></argsstring>
        <name>leaf_iter_vars</name>
        <briefdescription>
<para>The current active leaf iter vars in the stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="460" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1ac6bfe27a0802f257d467667522d0cbee" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref> &gt;</type>
        <definition>Array&lt;IterVar&gt; tvm::te::StageNode::env_threads</definition>
        <argsstring></argsstring>
        <name>env_threads</name>
        <briefdescription>
<para>Specify threads to be launched at the stage. This is only valid for composite ops such as Scan. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental primitive: used for thread persistence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="466" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a8f4ba7f2931b3541c12734af511600a7" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::te::StageNode::store_predicate</definition>
        <argsstring></argsstring>
        <name>store_predicate</name>
        <briefdescription>
<para>The predicate under which store can happen Use this when there can be duplicated threads doing the same store. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Experimental primitive: used by cross thread-reduction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="472" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1ad1c0f8dc1f0f406a2abcd05fdad8fad5" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1IterVarRelation" kindref="compound">IterVarRelation</ref> &gt;</type>
        <definition>Array&lt;IterVarRelation&gt; tvm::te::StageNode::relations</definition>
        <argsstring></argsstring>
        <name>relations</name>
        <briefdescription>
<para>The relation bwteen of IterVars. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="474" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a1d1f5c5e99f0c0c5d09a497b5c05443f" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref>, <ref refid="classtvm_1_1te_1_1IterVarAttr" kindref="compound">IterVarAttr</ref> &gt;</type>
        <definition>Map&lt;IterVar, IterVarAttr&gt; tvm::te::StageNode::iter_var_attrs</definition>
        <argsstring></argsstring>
        <name>iter_var_attrs</name>
        <briefdescription>
<para>additional attributes about iter var. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="476" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a1e77f0ad8149a5aabaa8a98907ff3bed" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1_1te_1a7693a274748dadfa2eaa35f5ce9008a5" kindref="member">AttachType</ref></type>
        <definition>AttachType tvm::te::StageNode::attach_type</definition>
        <argsstring></argsstring>
        <name>attach_type</name>
        <initializer>{<ref refid="namespacetvm_1_1te_1a7693a274748dadfa2eaa35f5ce9008a5aac738a0b856206b6347a1f4899f31bfa" kindref="member">kGroupRoot</ref>}</initializer>
        <briefdescription>
<para>The attachment type of the schedule. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="478" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1ad8a1f14b199103ecf22e7bf021eff8d4" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref></type>
        <definition>IterVar tvm::te::StageNode::attach_ivar</definition>
        <argsstring></argsstring>
        <name>attach_ivar</name>
        <briefdescription>
<para>The attach point of this schedule. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="480" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a75c8cf7d913a913e34abcaf6797540a5" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref></type>
        <definition>Stage tvm::te::StageNode::attach_stage</definition>
        <argsstring></argsstring>
        <name>attach_stage</name>
        <briefdescription>
<para>The stage this node attaches to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="482" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a55acf027a39738cd1ddd063b27086038" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tvm::te::StageNode::scope</definition>
        <argsstring></argsstring>
        <name>scope</name>
        <briefdescription>
<para>The thread storage scope level of the stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="484" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1af5cc9e6c2276cf8abde8f437f8bdbda4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tvm::te::StageNode::is_output</definition>
        <argsstring></argsstring>
        <name>is_output</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether this is an output stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="486" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a1c4533e83d0b9ae647f5f4dcd15e4208" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tvm::te::StageNode::is_opengl</definition>
        <argsstring></argsstring>
        <name>is_opengl</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether this is an OpenGL stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="488" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1af5cb8c43f82eac4021fd06ab7c475f82" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tvm::te::StageNode::double_buffer</definition>
        <argsstring></argsstring>
        <name>double_buffer</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether apply double buffer optimization to this stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="490" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a02935c5eeeaa3ae794e971d449b5e377" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref></type>
        <definition>Stage tvm::te::StageNode::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <briefdescription>
<para>The parent group of the current stage. The stage cannot be assigned to stages outside the group. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="495" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1a98769dd08ea20c6d72f9abfe80d20090" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tvm::te::StageNode::num_child_stages</definition>
        <argsstring></argsstring>
        <name>num_child_stages</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Number of direct child stages, only used for group stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="497" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1StageNode_1af06a8dd105358f2c3aa5f65c8014f13f" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::te::StageNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;Stage&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="518" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1te_1_1StageNode_1ae86cbe717f924c4e30cef2a1a086308a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::te::StageNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="499" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="499" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1StageNode_1a51b9748fd004dc2f3fcb23163eb78e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::te::StageNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(StageNode, Object)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1te_1_1StageNode" kindref="compound">StageNode</ref></type>
        </param>
        <param>
          <type>Object</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="519" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>represents a stage. </para>    </briefdescription>
    <detaileddescription>
<para>relations form a Directed acylic hypergraph in bipartite manner. <ref refid="classtvm_1_1With" kindref="compound">With</ref> each node is represented by a IterVar, and each hyper-edge is represented by a <ref refid="classtvm_1_1te_1_1IterVarRelation" kindref="compound">IterVarRelation</ref>. The relations connects the IterVars in the graph.</para><para>Besides typical stage that corresponds to operations. There is also group stage, which groups stages together. Each stage&apos;s group(given by group) represent an constraint, the stage can only be attached to stages within the group.</para><para>The group stage node can be attached to IterVars as in normal stage. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="6946">
        <label>tvm::te::StageNode</label>
        <link refid="classtvm_1_1te_1_1StageNode"/>
        <childnode refid="6947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6947">
        <label>Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6958">
        <label>tvm::te::Operation</label>
        <link refid="classtvm_1_1te_1_1Operation"/>
        <childnode refid="6959" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6951">
        <label>ObjectRef</label>
      </node>
      <node id="6959">
        <label>tvm::tir::FunctionRef</label>
        <link refid="classtvm_1_1tir_1_1FunctionRef"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6948">
        <label>tvm::te::StageNode</label>
        <link refid="classtvm_1_1te_1_1StageNode"/>
        <childnode refid="6949" relation="public-inheritance">
        </childnode>
        <childnode refid="6950" relation="usage">
          <edgelabel>+attach_ivar</edgelabel>
        </childnode>
        <childnode refid="6952" relation="usage">
          <edgelabel>+iter_var_attrs</edgelabel>
        </childnode>
        <childnode refid="6953" relation="usage">
          <edgelabel>+leaf_iter_vars</edgelabel>
          <edgelabel>+env_threads</edgelabel>
          <edgelabel>+all_iter_vars</edgelabel>
        </childnode>
        <childnode refid="6954" relation="usage">
          <edgelabel>+relations</edgelabel>
        </childnode>
        <childnode refid="6955" relation="usage">
          <edgelabel>+store_predicate</edgelabel>
        </childnode>
        <childnode refid="6957" relation="usage">
          <edgelabel>+group</edgelabel>
          <edgelabel>+attach_stage</edgelabel>
        </childnode>
        <childnode refid="6958" relation="usage">
          <edgelabel>+origin_op</edgelabel>
          <edgelabel>+op</edgelabel>
        </childnode>
      </node>
      <node id="6953">
        <label>tvm::Array&lt; tvm::tir::IterVar &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6950">
        <label>tvm::tir::IterVar</label>
        <link refid="classtvm_1_1tir_1_1IterVar"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6949">
        <label>Object</label>
      </node>
      <node id="6955">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="6956" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6957">
        <label>tvm::te::Stage</label>
        <link refid="classtvm_1_1te_1_1Stage"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6954">
        <label>tvm::Array&lt; tvm::te::IterVarRelation &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6956">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6952">
        <label>tvm::Map&lt; tvm::tir::IterVar, tvm::te::IterVarAttr &gt;</label>
        <link refid="classtvm_1_1Map"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/te/schedule.h" line="444" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="444" bodyend="520"/>
    <listofallmembers>
      <member refid="classtvm_1_1te_1_1StageNode_1af06a8dd105358f2c3aa5f65c8014f13f" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1ae4592502d1c99f2515be61a6503bb7a6" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>all_iter_vars</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1ad8a1f14b199103ecf22e7bf021eff8d4" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>attach_ivar</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a75c8cf7d913a913e34abcaf6797540a5" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>attach_stage</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a1e77f0ad8149a5aabaa8a98907ff3bed" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>attach_type</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1af5cb8c43f82eac4021fd06ab7c475f82" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>double_buffer</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1ac6bfe27a0802f257d467667522d0cbee" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>env_threads</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a02935c5eeeaa3ae794e971d449b5e377" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>group</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a1c4533e83d0b9ae647f5f4dcd15e4208" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>is_opengl</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1af5cc9e6c2276cf8abde8f437f8bdbda4" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>is_output</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a1d1f5c5e99f0c0c5d09a497b5c05443f" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>iter_var_attrs</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a80162bcc647f01efa9ab97da3ca57410" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>leaf_iter_vars</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a98769dd08ea20c6d72f9abfe80d20090" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>num_child_stages</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a1e98ce6b9c48fd7ec5077c06f35d2ae1" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>op</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a3e7c2fb80404a12a9e843fcb38accd78" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>origin_op</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1ad1c0f8dc1f0f406a2abcd05fdad8fad5" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>relations</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a55acf027a39738cd1ddd063b27086038" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>scope</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a8f4ba7f2931b3541c12734af511600a7" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>store_predicate</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1a51b9748fd004dc2f3fcb23163eb78e0f" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1te_1_1StageNode_1ae86cbe717f924c4e30cef2a1a086308a" prot="public" virt="non-virtual"><scope>tvm::te::StageNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
