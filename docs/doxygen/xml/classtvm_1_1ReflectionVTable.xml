<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1ReflectionVTable" kind="class" language="C++" prot="public">
    <compoundname>tvm::ReflectionVTable</compoundname>
    <includes refid="reflection_8h" local="no">reflection.h</includes>
    <innerclass refid="classtvm_1_1ReflectionVTable_1_1Registry" prot="public">tvm::ReflectionVTable::Registry</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1ReflectionVTable_1a486eb682af89ac025c0db1f8f6045b95" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tvm::ReflectionVTable::FVisitAttrs) (Object *self, AttrVisitor *visitor)</definition>
        <argsstring>)(Object *self, AttrVisitor *visitor)</argsstring>
        <name>FVisitAttrs</name>
        <briefdescription>
<para>Visitor function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>We use function pointer, instead of std::function to reduce the dispatch overhead as field visit does not need as much customization. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="90" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtvm_1_1ReflectionVTable_1a656516c928f74d7b6345abd8c8f04358" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* tvm::ReflectionVTable::FSEqualReduce) (const Object *self, const Object *other, SEqualReducer equal)</definition>
        <argsstring>)(const Object *self, const Object *other, SEqualReducer equal)</argsstring>
        <name>FSEqualReduce</name>
        <briefdescription>
<para>Equality comparison function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="94" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtvm_1_1ReflectionVTable_1a08566817a33d96cd486a780afe88aad1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tvm::ReflectionVTable::FSHashReduce) (const Object *self, SHashReducer hash_reduce)</definition>
        <argsstring>)(const Object *self, SHashReducer hash_reduce)</argsstring>
        <name>FSHashReduce</name>
        <briefdescription>
<para>Structural hash reduction function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="98" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtvm_1_1ReflectionVTable_1adf61fde4dfac8d1cb59159db6722b335" prot="public" static="no">
        <type>ObjectPtr&lt; Object &gt;(*</type>
        <definition>typedef ObjectPtr&lt;Object&gt;(* tvm::ReflectionVTable::FCreate) (const std::string &amp;global_key)</definition>
        <argsstring>)(const std::string &amp;global_key)</argsstring>
        <name>FCreate</name>
        <briefdescription>
<para>creator function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>global_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key that identifies a global single object. If this is not empty then FGlobalKey must be defined for the object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="105" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtvm_1_1ReflectionVTable_1abe09d73c5ea2c51f5cfa30471b8f89ef" prot="public" static="no">
        <type>std::string(*</type>
        <definition>typedef std::string(* tvm::ReflectionVTable::FGlobalKey) (const Object *self)</definition>
        <argsstring>)(const Object *self)</argsstring>
        <name>FGlobalKey</name>
        <briefdescription>
<para>Global key function, only needed by global objects. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node pointer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>node The global key to the node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="111" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1ReflectionVTable_1ac415ab1115734cb1ee20c203fd86db66" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtvm_1_1ReflectionVTable_1a486eb682af89ac025c0db1f8f6045b95" kindref="member">FVisitAttrs</ref> &gt;</type>
        <definition>std::vector&lt;FVisitAttrs&gt; tvm::ReflectionVTable::fvisit_attrs_</definition>
        <argsstring></argsstring>
        <name>fvisit_attrs_</name>
        <briefdescription>
<para>Attribute visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="172" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1ReflectionVTable_1a5528bcf4005b06fe12c8c78674593fff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtvm_1_1ReflectionVTable_1a656516c928f74d7b6345abd8c8f04358" kindref="member">FSEqualReduce</ref> &gt;</type>
        <definition>std::vector&lt;FSEqualReduce&gt; tvm::ReflectionVTable::fsequal_reduce_</definition>
        <argsstring></argsstring>
        <name>fsequal_reduce_</name>
        <briefdescription>
<para>Structural equal function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="174" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1ReflectionVTable_1a133e55939227f2130de25d5a6565077b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtvm_1_1ReflectionVTable_1a08566817a33d96cd486a780afe88aad1" kindref="member">FSHashReduce</ref> &gt;</type>
        <definition>std::vector&lt;FSHashReduce&gt; tvm::ReflectionVTable::fshash_reduce_</definition>
        <argsstring></argsstring>
        <name>fshash_reduce_</name>
        <briefdescription>
<para>Structural hash function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="176" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1ReflectionVTable_1aff3d65ed6334ed9f2adc562b23454925" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtvm_1_1ReflectionVTable_1adf61fde4dfac8d1cb59159db6722b335" kindref="member">FCreate</ref> &gt;</type>
        <definition>std::vector&lt;FCreate&gt; tvm::ReflectionVTable::fcreate_</definition>
        <argsstring></argsstring>
        <name>fcreate_</name>
        <briefdescription>
<para>Creation function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="178" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1ReflectionVTable_1a9639c093f3b33194332a2eb3bb51b697" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtvm_1_1ReflectionVTable_1abe09d73c5ea2c51f5cfa30471b8f89ef" kindref="member">FGlobalKey</ref> &gt;</type>
        <definition>std::vector&lt;FGlobalKey&gt; tvm::ReflectionVTable::fglobal_key_</definition>
        <argsstring></argsstring>
        <name>fglobal_key_</name>
        <briefdescription>
<para>Global key function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="180" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1a1a04983862e782c79b2d228a1e9158b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::ReflectionVTable::VisitAttrs</definition>
        <argsstring>(Object *self, AttrVisitor *visitor) const </argsstring>
        <name>VisitAttrs</name>
        <param>
          <type>Object *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Dispatch the VisitAttrs function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute visitor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="117" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="386" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1ad91a5ee664b778c8d77ca0a5ebb209f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tvm::ReflectionVTable::GetGlobalKey</definition>
        <argsstring>(Object *self) const </argsstring>
        <name>GetGlobalKey</name>
        <param>
          <type>Object *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get global key of the object, if any. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the global key if object has one, otherwise return empty string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="123" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="395" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1afca5e5c3d8d86bff3fb9503481727074" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::ReflectionVTable::SEqualReduce</definition>
        <argsstring>(const Object *self, const Object *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const Object *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const Object *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
<para>Dispatch the SEqualReduce function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to another object to be compared. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>equal</parametername>
</parameternamelist>
<parameterdescription>
<para>The equality comparator. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1a8598da5b2df50186cbc4a66ffd539c23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::ReflectionVTable::SHashReduce</definition>
        <argsstring>(const Object *self, SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type>const Object *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
<para>Dispatch the SHashReduce function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_reduce</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash reducer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1ab77d3b63f51e8596a67da6aa8cdd48ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ObjectPtr&lt; Object &gt;</type>
        <definition>ObjectPtr&lt;Object&gt; tvm::ReflectionVTable::CreateInitObject</definition>
        <argsstring>(const std::string &amp;type_key, const std::string &amp;global_key=&quot;&quot;) const </argsstring>
        <name>CreateInitObject</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>type_key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>global_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Create an initial object using default constructor by type_key and global key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The type key of the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>global_key</parametername>
</parameternamelist>
<parameterdescription>
<para>A global key that can be used to uniquely identify the object if any. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1ae44960abd107dbdad04ab7a548db47e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">runtime::TVMRetValue</ref></type>
        <definition>runtime::TVMRetValue tvm::ReflectionVTable::GetAttr</definition>
        <argsstring>(Object *self, const std::string &amp;attr_name) const </argsstring>
        <name>GetAttr</name>
        <param>
          <type>Object *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>attr_name</declname>
        </param>
        <briefdescription>
<para>Get an field object by the attr name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding attribute value. </para></simplesect>
<simplesect kind="note"><para>This function will throw an exception if the object does not contain the field. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1ae8ea4f24e5b7e905c3a5f3f14b994707" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; tvm::ReflectionVTable::ListAttrNames</definition>
        <argsstring>(Object *self) const </argsstring>
        <name>ListAttrNames</name>
        <param>
          <type>Object *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>List all the fields in the object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>All the fields. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1a775a9d85f429302c05e06ddc64eb9456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TraitName</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtvm_1_1ReflectionVTable_1_1Registry" kindref="compound">Registry</ref></type>
        <definition>ReflectionVTable::Registry tvm::ReflectionVTable::Register</definition>
        <argsstring>()</argsstring>
        <name>Register</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="168" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="363" bodyend="383"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1ReflectionVTable_1acf555f668f940322ab7b3dea1a45bd95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1ReflectionVTable" kindref="compound">ReflectionVTable</ref> *</type>
        <definition>static ReflectionVTable* tvm::ReflectionVTable::Global</definition>
        <argsstring>()</argsstring>
        <name>Global</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The global singleton. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/reflection.h" line="164" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Virtual function table to support IR/AST node reflection. </para>    </briefdescription>
    <detaileddescription>
<para>Functions are stored in columar manner. Each column is a vector indexed by Object&apos;s type_index. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="6474">
        <label>tvm::ReflectionVTable</label>
        <link refid="classtvm_1_1ReflectionVTable"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/node/reflection.h" line="82" column="1" bodyfile="include/tvm/node/reflection.h" bodystart="82" bodyend="181"/>
    <listofallmembers>
      <member refid="classtvm_1_1ReflectionVTable_1ab77d3b63f51e8596a67da6aa8cdd48ec" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>CreateInitObject</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1adf61fde4dfac8d1cb59159db6722b335" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>FCreate</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1aff3d65ed6334ed9f2adc562b23454925" prot="private" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>fcreate_</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a9639c093f3b33194332a2eb3bb51b697" prot="private" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>fglobal_key_</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1abe09d73c5ea2c51f5cfa30471b8f89ef" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>FGlobalKey</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a5528bcf4005b06fe12c8c78674593fff" prot="private" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>fsequal_reduce_</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a656516c928f74d7b6345abd8c8f04358" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>FSEqualReduce</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a133e55939227f2130de25d5a6565077b" prot="private" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>fshash_reduce_</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a08566817a33d96cd486a780afe88aad1" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>FSHashReduce</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1ac415ab1115734cb1ee20c203fd86db66" prot="private" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>fvisit_attrs_</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a486eb682af89ac025c0db1f8f6045b95" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>FVisitAttrs</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1ae44960abd107dbdad04ab7a548db47e1" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>GetAttr</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1ad91a5ee664b778c8d77ca0a5ebb209f8" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>GetGlobalKey</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1acf555f668f940322ab7b3dea1a45bd95" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>Global</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1ae8ea4f24e5b7e905c3a5f3f14b994707" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>ListAttrNames</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a775a9d85f429302c05e06ddc64eb9456" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>Register</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1afca5e5c3d8d86bff3fb9503481727074" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a8598da5b2df50186cbc4a66ffd539c23" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1ReflectionVTable_1a1a04983862e782c79b2d228a1e9158b9" prot="public" virt="non-virtual"><scope>tvm::ReflectionVTable</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
