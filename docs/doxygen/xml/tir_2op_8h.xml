<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tir_2op_8h" kind="file" language="C++">
    <compoundname>op.h</compoundname>
    <includes refid="ir_2type_8h" local="no">tvm/ir/type.h</includes>
    <includes refid="tir_2expr_8h" local="no">tvm/tir/expr.h</includes>
    <includes refid="stmt_8h" local="no">tvm/tir/stmt.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">limits</includes>
    <includedby refid="operation_8h" local="no">include/tvm/te/operation.h</includedby>
    <includedby refid="tensor_8h" local="no">include/tvm/te/tensor.h</includedby>
    <includedby refid="buffer_8h" local="no">include/tvm/tir/buffer.h</includedby>
    <includedby refid="data__layout_8h" local="no">include/tvm/tir/data_layout.h</includedby>
    <includedby refid="pad__utils_8h" local="yes">topi/include/topi/detail/pad_utils.h</includedby>
    <includedby refid="topi_2include_2topi_2nn_8h" local="no">topi/include/topi/nn.h</includedby>
    <incdepgraph>
      <node id="11174">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11151" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
      </node>
      <node id="11149">
        <label>atomic</label>
      </node>
      <node id="11164">
        <label>functional</label>
      </node>
      <node id="11166">
        <label>limits</label>
      </node>
      <node id="11156">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="11157" relation="include">
        </childnode>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11152" relation="include">
        </childnode>
        <childnode refid="11158" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11155" relation="include">
        </childnode>
      </node>
      <node id="11155">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="11141" relation="include">
        </childnode>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11156" relation="include">
        </childnode>
        <childnode refid="11161" relation="include">
        </childnode>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
        <childnode refid="11165" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11166" relation="include">
        </childnode>
        <childnode refid="11158" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11168">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="11141" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
      </node>
      <node id="11140">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="11141" relation="include">
        </childnode>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
        <childnode refid="11149" relation="include">
        </childnode>
      </node>
      <node id="11144">
        <label>stdint.h</label>
      </node>
      <node id="11161">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11162" relation="include">
        </childnode>
        <childnode refid="11149" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
      </node>
      <node id="11171">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11164" relation="include">
        </childnode>
      </node>
      <node id="11175">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="11151" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11176" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11177" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
        <childnode refid="11166" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
      </node>
      <node id="11147">
        <label>string</label>
      </node>
      <node id="11172">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11173" relation="include">
        </childnode>
      </node>
      <node id="11169">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11152" relation="include">
        </childnode>
        <childnode refid="11155" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11170" relation="include">
        </childnode>
        <childnode refid="11160" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
      </node>
      <node id="11145">
        <label>stddef.h</label>
      </node>
      <node id="11138">
        <label>include/tvm/tir/op.h</label>
        <link refid="tir/op.h"/>
        <childnode refid="11139" relation="include">
        </childnode>
        <childnode refid="11175" relation="include">
        </childnode>
        <childnode refid="11178" relation="include">
        </childnode>
        <childnode refid="11177" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
        <childnode refid="11166" relation="include">
        </childnode>
      </node>
      <node id="11176">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11151" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11174" relation="include">
        </childnode>
        <childnode refid="11139" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11177" relation="include">
        </childnode>
        <childnode refid="11166" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11165">
        <label>tuple</label>
      </node>
      <node id="11141">
        <label>dmlc/logging.h</label>
      </node>
      <node id="11178">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="11175" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
      </node>
      <node id="11159">
        <label>vector</label>
      </node>
      <node id="11167">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11168" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
      </node>
      <node id="11157">
        <label>dmlc/io.h</label>
      </node>
      <node id="11142">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="11143" relation="include">
        </childnode>
        <childnode refid="11144" relation="include">
        </childnode>
        <childnode refid="11145" relation="include">
        </childnode>
      </node>
      <node id="11139">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11151" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11174" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
      </node>
      <node id="11148">
        <label>utility</label>
      </node>
      <node id="11151">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11152" relation="include">
        </childnode>
        <childnode refid="11154" relation="include">
        </childnode>
        <childnode refid="11172" relation="include">
        </childnode>
        <childnode refid="11169" relation="include">
        </childnode>
        <childnode refid="11167" relation="include">
        </childnode>
        <childnode refid="11171" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11163">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="11153">
        <label>cstdlib</label>
      </node>
      <node id="11173">
        <label>iostream</label>
      </node>
      <node id="11162">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="11157" relation="include">
        </childnode>
        <childnode refid="11163" relation="include">
        </childnode>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11161" relation="include">
        </childnode>
      </node>
      <node id="11160">
        <label>unordered_map</label>
      </node>
      <node id="11154">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11152" relation="include">
        </childnode>
        <childnode refid="11155" relation="include">
        </childnode>
        <childnode refid="11161" relation="include">
        </childnode>
        <childnode refid="11150" relation="include">
        </childnode>
        <childnode refid="11167" relation="include">
        </childnode>
        <childnode refid="11171" relation="include">
        </childnode>
        <childnode refid="11159" relation="include">
        </childnode>
        <childnode refid="11147" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11152">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="11140" relation="include">
        </childnode>
        <childnode refid="11153" relation="include">
        </childnode>
        <childnode refid="11148" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11150">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="11142" relation="include">
        </childnode>
        <childnode refid="11141" relation="include">
        </childnode>
        <childnode refid="11146" relation="include">
        </childnode>
      </node>
      <node id="11146">
        <label>type_traits</label>
      </node>
      <node id="11177">
        <label>algorithm</label>
      </node>
      <node id="11143">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="11158">
        <label>memory</label>
      </node>
      <node id="11170">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11214">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="11204">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11188" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
        <childnode refid="11205" relation="include">
        </childnode>
        <childnode refid="11206" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11186" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11191" relation="include">
        </childnode>
        <childnode refid="11193" relation="include">
        </childnode>
        <childnode refid="11208" relation="include">
        </childnode>
        <childnode refid="11209" relation="include">
        </childnode>
        <childnode refid="11210" relation="include">
        </childnode>
      </node>
      <node id="11234">
        <label>include/tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11233" relation="include">
        </childnode>
        <childnode refid="11235" relation="include">
        </childnode>
        <childnode refid="11231" relation="include">
        </childnode>
      </node>
      <node id="11223">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="11224" relation="include">
        </childnode>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11233" relation="include">
        </childnode>
      </node>
      <node id="11186">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="11213">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="11212" relation="include">
        </childnode>
      </node>
      <node id="11193">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="11191">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="11235">
        <label>include/tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="11231" relation="include">
        </childnode>
        <childnode refid="11236" relation="include">
        </childnode>
      </node>
      <node id="11233">
        <label>include/tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11201">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="11210">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="11218">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="11216">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11232">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="11196" relation="include">
        </childnode>
        <childnode refid="11195" relation="include">
        </childnode>
        <childnode refid="11215" relation="include">
        </childnode>
        <childnode refid="11218" relation="include">
        </childnode>
        <childnode refid="11221" relation="include">
        </childnode>
        <childnode refid="11198" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
        <childnode refid="11201" relation="include">
        </childnode>
      </node>
      <node id="11227">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="11190">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="11191" relation="include">
        </childnode>
      </node>
      <node id="11217">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="11202">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="11212">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="11202" relation="include">
        </childnode>
        <childnode refid="11198" relation="include">
        </childnode>
        <childnode refid="11201" relation="include">
        </childnode>
      </node>
      <node id="11221">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="11199" relation="include">
        </childnode>
      </node>
      <node id="11188">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="11189" relation="include">
        </childnode>
      </node>
      <node id="11200">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="11194">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11188" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
      </node>
      <node id="11198">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="11199" relation="include">
        </childnode>
        <childnode refid="11200" relation="include">
        </childnode>
        <childnode refid="11201" relation="include">
        </childnode>
      </node>
      <node id="11180">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="11181" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11188" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
        <childnode refid="11194" relation="include">
        </childnode>
        <childnode refid="11195" relation="include">
        </childnode>
        <childnode refid="11203" relation="include">
        </childnode>
        <childnode refid="11204" relation="include">
        </childnode>
        <childnode refid="11211" relation="include">
        </childnode>
        <childnode refid="11213" relation="include">
        </childnode>
        <childnode refid="11205" relation="include">
        </childnode>
        <childnode refid="11206" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11214" relation="include">
        </childnode>
        <childnode refid="11202" relation="include">
        </childnode>
        <childnode refid="11215" relation="include">
        </childnode>
        <childnode refid="11216" relation="include">
        </childnode>
        <childnode refid="11217" relation="include">
        </childnode>
        <childnode refid="11218" relation="include">
        </childnode>
        <childnode refid="11219" relation="include">
        </childnode>
        <childnode refid="11220" relation="include">
        </childnode>
        <childnode refid="11200" relation="include">
        </childnode>
        <childnode refid="11221" relation="include">
        </childnode>
        <childnode refid="11198" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
        <childnode refid="11186" relation="include">
        </childnode>
        <childnode refid="11222" relation="include">
        </childnode>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11191" relation="include">
        </childnode>
        <childnode refid="11193" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
        <childnode refid="11201" relation="include">
        </childnode>
        <childnode refid="11208" relation="include">
        </childnode>
        <childnode refid="11209" relation="include">
        </childnode>
        <childnode refid="11210" relation="include">
        </childnode>
      </node>
      <node id="11230">
        <label>include/tvm/driver/driver_api.h</label>
        <link refid="driver__api_8h"/>
      </node>
      <node id="11219">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="11215">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="11179">
        <label>include/tvm/tir/op.h</label>
        <link refid="tir/op.h"/>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11223" relation="include">
        </childnode>
        <childnode refid="11234" relation="include">
        </childnode>
        <childnode refid="11237" relation="include">
        </childnode>
        <childnode refid="11238" relation="include">
        </childnode>
        <childnode refid="11221" relation="include">
        </childnode>
      </node>
      <node id="11187">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="11192">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="11193" relation="include">
        </childnode>
      </node>
      <node id="11203">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="11181" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
      </node>
      <node id="11209">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="11229">
        <label>include/tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="11230" relation="include">
        </childnode>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11185" relation="include">
        </childnode>
        <childnode refid="11187" relation="include">
        </childnode>
        <childnode refid="11188" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
        <childnode refid="11205" relation="include">
        </childnode>
        <childnode refid="11206" relation="include">
        </childnode>
        <childnode refid="11207" relation="include">
        </childnode>
        <childnode refid="11209" relation="include">
        </childnode>
      </node>
      <node id="11236">
        <label>include/tvm/tir/transform.h</label>
        <link refid="include_2tvm_2tir_2transform_8h"/>
      </node>
      <node id="11189">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="11195">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="11196" relation="include">
        </childnode>
      </node>
      <node id="11181">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="11182" relation="include">
        </childnode>
      </node>
      <node id="11183">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="11185">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="11186" relation="include">
        </childnode>
      </node>
      <node id="11208">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="11231">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="11232" relation="include">
        </childnode>
        <childnode refid="11197" relation="include">
        </childnode>
        <childnode refid="11215" relation="include">
        </childnode>
        <childnode refid="11217" relation="include">
        </childnode>
        <childnode refid="11199" relation="include">
        </childnode>
        <childnode refid="11221" relation="include">
        </childnode>
      </node>
      <node id="11199">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="11205">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="11196">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="11197" relation="include">
        </childnode>
        <childnode refid="11202" relation="include">
        </childnode>
        <childnode refid="11198" relation="include">
        </childnode>
      </node>
      <node id="11226">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="11227" relation="include">
        </childnode>
      </node>
      <node id="11220">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="11222">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="11184">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11211">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="11198" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
      </node>
      <node id="11206">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11238">
        <label>topi/include/topi/detail/pad_utils.h</label>
        <link refid="pad__utils_8h"/>
        <childnode refid="11199" relation="include">
        </childnode>
      </node>
      <node id="11224">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11182">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="11183" relation="include">
        </childnode>
      </node>
      <node id="11207">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="11206" relation="include">
        </childnode>
      </node>
      <node id="11228">
        <label>include/tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="11224" relation="include">
        </childnode>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11180" relation="include">
        </childnode>
        <childnode refid="11229" relation="include">
        </childnode>
        <childnode refid="11231" relation="include">
        </childnode>
      </node>
      <node id="11197">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="11198" relation="include">
        </childnode>
      </node>
      <node id="11225">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="11237">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data__layout_8h"/>
        <childnode refid="11224" relation="include">
        </childnode>
        <childnode refid="11212" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1tir">tvm::tir</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" prot="public" static="no">
        <name>TVM_DECLARE_INTRIN_UNARY</name>
        <param><defname>OpName</defname></param>
        <initializer>inline PrimExpr OpName(PrimExpr x) {                                                 \
    return tir::CallNode::make(x.dtype(), #OpName, {x}, tir::CallNode::PureIntrinsic); \
  }                                                                                    \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/op.h" line="551" column="9" bodyfile="include/tvm/tir/op.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tir_2op_8h_1a34c733b88658efba336e09ccd85e576c" prot="public" static="no">
        <name>TVM_DEFINE_ASSIGN_OP_OVERLOAD</name>
        <param><defname>Name</defname></param>
        <param><defname>OpFunc</defname></param>
        <initializer>inline PrimExpr Name(PrimExpr&amp; a, PrimExpr b) {\
    a = OpFunc(a, b);                                           \
    return a;                                                   \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/op.h" line="773" column="9" bodyfile="include/tvm/tir/op.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" prot="public" static="no">
        <name>TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</name>
        <param><defname>Name</defname></param>
        <initializer>inline PrimExpr Name(const PrimExpr&amp; a, float b) {           \
    return Name(a, PrimExpr(b));                               \
  }                                                            \
  inline PrimExpr Name(float a, const PrimExpr&amp; b) {           \
    return Name(PrimExpr(a), b);                               \
  }                                                            \
  inline PrimExpr Name(int a, const PrimExpr&amp; b) {             \
    return Name(tir::make_const(b.dtype(), a), b);             \
  }                                                            \
  inline PrimExpr Name(const PrimExpr&amp; a, int b) {             \
    return Name(a, tir::make_const(a.dtype(), b));             \
  }                                                            \
  inline PrimExpr Name(const PrimExpr&amp; a, double b) {          \
    return Name(a, tir::make_const(DataType::Float(64), b));   \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/op.h" line="779" column="9" bodyfile="include/tvm/tir/op.h" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tir_2op_8h_1ab6a17993efa67183ba992dac29284c80" prot="public" static="no">
        <name>TVM_DEFINE_LOGICAL_OP_CONST_VAL_OVERLOAD</name>
        <param><defname>Name</defname></param>
        <initializer>inline PrimExpr Name(const PrimExpr&amp; a, bool b) {            \
    return Name(a, PrimExpr(b));                               \
  }                                                            \
  inline PrimExpr Name(bool a, const PrimExpr&amp; b) {            \
    return Name(PrimExpr(a), b);                               \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/op.h" line="796" column="9" bodyfile="include/tvm/tir/op.h" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" prot="public" static="no">
        <name>TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</name>
        <param><defname>Name</defname></param>
        <initializer>inline PrimExpr Name(const PrimExpr&amp; a, int b) {            \
    return Name(a, tir::make_const(a.dtype(), b));            \
  }                                                           \
  inline PrimExpr Name(int a, const PrimExpr&amp; b) {            \
    return Name(tir::make_const(b.dtype(), a), b);            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/op.h" line="804" column="9" bodyfile="include/tvm/tir/op.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Common operators defined for Expr. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Most of the operator defined here perform simple constant folding when the type is int32 or int64 for simplifying the index expressions. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/>Acknowledgement:<sp/>Most<sp/>operator<sp/>APIs<sp/>originate<sp/>from<sp/>Halide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TVM_TIR_OP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_TIR_OP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ir_2type_8h" kindref="compound">tvm/ir/type.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2expr_8h" kindref="compound">tvm/tir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stmt_8h" kindref="compound">tvm/tir/stmt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Most<sp/>common<sp/>operators<sp/>can<sp/>be<sp/>overloaded<sp/>by<sp/>argument<sp/>type(PrimExpr).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>put<sp/>them<sp/>under<sp/>the<sp/>root<sp/>namespace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>also<sp/>necessary<sp/>to<sp/>overload<sp/>operators<sp/>for<sp/>PrimExpr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>put<sp/>more<sp/>developer<sp/>oriented<sp/>APIs<sp/>--<sp/>make_const<sp/>and<sp/>is_const<sp/>under<sp/>tir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>they<sp/>are<sp/>more<sp/>specific<sp/>to<sp/>the<sp/>tir<sp/>namespace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">TVM_DLL<sp/><ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref><sp/><ref refid="namespacetvm_1a48fb9755f38ffcfcd03592a47ffbbd14" kindref="member">GetType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrimExpr&amp;<sp/>expr);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">TVM_DLL<sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">runtime::DataType</ref><sp/><ref refid="namespacetvm_1a0447e9aa45f6cab707f6dc9f9281b3f5" kindref="member">GetRuntimeDataType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref>&amp;<sp/>type);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a2741c5a48b50bf369026a1bbdf02017f" kindref="member">max_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>&amp;<sp/>dtype);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a9c126a8dde0d4079713969ca574f172e" kindref="member">min_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>&amp;<sp/>dtype);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a9bf1977e7bc6f0424f4e87d77d0008ed" kindref="member">infinity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>&amp;<sp/>dtype);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1aa058caeda9deceda3d6ffeda347be442" kindref="member">cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>&amp;<sp/>t,<sp/>PrimExpr<sp/>value);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a2acd72f0adb3d9ae5eede7497b32c139" kindref="member">reinterpret</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref>&amp;<sp/>t,<sp/>PrimExpr<sp/>value);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1af246f441d4ac21b110185b77240b2dcc" kindref="member">operator+</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1abde487c0197942c4ebb1b47277b89dac" kindref="member">operator-</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1abde487c0197942c4ebb1b47277b89dac" kindref="member">operator-</ref>(PrimExpr<sp/>a);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a5c5034de2993b9130b7bd9d593a11bb5" kindref="member">operator*</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a18256ba1213ce5ff3cf8037a314354b7" kindref="member">operator/</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1af682776c3609284f1bc3ea436e21a67a" kindref="member">operator&lt;&lt;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a1ce1eb32fc9d76ebe5a6b8d185024d41" kindref="member">operator&gt;&gt;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ad93d00f7b080dc3f905f5c34c170a041" kindref="member">operator&gt;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a5530417da455bd46f5dc55f27d69bcdf" kindref="member">operator&gt;=</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a1f98476c3a413f6cdfc7b7e490f3221b" kindref="member">operator&lt;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a598f8139c469abc4066dbdd0a0a0845d" kindref="member">operator&lt;=</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a2ea3b45c96d3980227e418f7158ce5c3" kindref="member">operator==</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a03983cf66713724c138f9697bb8e0e97" kindref="member">operator!=</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1afc83b50366be0862a6c8f88c9a4e62d5" kindref="member">operator&amp;&amp;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ac3bf2ef3556c995846dddcd84e5db8a6" kindref="member">operator||</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ab354bf1270121abea71fade83f13b0b0" kindref="member">operator!</ref>(PrimExpr<sp/>a);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a7bcbff6b886a4fa59b65e7cf05714b49" kindref="member">truncdiv</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ae3fd62ca6008d6f20e4845426ec47aa6" kindref="member">truncmod</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a857781b7243b2f90018f7fe6baf9c30e" kindref="member">indexmod</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a25cb3bf64427a16a93529d0a5c40b6de" kindref="member">floordiv</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a74b2e0fb912a82f974e2b652f7de8d34" kindref="member">floormod</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">max</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a9da780393e228969f77aa7550520a582" kindref="member">min</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a92e2cae35b1e48f130b76f42c6ee3106" kindref="member">operator&amp;</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a236d9aae385e6697874f75e4c8a69f8d" kindref="member">operator|</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1abd7d1b3232218b25e2e0cf6ef699a65f" kindref="member">operator^</ref>(PrimExpr<sp/>a,<sp/>PrimExpr<sp/>b);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a354b9954ff25dd819a51d856fdd38827" kindref="member">operator~</ref>(PrimExpr<sp/>a);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">if_then_else</ref>(PrimExpr<sp/>cond,<sp/>PrimExpr<sp/>true_value,<sp/>PrimExpr<sp/>false_value);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ad6ee4c2d41e7e226d1995112cd12e3f1" kindref="member">likely</ref>(PrimExpr<sp/>cond);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a880f0cd15891153430b669f0b4eca2fe" kindref="member">pow</ref>(PrimExpr<sp/>x,<sp/>PrimExpr<sp/>y);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a84d274191adb24d2acb39064c1fbec52" kindref="member">abs</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a8f98d60fdc4526b07c8858d6b0b8d1ee" kindref="member">isnan</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a6a48a2b96c995f412390db3ea3b38bd9" kindref="member">isfinite</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a30e728d87aa70f76d7f4a09316c9746d" kindref="member">isinf</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">sum</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a78bab31ca3c44dbd5e6801e1e223d475" kindref="member">all</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a48629d1a87dfe0b51260defe79c82a60" kindref="member">any</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">max</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a9da780393e228969f77aa7550520a582" kindref="member">min</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1afd8718fe1f413ab2850cdbb66adfbecc" kindref="member">prod</ref>(PrimExpr<sp/>source,<sp/>Array&lt;tir::IterVar&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a45896c89bce01ea68b5a8f3ea37f3079" kindref="member">floor</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a530307f2fad9f6d196c441309af777b9" kindref="member">ceil</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a660170263d6864b1caa60728619971be" kindref="member">round</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a8472b5c842e840063564d4280428ce23" kindref="member">nearbyint</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1ae17d5a4cdf12b4da457d4929030592cf" kindref="member">trunc</ref>(PrimExpr<sp/>x);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">TVM_DLL<sp/>PrimExpr<sp/><ref refid="namespacetvm_1a1b6f1345a0ac2506132b15ec4cbf3599" kindref="member">LargeUIntImm</ref>(<ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref><sp/>dtype,<sp/>int64_t<sp/>low,<sp/>int64_t<sp/>high);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Intrinsic<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DECLARE_INTRIN_UNARY(OpName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>OpName(PrimExpr<sp/>x)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>tir::CallNode::make(x.dtype(),<sp/>#OpName,<sp/>{x},<sp/>tir::CallNode::PureIntrinsic);<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="namespacetvm_1aa21f5c2f67c944561ae4a260a2ed14d2" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1aa21f5c2f67c944561ae4a260a2ed14d2" kindref="member">exp</ref>);</highlight></codeline>
<codeline lineno="557" refid="namespacetvm_1a21e3a5d7327cf37c6a682525665a0a28" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a21e3a5d7327cf37c6a682525665a0a28" kindref="member">exp2</ref>);</highlight></codeline>
<codeline lineno="558" refid="namespacetvm_1ac760569fe43a52f3f8997461b2ef438a" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1ac760569fe43a52f3f8997461b2ef438a" kindref="member">exp10</ref>);</highlight></codeline>
<codeline lineno="559" refid="namespacetvm_1a78ebcdb32def4b349b37423884a6417a" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a78ebcdb32def4b349b37423884a6417a" kindref="member">erf</ref>);</highlight></codeline>
<codeline lineno="560" refid="namespacetvm_1ad8a570f4008eb8869504544d7a1cd8ce" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1ad8a570f4008eb8869504544d7a1cd8ce" kindref="member">tanh</ref>);</highlight></codeline>
<codeline lineno="561" refid="namespacetvm_1a1bf7732939d615e08d0d991e2f271c42" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a1bf7732939d615e08d0d991e2f271c42" kindref="member">sigmoid</ref>);</highlight></codeline>
<codeline lineno="562" refid="namespacetvm_1a0a4fcbbd8d9db345d4d7e8bb0a76671a" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a0a4fcbbd8d9db345d4d7e8bb0a76671a" kindref="member">sqrt</ref>);</highlight></codeline>
<codeline lineno="563" refid="namespacetvm_1ae77bc5dc1c2f4bcafcac8ad698b089a5" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1ae77bc5dc1c2f4bcafcac8ad698b089a5" kindref="member">rsqrt</ref>);</highlight></codeline>
<codeline lineno="564" refid="namespacetvm_1aed9236feb2ab21523cb2dcb0257fe8da" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1aed9236feb2ab21523cb2dcb0257fe8da" kindref="member">log</ref>);</highlight></codeline>
<codeline lineno="565" refid="namespacetvm_1aae5edd83ffa099868f2d58a9def0b2b4" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1aae5edd83ffa099868f2d58a9def0b2b4" kindref="member">log2</ref>);</highlight></codeline>
<codeline lineno="566" refid="namespacetvm_1a04657a6242778fd95b77df057385e398" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a04657a6242778fd95b77df057385e398" kindref="member">log10</ref>);</highlight></codeline>
<codeline lineno="567" refid="namespacetvm_1a04551919927933a4265c87809d889577" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a04551919927933a4265c87809d889577" kindref="member">popcount</ref>);</highlight></codeline>
<codeline lineno="568" refid="namespacetvm_1aaabcd438dbdc57aa6866fde3edaf2d83" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1aaabcd438dbdc57aa6866fde3edaf2d83" kindref="member">tan</ref>);</highlight></codeline>
<codeline lineno="569" refid="namespacetvm_1a66fb538aa75f90efb6f5c948920f8f95" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a66fb538aa75f90efb6f5c948920f8f95" kindref="member">cos</ref>);</highlight></codeline>
<codeline lineno="570" refid="namespacetvm_1a581c9279a40694ab7a5defa179bcad67" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a581c9279a40694ab7a5defa179bcad67" kindref="member">cosh</ref>);</highlight></codeline>
<codeline lineno="571" refid="namespacetvm_1aeb9b0d266628cfa6c4d254c4e719249a" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1aeb9b0d266628cfa6c4d254c4e719249a" kindref="member">sin</ref>);</highlight></codeline>
<codeline lineno="572" refid="namespacetvm_1a8c17ac9dc5cd2be44dd2c3ef23e0e4c9" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a8c17ac9dc5cd2be44dd2c3ef23e0e4c9" kindref="member">sinh</ref>);</highlight></codeline>
<codeline lineno="573" refid="namespacetvm_1a0a4e38b4b6d9f7396f2eafa680f98bd8" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a032e3ae6824990aad98b8992f90a83c9" kindref="member">TVM_DECLARE_INTRIN_UNARY</ref>(<ref refid="namespacetvm_1a0a4e38b4b6d9f7396f2eafa680f98bd8" kindref="member">atan</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tir<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_pod&lt;ValueType&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t,<sp/>ValueType<sp/>value);</highlight></codeline>
<codeline lineno="591"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1adc4408508a413fb7f3b2567f8d847dbb" kindref="member">make_zero</ref>(<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t);</highlight></codeline>
<codeline lineno="597" refid="namespacetvm_1_1tir_1ac40c127b53bca09d4c39f806a98dfdf8" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1ac40c127b53bca09d4c39f806a98dfdf8" kindref="member">const_true</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lanes<sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ad1cf4571ee1a22c188c66ee2e6e6c042" kindref="member">DataType::UInt</ref>(1,<sp/>lanes),<sp/>1);</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605" refid="namespacetvm_1_1tir_1ae11cb5c6f810546e5aa4e08a0684071a" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1ae11cb5c6f810546e5aa4e08a0684071a" kindref="member">const_false</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lanes<sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ad1cf4571ee1a22c188c66ee2e6e6c042" kindref="member">DataType::UInt</ref>(1,<sp/>lanes),<sp/>0);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614" refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x.defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>*<sp/>op<sp/>=<sp/>x.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(op-&gt;value);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a5c414d5e54c099ad7287be302aac8f02" kindref="member">is_const_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x,<sp/>int64_t<sp/>value);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a8de8f843c6eb433b6ddfbf34e24099ef" kindref="member">is_no_op</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">tir::Stmt</ref>&amp;<sp/>stmt);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="namespacetvm_1_1tir_1a9b5104dcf0933da31329bb0b2580a947" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a9b5104dcf0933da31329bb0b2580a947" kindref="member">is_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a5c414d5e54c099ad7287be302aac8f02" kindref="member">is_const_int</ref>(x,<sp/>1);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="namespacetvm_1_1tir_1a48bad3db162b334837716bf8e7ba9285" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a48bad3db162b334837716bf8e7ba9285" kindref="member">is_zero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a5c414d5e54c099ad7287be302aac8f02" kindref="member">is_const_int</ref>(x,<sp/>0);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1ab706ef9860459b25068f3440d88a7193" kindref="member">is_const</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a246623a4a0c9cd8f8a209ec952a8d1c3" kindref="member">is_const_power_of_two_integer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shift);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>details<sp/>after<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="namespacetvm_1_1tir_1ab706ef9860459b25068f3440d88a7193" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1ab706ef9860459b25068f3440d88a7193" kindref="member">is_const</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>op<sp/>=<sp/>x.as&lt;<ref refid="classtvm_1_1tir_1_1BroadcastNode" kindref="compound">tir::BroadcastNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>val<sp/>=<sp/>op-&gt;value;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="namespacetvm_1_1tir_1a782dc226f8b2b537efdc56b1f76351d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a782dc226f8b2b537efdc56b1f76351d1" kindref="member">is_positive_const</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>*<sp/>op<sp/>=<sp/>a.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;value<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="namespacetvm_1_1tir_1a51d552441331effb387b7c8fb241c454" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a51d552441331effb387b7c8fb241c454" kindref="member">is_negative_const</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>*<sp/>op<sp/>=<sp/>a.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;value<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="namespacetvm_1_1tir_1a5c414d5e54c099ad7287be302aac8f02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a5c414d5e54c099ad7287be302aac8f02" kindref="member">is_const_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>x,<sp/>int64_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>op<sp/>=<sp/>x.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;value<sp/>==<sp/>value;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>op<sp/>=<sp/>x.as&lt;<ref refid="classtvm_1_1tir_1_1BroadcastNode" kindref="compound">tir::BroadcastNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>val<sp/>=<sp/>op-&gt;value;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>opv<sp/>=<sp/>val.as&lt;<ref refid="classtvm_1_1IntImmNode" kindref="compound">tir::IntImmNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opv-&gt;value<sp/>==<sp/>value;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="namespacetvm_1_1tir_1a8de8f843c6eb433b6ddfbf34e24099ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a8de8f843c6eb433b6ddfbf34e24099ef" kindref="member">is_no_op</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">tir::Stmt</ref>&amp;<sp/>stmt)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stmt.defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>op<sp/>=<sp/>stmt.as&lt;<ref refid="classtvm_1_1tir_1_1EvaluateNode" kindref="compound">tir::EvaluateNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1ab706ef9860459b25068f3440d88a7193" kindref="member">is_const</ref>(op-&gt;value);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>op<sp/>=<sp/>stmt.as&lt;<ref refid="classtvm_1_1tir_1_1SeqStmtNode" kindref="compound">tir::SeqStmtNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op-&gt;seq.size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="728" refid="namespacetvm_1_1tir_1af2ca71170aca9d397c2125eb4f55c197" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1af2ca71170aca9d397c2125eb4f55c197" kindref="member">MakeConstScalar</ref>(<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t,<sp/>ValueType<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1aa0f1df1d5f4ed20bea6260b8ae939e20" kindref="member">is_int</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImm" kindref="compound">IntImm</ref>(t,<sp/>static_cast&lt;int64_t&gt;(value));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1a731b95a55b3dae496b9ecccffe834772" kindref="member">is_uint</ref>())<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>IntImm<sp/>if<sp/>it<sp/>is<sp/>a<sp/>small<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>uval<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uval<sp/>&lt;=<sp/>static_cast&lt;uint64_t&gt;(<ref refid="namespacetvm_1aa26bf5f7b12b17f87400c63c63663c60" kindref="member">std::numeric_limits&lt;int64_t&gt;::max</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IntImm" kindref="compound">IntImm</ref>(t,<sp/>static_cast&lt;int64_t&gt;(value));</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>mask<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>32U)<sp/>-<sp/>1U;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>low<sp/>=<sp/>uval<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>high<sp/>=<sp/>uval<sp/>&gt;&gt;<sp/>32U;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a1b6f1345a0ac2506132b15ec4cbf3599" kindref="member">LargeUIntImm</ref>(t,<sp/>static_cast&lt;int64_t&gt;(low),<sp/>static_cast&lt;int64_t&gt;(high));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1a4580dc7ac2f703780b0cc249e7d150a2" kindref="member">is_float</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1FloatImm" kindref="compound">FloatImm</ref>(t,<sp/>static_cast&lt;double&gt;(value));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>we<sp/>store<sp/>const<sp/>scalar<sp/>values<sp/>of<sp/>custom<sp/>datatypes<sp/>within<sp/>doubles;<sp/>later,<sp/>during<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>datatypes<sp/>lowering<sp/>pass,<sp/>we<sp/>will<sp/>lower<sp/>the<sp/>value<sp/>to<sp/>its<sp/>true<sp/>representation<sp/>in<sp/>the<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>by<sp/>the<sp/>datatype.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(gus)<sp/>when<sp/>do<sp/>we<sp/>need<sp/>to<sp/>start<sp/>worrying<sp/>about<sp/>doubles<sp/>not<sp/>being<sp/>precise<sp/>enough?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;uint8_t&gt;(t.<ref refid="classtvm_1_1runtime_1_1DataType_1a20aec12c682b0e73d3f47ba3b62c418b" kindref="member">code</ref>())<sp/>&gt;=<sp/>static_cast&lt;uint8_t&gt;(<ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ab568bfefd0ad6b172868caeb964b038a" kindref="member">kTVMCustomBegin</ref>))<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1FloatImm" kindref="compound">FloatImm</ref>(t,<sp/>static_cast&lt;double&gt;(value));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>LOG(FATAL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>make<sp/>const<sp/>for<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>();</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="755" refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t,<sp/>ValueType<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1abc92c7ca9966808f024983c76e12cf4a" kindref="member">lanes</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1af2ca71170aca9d397c2125eb4f55c197" kindref="member">MakeConstScalar</ref>(t,<sp/>value);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BroadcastNode_1a6763d63d93677c038763d1f985f877e0" kindref="member">tir::BroadcastNode::make</ref>(</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1af2ca71170aca9d397c2125eb4f55c197" kindref="member">MakeConstScalar</ref>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1a022ff4c55c831167018e94213cac8564" kindref="member">element_of</ref>(),<sp/>value),<sp/>t.<ref refid="classtvm_1_1runtime_1_1DataType_1abc92c7ca9966808f024983c76e12cf4a" kindref="member">lanes</ref>());</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="namespacetvm_1_1tir_1adc4408508a413fb7f3b2567f8d847dbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1_1tir_1adc4408508a413fb7f3b2567f8d847dbb" kindref="member">make_zero</ref>(<ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classtvm_1_1runtime_1_1DataType_1af0ddd5dcfdee76fe344f4bfb7aff806d" kindref="member">is_handle</ref>())<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a2acd72f0adb3d9ae5eede7497b32c139" kindref="member">reinterpret</ref>(t,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ad1cf4571ee1a22c188c66ee2e6e6c042" kindref="member">DataType::UInt</ref>(64),<sp/>0));</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(t,<sp/>0);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment">//<sp/>additional<sp/>const<sp/>expression<sp/>overloading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="tir_2op_8h_1a34c733b88658efba336e09ccd85e576c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_ASSIGN_OP_OVERLOAD(Name,<sp/>OpFunc)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="774"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(PrimExpr&amp;<sp/>a,<sp/>PrimExpr<sp/>b)<sp/>{\</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>OpFunc(a,<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>a;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD(Name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="780"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(const<sp/>PrimExpr&amp;<sp/>a,<sp/>float<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(a,<sp/>PrimExpr(b));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(float<sp/>a,<sp/>const<sp/>PrimExpr&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(PrimExpr(a),<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(int<sp/>a,<sp/>const<sp/>PrimExpr&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(tir::make_const(b.dtype(),<sp/>a),<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(const<sp/>PrimExpr&amp;<sp/>a,<sp/>int<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(a,<sp/>tir::make_const(a.dtype(),<sp/>b));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(const<sp/>PrimExpr&amp;<sp/>a,<sp/>double<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(a,<sp/>tir::make_const(DataType::Float(64),<sp/>b));<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="794"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="tir_2op_8h_1ab6a17993efa67183ba992dac29284c80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_LOGICAL_OP_CONST_VAL_OVERLOAD(Name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="797"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(const<sp/>PrimExpr&amp;<sp/>a,<sp/>bool<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="798"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(a,<sp/>PrimExpr(b));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="799"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="800"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(bool<sp/>a,<sp/>const<sp/>PrimExpr&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(PrimExpr(a),<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="802"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD(Name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="805"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(const<sp/>PrimExpr&amp;<sp/>a,<sp/>int<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="806"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(a,<sp/>tir::make_const(a.dtype(),<sp/>b));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="807"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="808"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>Name(int<sp/>a,<sp/>const<sp/>PrimExpr&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="809"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Name(tir::make_const(b.dtype(),<sp/>a),<sp/>b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="namespacetvm_1a96061840d12f84eeecc8fae11e245242" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a34c733b88658efba336e09ccd85e576c" kindref="member">TVM_DEFINE_ASSIGN_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">+=,<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">+);</highlight></codeline>
<codeline lineno="813" refid="namespacetvm_1a164d454c519fecaa5611c86b65469acc" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a34c733b88658efba336e09ccd85e576c" kindref="member">TVM_DEFINE_ASSIGN_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">-=,<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">-);</highlight></codeline>
<codeline lineno="814" refid="namespacetvm_1a9233d7b436ae52ac070442ba19caed18" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a34c733b88658efba336e09ccd85e576c" kindref="member">TVM_DEFINE_ASSIGN_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">*=,<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="815" refid="namespacetvm_1ac225d9ad74343d0e97a5e943e7f6a7d1" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">+);</highlight></codeline>
<codeline lineno="816" refid="namespacetvm_1a028ba217f99b6cb1592a6a56b2bc9ee5" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">-);</highlight></codeline>
<codeline lineno="817" refid="namespacetvm_1a1815d8b152819885a5733554f374a9ca" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="818" refid="namespacetvm_1aa26bf5f7b12b17f87400c63c63663c60" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="819" refid="namespacetvm_1a468d959980234ccc84c319810d787219" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a9da780393e228969f77aa7550520a582" kindref="member">min</ref>);</highlight></codeline>
<codeline lineno="820" refid="namespacetvm_1a1180d1f0ef1d427bad98a89c66d84c0f" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>);</highlight></codeline>
<codeline lineno="821" refid="namespacetvm_1a7e2181bca182f90533ec35537714d09d" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&gt;);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="namespacetvm_1aae1dcfef78728c5490d3c107b4abac5a" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&gt;=);</highlight></codeline>
<codeline lineno="823" refid="namespacetvm_1a0854363590c38f5479b1da5e70c4f002" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="namespacetvm_1a6eea8276bcc178425bc14f3d878970ff" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1aabcf618a12e97c38fccecf7351392154" kindref="member">TVM_DEFINE_BINOP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;=);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer<sp/>related<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="namespacetvm_1a9d88aa90642838c6bc41c4cbead148fd" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>);</highlight></codeline>
<codeline lineno="827" refid="namespacetvm_1abd2345bc3cd37ab4f762c0f971042daa" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a857781b7243b2f90018f7fe6baf9c30e" kindref="member">indexmod</ref>);</highlight></codeline>
<codeline lineno="828" refid="namespacetvm_1a5b5bb91649c681b0ea799689be9647bf" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a7bcbff6b886a4fa59b65e7cf05714b49" kindref="member">truncdiv</ref>);</highlight></codeline>
<codeline lineno="829" refid="namespacetvm_1ad6c6dbf136b1086695780fd695df350b" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1ae3fd62ca6008d6f20e4845426ec47aa6" kindref="member">truncmod</ref>);</highlight></codeline>
<codeline lineno="830" refid="namespacetvm_1ad3b659d13dd33e7a027b9d082315a776" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a25cb3bf64427a16a93529d0a5c40b6de" kindref="member">floordiv</ref>);</highlight></codeline>
<codeline lineno="831" refid="namespacetvm_1a08a5224a973dc893665ab543c116854d" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(<ref refid="namespacetvm_1a74b2e0fb912a82f974e2b652f7de8d34" kindref="member">floormod</ref>);</highlight></codeline>
<codeline lineno="832" refid="namespacetvm_1a550c2a251b2a6fd2a72172fe3db75d40" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&gt;&gt;);<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="namespacetvm_1ad0449d28f23318cc5163159a58c80ba3" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;);<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="namespacetvm_1acb2697d9f746f0377975893eb080288e" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&amp;);</highlight></codeline>
<codeline lineno="835" refid="namespacetvm_1ad5ba71021b167b0a6ca2138b2c8bbace" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">|);</highlight></codeline>
<codeline lineno="836" refid="namespacetvm_1a6f638564e5e4d1023096523800f2579e" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1a0ad19625381aae20ca7a930260089c47" kindref="member">TVM_DEFINE_INT_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">^);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>logical<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="namespacetvm_1a3fc66f0c6cd2135365cd24917d931abe" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1ab6a17993efa67183ba992dac29284c80" kindref="member">TVM_DEFINE_LOGICAL_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&amp;&amp;);</highlight></codeline>
<codeline lineno="839" refid="namespacetvm_1a1a3f9ad4d0e25eee9c0b3a9c83114bc0" refkind="member"><highlight class="normal"><ref refid="tir_2op_8h_1ab6a17993efa67183ba992dac29284c80" kindref="member">TVM_DEFINE_LOGICAL_OP_CONST_VAL_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">||);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TA&gt;</highlight></codeline>
<codeline lineno="847" refid="namespacetvm_1a31e7a3e4a160a1d048e3ba741966f1a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a31e7a3e4a160a1d048e3ba741966f1a8" kindref="member">DivAmbiguityError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TA&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>div_ambiguity<sp/>=<sp/>!std::is_class&lt;TA&gt;::value;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>static_assert(div_ambiguity,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TVM<sp/>supports<sp/>multiple<sp/>types<sp/>of<sp/>integer<sp/>divisions,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;please<sp/>call<sp/>div,<sp/>indexdiv/indexmod,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;floordiv/floormod<sp/>or<sp/>truncdiv/truncmod<sp/>directly<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>avoid<sp/>ambiguity<sp/>in<sp/>the<sp/>code.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Checkout<sp/>these<sp/>functions<sp/>in<sp/>expr_operator.h.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>code<sp/>are<sp/>not<sp/>intended<sp/>to<sp/>be<sp/>used<sp/>in<sp/>the<sp/>codebase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Instead,<sp/>they<sp/>generate<sp/>clear<sp/>compiler<sp/>errors<sp/>that<sp/>ask<sp/>developers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>the<sp/>specific<sp/>division<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>template<sp/>argument<sp/>is<sp/>necessary<sp/>to<sp/>make<sp/>sure<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code<sp/>compiles<sp/>lazily<sp/>by<sp/>the<sp/>compiler<sp/>during<sp/>invocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TB&gt;</highlight></codeline>
<codeline lineno="863" refid="namespacetvm_1a136427374941fbf8e50f53b1cab39e38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1a18256ba1213ce5ff3cf8037a314354b7" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TB&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1a31e7a3e4a160a1d048e3ba741966f1a8" kindref="member">DivAmbiguityError</ref>(a);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TB&gt;</highlight></codeline>
<codeline lineno="869" refid="namespacetvm_1a51dc569142bf8ce8ea55f73029d3807d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1a51dc569142bf8ce8ea55f73029d3807d" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TB&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1a31e7a3e4a160a1d048e3ba741966f1a8" kindref="member">DivAmbiguityError</ref>(a);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TB&gt;</highlight></codeline>
<codeline lineno="875" refid="namespacetvm_1ab25738e50b37cd07b2d171ca74ba9321" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetvm_1ab25738e50b37cd07b2d171ca74ba9321" kindref="member">operator%</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TB&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1a31e7a3e4a160a1d048e3ba741966f1a8" kindref="member">DivAmbiguityError</ref>(a);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_TIR_OP_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/tir/op.h"/>
  </compounddef>
</doxygen>
