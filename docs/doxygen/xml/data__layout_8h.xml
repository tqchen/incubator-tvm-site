<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="data__layout_8h" kind="file" language="C++">
    <compoundname>data_layout.h</compoundname>
    <includes refid="tir_2expr_8h" local="no">tvm/tir/expr.h</includes>
    <includes refid="tir_2op_8h" local="no">tvm/tir/op.h</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="op__attr__types_8h" local="no">include/tvm/relay/op_attr_types.h</includedby>
    <includedby refid="topi_2include_2topi_2transform_8h" local="no">topi/include/topi/transform.h</includedby>
    <incdepgraph>
      <node id="16152">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
      </node>
      <node id="16127">
        <label>atomic</label>
      </node>
      <node id="16141">
        <label>functional</label>
      </node>
      <node id="16143">
        <label>limits</label>
      </node>
      <node id="16132">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="16133" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16134" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="16131" relation="include">
        </childnode>
      </node>
      <node id="16131">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16132" relation="include">
        </childnode>
        <childnode refid="16137" relation="include">
        </childnode>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16141" relation="include">
        </childnode>
        <childnode refid="16142" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16143" relation="include">
        </childnode>
        <childnode refid="16134" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16145">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
      </node>
      <node id="16122">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16127" relation="include">
        </childnode>
      </node>
      <node id="16120">
        <label>stdint.h</label>
      </node>
      <node id="16137">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16138" relation="include">
        </childnode>
        <childnode refid="16127" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
      </node>
      <node id="16148">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16145" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16141" relation="include">
        </childnode>
      </node>
      <node id="16116">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16145" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16151" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16154" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="16150" relation="include">
        </childnode>
        <childnode refid="16143" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
      </node>
      <node id="16125">
        <label>string</label>
      </node>
      <node id="16149">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="16145" relation="include">
        </childnode>
        <childnode refid="16150" relation="include">
        </childnode>
      </node>
      <node id="16146">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16131" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16147" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
      </node>
      <node id="16121">
        <label>stddef.h</label>
      </node>
      <node id="16155">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="16153" relation="include">
        </childnode>
        <childnode refid="16116" relation="include">
        </childnode>
        <childnode refid="16156" relation="include">
        </childnode>
        <childnode refid="16154" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16143" relation="include">
        </childnode>
      </node>
      <node id="16151">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16152" relation="include">
        </childnode>
        <childnode refid="16153" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16154" relation="include">
        </childnode>
        <childnode refid="16143" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16142">
        <label>tuple</label>
      </node>
      <node id="16123">
        <label>dmlc/logging.h</label>
      </node>
      <node id="16156">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="16116" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
      </node>
      <node id="16135">
        <label>vector</label>
      </node>
      <node id="16144">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16145" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
      </node>
      <node id="16133">
        <label>dmlc/io.h</label>
      </node>
      <node id="16118">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="16119" relation="include">
        </childnode>
        <childnode refid="16120" relation="include">
        </childnode>
        <childnode refid="16121" relation="include">
        </childnode>
      </node>
      <node id="16153">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16152" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
      </node>
      <node id="16126">
        <label>utility</label>
      </node>
      <node id="16157">
        <label>sstream</label>
      </node>
      <node id="16117">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16130" relation="include">
        </childnode>
        <childnode refid="16149" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16144" relation="include">
        </childnode>
        <childnode refid="16148" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16139">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="16129">
        <label>cstdlib</label>
      </node>
      <node id="16150">
        <label>iostream</label>
      </node>
      <node id="16138">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="16133" relation="include">
        </childnode>
        <childnode refid="16139" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16137" relation="include">
        </childnode>
      </node>
      <node id="16136">
        <label>unordered_map</label>
      </node>
      <node id="16130">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16131" relation="include">
        </childnode>
        <childnode refid="16137" relation="include">
        </childnode>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16144" relation="include">
        </childnode>
        <childnode refid="16148" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16128">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16129" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16140">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
      </node>
      <node id="16124">
        <label>type_traits</label>
      </node>
      <node id="16154">
        <label>algorithm</label>
      </node>
      <node id="16119">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="16134">
        <label>memory</label>
      </node>
      <node id="16147">
        <label>initializer_list</label>
      </node>
      <node id="16115">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data_layout.h"/>
        <childnode refid="16116" relation="include">
        </childnode>
        <childnode refid="16155" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16157" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16154" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16168">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="16162">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="16164">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="16163">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="16164" relation="include">
        </childnode>
        <childnode refid="16165" relation="include">
        </childnode>
        <childnode refid="16168" relation="include">
        </childnode>
      </node>
      <node id="16167">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="16165">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="16166" relation="include">
        </childnode>
        <childnode refid="16167" relation="include">
        </childnode>
        <childnode refid="16168" relation="include">
        </childnode>
      </node>
      <node id="16166">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="16161">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="16162" relation="include">
        </childnode>
      </node>
      <node id="16159">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="16160" relation="include">
        </childnode>
        <childnode refid="16161" relation="include">
        </childnode>
      </node>
      <node id="16160">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="16158">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data_layout.h"/>
        <childnode refid="16159" relation="include">
        </childnode>
        <childnode refid="16163" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1tir_1_1LayoutAxis" prot="public">tvm::tir::LayoutAxis</innerclass>
    <innerclass refid="classtvm_1_1tir_1_1LayoutNode" prot="public">tvm::tir::LayoutNode</innerclass>
    <innerclass refid="classtvm_1_1tir_1_1Layout" prot="public">tvm::tir::Layout</innerclass>
    <innerclass refid="classtvm_1_1tir_1_1BijectiveLayoutNode" prot="public">tvm::tir::BijectiveLayoutNode</innerclass>
    <innerclass refid="classtvm_1_1tir_1_1BijectiveLayout" prot="public">tvm::tir::BijectiveLayout</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1tir">tvm::tir</innernamespace>
    <briefdescription>
<para>Layout expression to describe the data organization of a tensor. And BijectiveLayout to mapping two data layouts between each other. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#ifndef<sp/>TVM_TIR_DATA_LAYOUT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_TIR_DATA_LAYOUT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2expr_8h" kindref="compound">tvm/tir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2op_8h" kindref="compound">tvm/tir/op.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tir<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classtvm_1_1tir_1_1LayoutAxis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>singleton<sp/>LayoutAxis<sp/>using<sp/>itvar-&gt;var-&gt;name_hint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">tir::IterVar</ref>&amp;<sp/>itvar);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>singleton<sp/>LayoutAxis<sp/>using<sp/>name[0]<sp/>(size<sp/>of<sp/>name<sp/>must<sp/>be<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ab5b179ce478f9a1d01b3e44809040486" kindref="member">make</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" kindref="member">IsPrimal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name_<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="53" refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(1,<sp/>name_);<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>current<sp/>axis<sp/>is<sp/>primal,<sp/>switch<sp/>the<sp/>axis<sp/>to<sp/>its<sp/>subordinate<sp/>one,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>switch<sp/>to<sp/>the<sp/>primal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" kindref="member">ToDual</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name_<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name_<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(name_<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(name_<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>primal<sp/>axis.<sp/>If<sp/>it<sp/>is<sp/>already<sp/>primal,<sp/>return<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classtvm_1_1tir_1_1LayoutAxis_1ada7181b764f93bdd1d4cedf476922364" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ada7181b764f93bdd1d4cedf476922364" kindref="member">ToPrimal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" kindref="member">IsPrimal</ref>()<sp/>?<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" kindref="member">ToDual</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>subordinate<sp/>axis.<sp/>If<sp/>it<sp/>is<sp/>already<sp/>subordinate,<sp/>return<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classtvm_1_1tir_1_1LayoutAxis_1aa58f0180c060e912d9e83cdd0922d152" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1aa58f0180c060e912d9e83cdd0922d152" kindref="member">ToSubordinate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" kindref="member">IsPrimal</ref>()<sp/>?<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" kindref="member">ToDual</ref>()<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classtvm_1_1tir_1_1LayoutAxis_1a0234c6380a757b4a36f4dcba25dc6b21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a0234c6380a757b4a36f4dcba25dc6b21" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_<sp/>==<sp/>rhs.name_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classtvm_1_1tir_1_1LayoutAxis_1a5f510601a3a63b5b192278a18347b6a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a5f510601a3a63b5b192278a18347b6a7" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>l.<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref><sp/>UPPER_CASE[];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref><sp/>LOWER_CASE[];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name)<sp/>:<sp/>name_(name)<sp/>{}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name_;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>node<sp/>container<sp/>Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classtvm_1_1tir_1_1LayoutNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99" refid="classtvm_1_1tir_1_1LayoutNode_1a7cdbaa55c5e21044c01fd99d46096140" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1tir_1_1LayoutNode_1a7cdbaa55c5e21044c01fd99d46096140" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="106" refid="classtvm_1_1tir_1_1LayoutNode_1a4287f43c0ae133205d9803f4fadc3d88" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref><sp/><ref refid="classtvm_1_1tir_1_1LayoutNode_1a4287f43c0ae133205d9803f4fadc3d88" kindref="member">axes</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classtvm_1_1tir_1_1LayoutNode_1a2977b7ca9f44e09896696bcdb4b61953" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutNode_1a2977b7ca9f44e09896696bcdb4b61953" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">,<sp/>&amp;axes);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1ab5b179ce478f9a1d01b3e44809040486" kindref="member">make</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classtvm_1_1tir_1_1LayoutNode_1aaca4fc16e14cb9867cd9f3564b4dd59f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classtvm_1_1tir_1_1Layout" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="classtvm_1_1tir_1_1Layout_1abf3ba7ad67d43133c8f4f9beb21edf32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout_1abf3ba7ad67d43133c8f4f9beb21edf32" kindref="member">Layout</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref>&amp;<sp/>axes);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classtvm_1_1tir_1_1Layout_1a11a8465c3cc562e408a48a7f0fd324fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a11a8465c3cc562e408a48a7f0fd324fd" kindref="member">Layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>)<sp/>:<sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::string(name))<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>);<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classtvm_1_1tir_1_1Layout_1aef6a0989eb7c1a0b9a0707a465cbaa9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>*<sp/><ref refid="classtvm_1_1tir_1_1Layout_1aef6a0989eb7c1a0b9a0707a465cbaa9b" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classtvm_1_1tir_1_1Layout_1a24d1414e53ab3bd153942bf5de5402e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>*<sp/><ref refid="classtvm_1_1tir_1_1Layout_1a24d1414e53ab3bd153942bf5de5402e2" kindref="member">operator-&gt;</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(get_mutable());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classtvm_1_1tir_1_1Layout_1a1c7bdf466d341ad61aba104db318ee0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1Layout_1a1c7bdf466d341ad61aba104db318ee0e" kindref="member">Undef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>undef;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undef;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>SubLayout(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>Split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref><sp/>&amp;axis,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>target_pos,<sp/>int32_t<sp/>factor)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classtvm_1_1tir_1_1Layout_1a4bca97ce52386c053a442ff960581f92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a4bca97ce52386c053a442ff960581f92" kindref="member">ndim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator-&gt;()-&gt;axes.size();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classtvm_1_1tir_1_1Layout_1a2f983c2de370c89a9f0b12ebcf9fec0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a2f983c2de370c89a9f0b12ebcf9fec0c" kindref="member">ndim_primal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>:<sp/>operator-&gt;()-&gt;axes)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(x).<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" kindref="member">IsPrimal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct++;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ct;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classtvm_1_1tir_1_1Layout_1a88c306ea4682d28b85032277fa29df63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a88c306ea4682d28b85032277fa29df63" kindref="member">ExpandPrimal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>&amp;<sp/>dst_layout)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>new_src_layout;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>Find<sp/>the<sp/>axis<sp/>which<sp/>are<sp/>missing<sp/>in<sp/>the<sp/>current<sp/>layout.<sp/>Make<sp/>them<sp/>the<sp/>prefix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>new_src_layout_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dst_axis<sp/>:<sp/>dst_layout-&gt;<ref refid="classtvm_1_1tir_1_1LayoutNode_1a4287f43c0ae133205d9803f4fadc3d88" kindref="member">axes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(dst_axis).<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" kindref="member">IsPrimal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;Contains(<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(dst_axis)))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_src_layout_str<sp/>+=<sp/>dst_axis-&gt;var-&gt;name_hint;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Now,<sp/>add<sp/>the<sp/>primal<sp/>axis<sp/>of<sp/>the<sp/>current<sp/>layout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>new_src_layout_str<sp/>+=<sp/>this-&gt;<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>new_src_layout<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>(new_src_layout_str);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_src_layout;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classtvm_1_1tir_1_1Layout_1a0fa224417a05bc774c6e4fc8093ca75a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="classtvm_1_1tir_1_1Layout_1a0fa224417a05bc774c6e4fc8093ca75a" kindref="member">IndexOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>axis)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>axes<sp/>=<sp/>operator-&gt;()-&gt;axes;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>axes.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axes[i]-&gt;<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>-&gt;<ref refid="classtvm_1_1tir_1_1VarNode_1ac09a97d7c89f6d50b2a8f198e0917dce" kindref="member">name_hint</ref><sp/>==<sp/>axis.<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;int32_t&gt;(i);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>int32_t<sp/>FactorOf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>axis)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classtvm_1_1tir_1_1Layout_1a57a19f7b1c1f3d05d333f6c10272006e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a57a19f7b1c1f3d05d333f6c10272006e" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/>axis)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">tir::IterVar</ref><sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>operator-&gt;()-&gt;axes)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var-&gt;<ref refid="classtvm_1_1tir_1_1IterVarNode_1a09036ef2df09e7caf21e66dcb62675a6" kindref="member">var</ref>-&gt;<ref refid="classtvm_1_1tir_1_1VarNode_1ac09a97d7c89f6d50b2a8f198e0917dce" kindref="member">name_hint</ref><sp/>==<sp/>axis.<ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>())<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classtvm_1_1tir_1_1Layout_1afa5744d258322fb0d9c50c52374bcd9f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref>&amp;<sp/><ref refid="classtvm_1_1tir_1_1Layout_1afa5744d258322fb0d9c50c52374bcd9f" kindref="member">operator[]</ref>(int32_t<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(defined())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Try<sp/>to<sp/>access<sp/>axis<sp/>from<sp/>an<sp/>undefined<sp/>layout.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>index<sp/>=<sp/>i<sp/>&lt;<sp/>0<sp/>?<sp/>static_cast&lt;int32_t&gt;(ndim()<sp/>+<sp/>i)<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>static_cast&lt;size_t&gt;(index)<sp/>&lt;<sp/>ndim())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">tir::IterVar</ref><sp/>axis<sp/>=<sp/>operator-&gt;()-&gt;axes[index];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" kindref="member">LayoutAxis::Get</ref>(axis);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classtvm_1_1tir_1_1Layout_1a9c22206c841f0f09e20d56b9c96b321d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classtvm_1_1tir_1_1Layout_1a9c22206c841f0f09e20d56b9c96b321d" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!defined())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;__undef__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator-&gt;()-&gt;name;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classtvm_1_1tir_1_1Layout_1a2edd48a0abe23330747e815e9598b62e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout_1a2edd48a0abe23330747e815e9598b62e" kindref="member">Equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" kindref="member">name</ref>()<sp/>==<sp/>rhs.<ref refid="classtvm_1_1tir_1_1Layout_1a9c22206c841f0f09e20d56b9c96b321d" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classtvm_1_1tir_1_1Layout_1a4d0f3b738af6b70040980e1287282377" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="classtvm_1_1tir_1_1Layout_1a4d0f3b738af6b70040980e1287282377" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref>&amp;<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>l.<ref refid="classtvm_1_1tir_1_1Layout_1a9c22206c841f0f09e20d56b9c96b321d" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classtvm_1_1tir_1_1Layout_1a34e09318237c606d8e3dfd6267ae72b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1tir_1_1LayoutNode" kindref="compound">LayoutNode</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1BijectiveLayout" kindref="compound">BijectiveLayout</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>node<sp/>container<sp/>BijectiveLayout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classtvm_1_1tir_1_1BijectiveLayoutNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a21eb51d30c60622b38aec8a0953fd763" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a21eb51d30c60622b38aec8a0953fd763" kindref="member">forward_rule</ref>;</highlight></codeline>
<codeline lineno="322" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1af412c66da78635c724c74c581242d6b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1af412c66da78635c724c74c581242d6b0" kindref="member">backward_rule</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a265fb704868822f0cdd00146353020d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a265fb704868822f0cdd00146353020d0" kindref="member">src_layout</ref>;</highlight></codeline>
<codeline lineno="327" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a3d5c2dcbfb62a658a7779129aacd8950" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a3d5c2dcbfb62a658a7779129aacd8950" kindref="member">dst_layout</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a58436540190348f9109940ccd4ffe5d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1a58436540190348f9109940ccd4ffe5d7" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;src_layout&quot;</highlight><highlight class="normal">,<sp/>&amp;src_layout);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;dst_layout&quot;</highlight><highlight class="normal">,<sp/>&amp;dst_layout);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;forward_rule&quot;</highlight><highlight class="normal">,<sp/>&amp;forward_rule);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;backward_rule&quot;</highlight><highlight class="normal">,<sp/>&amp;backward_rule);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classtvm_1_1tir_1_1BijectiveLayoutNode_1aff70675c76b7f2caf714c8de10e4167f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BijectiveLayout&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classtvm_1_1tir_1_1BijectiveLayout" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1BijectiveLayout" kindref="compound">BijectiveLayout</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayout" kindref="compound">BijectiveLayout</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348" refid="classtvm_1_1tir_1_1BijectiveLayout_1a791c28bc770ab7405162b00b06b19944" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayout_1a791c28bc770ab7405162b00b06b19944" kindref="member">BijectiveLayout</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayout" kindref="compound">BijectiveLayout</ref>(<ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>src_layout,<sp/><ref refid="classtvm_1_1tir_1_1Layout" kindref="compound">Layout</ref><sp/>dst_layout);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>source<sp/>shape,<sp/>infer<sp/>the<sp/>destination<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>ForwardShape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/><ref refid="namespacetopi_1a649c66231bc50f3ed98ac8bb6b6e2518" kindref="member">shape</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>destination<sp/>shape,<sp/>recover<sp/>the<sp/>source<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>BackwardShape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>dst_shape)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>destination<sp/>indices,<sp/>infer<sp/>the<sp/>destination<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>ForwardIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>destination<sp/>indices,<sp/>recover<sp/>the<sp/>source<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>BackwardIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>dst_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref>*<sp/>operator-&gt;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classtvm_1_1tir_1_1BijectiveLayout_1a0a25c034e42d58d166dc03447369ca8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classtvm_1_1tir_1_1BijectiveLayout_1ac2efbd7baab4ee14888a30efb6cecbf1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref>*<sp/><ref refid="classtvm_1_1tir_1_1BijectiveLayout_1ac2efbd7baab4ee14888a30efb6cecbf1" kindref="member">BijectiveLayout::operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1tir_1_1BijectiveLayoutNode" kindref="compound">BijectiveLayoutNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_TIR_DATA_LAYOUT_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/tir/data_layout.h"/>
  </compounddef>
</doxygen>
