<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1relay_1_1FunctionNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::relay::FunctionNode</compoundname>
    <basecompoundref refid="classtvm_1_1BaseFuncNode" prot="public" virt="non-virtual">tvm::BaseFuncNode</basecompoundref>
    <includes refid="relay_2function_8h" local="no">function.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1relay_1_1FunctionNode_1a689c5078fb501798aa1d57d1825e3b5a" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array</ref>&lt; <ref refid="classtvm_1_1relay_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>tvm::Array&lt;Var&gt; tvm::relay::FunctionNode::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
<para><ref refid="classtvm_1_1relay_1_1Function" kindref="compound">Function</ref> parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="42" column="1" bodyfile="include/tvm/relay/function.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1relay_1_1FunctionNode_1a32687067886a6d94e798431a01d04949" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::FunctionNode::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>The expression which represents the computation of the function, the expression may reference the parameters, and the type of it or sub-expressions may reference the type variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="49" column="1" bodyfile="include/tvm/relay/function.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1relay_1_1FunctionNode_1a075bcae369d873c24b7887eb7c96da40" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref></type>
        <definition>Type tvm::relay::FunctionNode::ret_type</definition>
        <argsstring></argsstring>
        <name>ret_type</name>
        <briefdescription>
<para>User annotated return type of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="51" column="1" bodyfile="include/tvm/relay/function.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1relay_1_1FunctionNode_1a558ecb3ab57111b1a0f347764054d5e1" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array</ref>&lt; <ref refid="namespacetvm_1_1relay_1a63321eb51080f3f57dd7563a3ca0bfa6" kindref="member">TypeVar</ref> &gt;</type>
        <definition>tvm::Array&lt;TypeVar&gt; tvm::relay::FunctionNode::type_params</definition>
        <argsstring></argsstring>
        <name>type_params</name>
        <briefdescription>
<para><ref refid="classtvm_1_1Type" kindref="compound">Type</ref> parameters of the function. Enables the function to vary its type based on these. This corresponds to template paramaters in c++&apos;s terminology. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This can be usually empty for non-polymorphic functions. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="59" column="1" bodyfile="include/tvm/relay/function.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1relay_1_1FunctionNode_1a75dd6eaa948a6bfc802686999428bfef" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::relay::FunctionNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;relay.Function&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="99" column="1" bodyfile="include/tvm/relay/function.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1FunctionNode_1a7f6fba6dde1c0edaa9989e018b8bbb4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::FunctionNode::VisitAttrs</definition>
        <argsstring>(tvm::AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">tvm::AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="61" column="1" bodyfile="include/tvm/relay/function.h" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1FunctionNode_1a8d54d444e9ea9fce2c485f52adce00bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::relay::FunctionNode::SEqualReduce</definition>
        <argsstring>(const FunctionNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1FunctionNode" kindref="compound">FunctionNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="71" column="1" bodyfile="include/tvm/relay/function.h" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1FunctionNode_1afe0cf90285e42336eb9c1eebe793c276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::FunctionNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="82" column="1" bodyfile="include/tvm/relay/function.h" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1FunctionNode_1a758bc467aa4dc4041b0fc7b7dbca4e67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1aa475de90506d48a1bb04ef6d1bd99bfb" kindref="member">FuncType</ref></type>
        <definition>FuncType tvm::relay::FunctionNode::func_type_annotation</definition>
        <argsstring>() const </argsstring>
        <name>func_type_annotation</name>
        <briefdescription>
<para>Return the derived function annotation of this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function type annotation. </para></simplesect>
<simplesect kind="note"><para>The function type annotation can contain <ref refid="classtvm_1_1IncompleteType" kindref="compound">IncompleteType</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1FunctionNode_1a303e82499e8931d3b63aea0ad29df5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::relay::FunctionNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(FunctionNode, BaseFuncNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1relay_1_1FunctionNode" kindref="compound">FunctionNode</ref></type>
        </param>
        <param>
          <type><ref refid="namespacetvm_1_1relay_1a4edf28d1226abc08d28bc2fd90ce7b42" kindref="member">BaseFuncNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/function.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Relay <ref refid="classtvm_1_1relay_1_1Function" kindref="compound">Function</ref> container. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classtvm_1_1relay_1_1Function" kindref="compound">Function</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5129">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="5130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5130">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="5131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5127">
        <label>tvm::relay::FunctionNode</label>
        <link refid="classtvm_1_1relay_1_1FunctionNode"/>
        <childnode refid="5128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5131">
        <label>Object</label>
      </node>
      <node id="5128">
        <label>BaseFuncNode</label>
        <link refid="classtvm_1_1BaseFuncNode"/>
        <childnode refid="5129" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5138">
        <label>ObjectRef</label>
      </node>
      <node id="5134">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="5135" relation="public-inheritance">
        </childnode>
        <childnode refid="5137" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
        <childnode refid="5139" relation="usage">
          <edgelabel>+checked_type_</edgelabel>
        </childnode>
      </node>
      <node id="5135">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="5136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5132">
        <label>tvm::relay::FunctionNode</label>
        <link refid="classtvm_1_1relay_1_1FunctionNode"/>
        <childnode refid="5133" relation="public-inheritance">
        </childnode>
        <childnode refid="5142" relation="usage">
          <edgelabel>+body</edgelabel>
        </childnode>
        <childnode refid="5139" relation="usage">
          <edgelabel>+ret_type</edgelabel>
        </childnode>
        <childnode refid="5144" relation="usage">
          <edgelabel>+params</edgelabel>
        </childnode>
        <childnode refid="5145" relation="usage">
          <edgelabel>+type_params</edgelabel>
        </childnode>
      </node>
      <node id="5137">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5141">
        <label>tvm::Attrs</label>
        <link refid="classtvm_1_1Attrs"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5136">
        <label>Object</label>
      </node>
      <node id="5144">
        <label>tvm::Array&lt; tvm::relay::Var &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5140">
        <label>tvm::DictAttrs</label>
        <link refid="classtvm_1_1DictAttrs"/>
        <childnode refid="5141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5142">
        <label>tvm::RelayExpr</label>
        <link refid="classtvm_1_1RelayExpr"/>
        <childnode refid="5143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5143">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5133">
        <label>BaseFuncNode</label>
        <link refid="classtvm_1_1BaseFuncNode"/>
        <childnode refid="5134" relation="public-inheritance">
        </childnode>
        <childnode refid="5140" relation="usage">
          <edgelabel>+attrs</edgelabel>
        </childnode>
      </node>
      <node id="5145">
        <label>tvm::Array&lt; tvm::TypeVar &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5139">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="5138" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/function.h" line="39" column="1" bodyfile="include/tvm/relay/function.h" bodystart="39" bodyend="101"/>
    <listofallmembers>
      <member refid="classtvm_1_1BaseExprNode_1a905dcf65204e877b6ccb977cf375f2a0" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a13d7d1f1e6f790951caf200cd59c3620" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a75dd6eaa948a6bfc802686999428bfef" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a4fd1a615179d1eb5748990e5de46d668" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>attrs</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a32687067886a6d94e798431a01d04949" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>body</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89bfd23e109a842d18240277ffaaa130" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>checked_type</name></member>
      <member refid="classtvm_1_1RelayExprNode_1ae30ca49a8b84288fbc21d5f312f02929" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>checked_type_</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a758bc467aa4dc4041b0fc7b7dbca4e67" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>func_type_annotation</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a6f177158609cf9da9a4e0a9d3187e3d2" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>GetAttr</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a11694119d77e8d04a9fffd5e9a8b0766" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>HasNonzeroAttr</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a689c5078fb501798aa1d57d1825e3b5a" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>params</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a075bcae369d873c24b7887eb7c96da40" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>ret_type</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a8d54d444e9ea9fce2c485f52adce00bb" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1afe0cf90285e42336eb9c1eebe793c276" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a904ae50be0b72eab079bed93829c9563" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>span</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a577e46c2eda9aec1f8a8e48444d00fd2" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89eb638258551ea1ae2d0e578335474a" prot="public" virt="non-virtual" ambiguityscope="tvm::RelayExprNode::"><scope>tvm::relay::FunctionNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a831794c879d47c30cdd9cefd4f05d533" prot="public" virt="non-virtual" ambiguityscope="tvm::BaseExprNode::"><scope>tvm::relay::FunctionNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a303e82499e8931d3b63aea0ad29df5f2" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a60c73bac632a728a2a669bb34a1c3008" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>type_as</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a558ecb3ab57111b1a0f347764054d5e1" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>type_params</name></member>
      <member refid="classtvm_1_1relay_1_1FunctionNode_1a7f6fba6dde1c0edaa9989e018b8bbb4f" prot="public" virt="non-virtual"><scope>tvm::relay::FunctionNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
