<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cuda_2pooling_8h" kind="file" language="C++">
    <compoundname>pooling.h</compoundname>
    <includes refid="operation_8h" local="no">tvm/te/operation.h</includes>
    <includes refid="schedule__pass_8h" local="no">tvm/te/schedule_pass.h</includes>
    <includes refid="generic__func_8h" local="no">tvm/target/generic_func.h</includes>
    <includes refid="tags_8h" local="no">topi/tags.h</includes>
    <includes refid="fuse_8h" local="no">topi/detail/fuse.h</includes>
    <includes refid="array__utils_8h" local="no">topi/detail/array_utils.h</includes>
    <includedby refid="rocm_2pooling_8h" local="no">topi/include/topi/rocm/pooling.h</includedby>
    <incdepgraph>
      <node id="17269">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="17233" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17283">
        <label>topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="17228" relation="include">
        </childnode>
      </node>
      <node id="17266">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17242" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17241">
        <label>atomic</label>
      </node>
      <node id="17277">
        <label>tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17274" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17271">
        <label>tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17272" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17274" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17256">
        <label>functional</label>
      </node>
      <node id="17258">
        <label>limits</label>
      </node>
      <node id="17247">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="17248" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17243" relation="include">
        </childnode>
        <childnode refid="17249" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
        <childnode refid="17246" relation="include">
        </childnode>
      </node>
      <node id="17246">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="17231" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17247" relation="include">
        </childnode>
        <childnode refid="17252" relation="include">
        </childnode>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17256" relation="include">
        </childnode>
        <childnode refid="17257" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
        <childnode refid="17249" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17260">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="17231" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17276">
        <label>tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17277" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17234">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="17231" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17241" relation="include">
        </childnode>
      </node>
      <node id="17237">
        <label>stdint.h</label>
      </node>
      <node id="17252">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17253" relation="include">
        </childnode>
        <childnode refid="17241" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17263">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17260" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17256" relation="include">
        </childnode>
      </node>
      <node id="17229">
        <label>tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="17230" relation="include">
        </childnode>
        <childnode refid="17233" relation="include">
        </childnode>
        <childnode refid="17269" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
        <childnode refid="17249" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
      </node>
      <node id="17279">
        <label>tvm/target/generic_func.h</label>
        <link refid="generic__func_8h"/>
        <childnode refid="17230" relation="include">
        </childnode>
        <childnode refid="17246" relation="include">
        </childnode>
        <childnode refid="17280" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17270">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="17242" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17260" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17233" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17268" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
        <childnode refid="17265" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17240">
        <label>string</label>
      </node>
      <node id="17264">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="17260" relation="include">
        </childnode>
        <childnode refid="17265" relation="include">
        </childnode>
      </node>
      <node id="17227">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda/pooling.h"/>
        <childnode refid="17228" relation="include">
        </childnode>
        <childnode refid="17278" relation="include">
        </childnode>
        <childnode refid="17279" relation="include">
        </childnode>
        <childnode refid="17282" relation="include">
        </childnode>
        <childnode refid="17283" relation="include">
        </childnode>
        <childnode refid="17284" relation="include">
        </childnode>
      </node>
      <node id="17261">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17243" relation="include">
        </childnode>
        <childnode refid="17246" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17262" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17281">
        <label>unordered_set</label>
      </node>
      <node id="17284">
        <label>topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="17228" relation="include">
        </childnode>
      </node>
      <node id="17228">
        <label>tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="17229" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17275" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17274" relation="include">
        </childnode>
        <childnode refid="17277" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17238">
        <label>stddef.h</label>
      </node>
      <node id="17280">
        <label>tvm/target/target.h</label>
        <link refid="target_8h"/>
        <childnode refid="17230" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17233" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17281" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17272">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17233" relation="include">
        </childnode>
        <childnode refid="17269" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17273" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17274">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="17267" relation="include">
        </childnode>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17273" relation="include">
        </childnode>
        <childnode refid="17268" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
      </node>
      <node id="17233">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17242" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17266" relation="include">
        </childnode>
        <childnode refid="17267" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17268" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17278">
        <label>tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="17275" relation="include">
        </childnode>
      </node>
      <node id="17257">
        <label>tuple</label>
      </node>
      <node id="17231">
        <label>dmlc/logging.h</label>
      </node>
      <node id="17273">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17250">
        <label>vector</label>
      </node>
      <node id="17259">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17260" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17248">
        <label>dmlc/io.h</label>
      </node>
      <node id="17235">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="17236" relation="include">
        </childnode>
        <childnode refid="17237" relation="include">
        </childnode>
        <childnode refid="17238" relation="include">
        </childnode>
      </node>
      <node id="17267">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17242" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17266" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17232">
        <label>utility</label>
      </node>
      <node id="17242">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17243" relation="include">
        </childnode>
        <childnode refid="17245" relation="include">
        </childnode>
        <childnode refid="17264" relation="include">
        </childnode>
        <childnode refid="17261" relation="include">
        </childnode>
        <childnode refid="17259" relation="include">
        </childnode>
        <childnode refid="17263" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17254">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="17244">
        <label>cstdlib</label>
      </node>
      <node id="17265">
        <label>iostream</label>
      </node>
      <node id="17253">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="17248" relation="include">
        </childnode>
        <childnode refid="17254" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17252" relation="include">
        </childnode>
      </node>
      <node id="17251">
        <label>unordered_map</label>
      </node>
      <node id="17245">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17243" relation="include">
        </childnode>
        <childnode refid="17246" relation="include">
        </childnode>
        <childnode refid="17252" relation="include">
        </childnode>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17259" relation="include">
        </childnode>
        <childnode refid="17263" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17243">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17244" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17255">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17231" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
      </node>
      <node id="17230">
        <label>tvm/support/with.h</label>
        <link refid="with_8h"/>
        <childnode refid="17231" relation="include">
        </childnode>
        <childnode refid="17232" relation="include">
        </childnode>
      </node>
      <node id="17239">
        <label>type_traits</label>
      </node>
      <node id="17268">
        <label>algorithm</label>
      </node>
      <node id="17282">
        <label>topi/tags.h</label>
        <link refid="tags_8h"/>
        <childnode refid="17240" relation="include">
        </childnode>
      </node>
      <node id="17236">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="17275">
        <label>tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="17270" relation="include">
        </childnode>
        <childnode refid="17271" relation="include">
        </childnode>
        <childnode refid="17276" relation="include">
        </childnode>
        <childnode refid="17230" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17249">
        <label>memory</label>
      </node>
      <node id="17262">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17285">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda/pooling.h"/>
        <childnode refid="17286" relation="include">
        </childnode>
      </node>
      <node id="17286">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetopi">topi</innernamespace>
    <innernamespace refid="namespacetopi_1_1cuda">topi::cuda</innernamespace>
    <briefdescription>
<para>CUDA schedule for pooling operations. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TOPI_CUDA_POOLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_CUDA_POOLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="operation_8h" kindref="compound">tvm/te/operation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="schedule__pass_8h" kindref="compound">tvm/te/schedule_pass.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="generic__func_8h" kindref="compound">tvm/target/generic_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tags_8h" kindref="compound">topi/tags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fuse_8h" kindref="compound">topi/detail/fuse.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="array__utils_8h" kindref="compound">topi/detail/array_utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetopi" kindref="compound">topi</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm_1_1te" kindref="compound">tvm::te</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm_1_1target_1ae035a32c24d135c0ba65303bdbd87416" kindref="member">cuda</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacetopi_1_1cuda_1a8f3ae83160a8d6a96b5ddfaca7e1c21b" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref><sp/><ref refid="namespacetopi_1_1rocm_1aeee58cb226b8c2dd216ea35734015c52" kindref="member">schedule_pool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Target" kindref="compound">Target</ref><sp/>&amp;target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref>&amp;<sp/>outs)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Operation&gt;</ref><sp/>out_ops;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>outs)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ops.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(t-&gt;op);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacetvm_1_1te_1a485034766309df280239e0994913b34b" kindref="member">create_schedule</ref>(out_ops);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_schedule<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>padded_input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padded_input-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>-&gt;IsInstance&lt;<ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[padded_input].compute_inline();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_thread<sp/>=<sp/>target-&gt;<ref refid="classtvm_1_1TargetNode_1ad501b3a5f9c4af3eac8ef71b924231c6" kindref="member">max_num_threads</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>out;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>OL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::contains(s-&gt;outputs,<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>))<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OL<sp/>=<sp/>s.cache_write(<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>,<sp/></highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>outs[0]-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>.<ref refid="classtvm_1_1te_1_1Operation_1a014d606502eab4ae507c5d4290595349" kindref="member">output</ref>(0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>].set_scope(</highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fused<sp/>=<sp/>detail::Fuse(s[out],<sp/>s[out]-&gt;op.as&lt;<ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref>&gt;()-&gt;<ref refid="classtvm_1_1te_1_1BaseComputeOpNode_1a21617a643897727c51ded2b7260df4c3" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/>bx,<sp/>tx;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].split(fused,<sp/>num_thread,<sp/>&amp;bx,<sp/>&amp;tx);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(bx,<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;blockIdx.x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(tx,<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;threadIdx.x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::contains(s-&gt;outputs,<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[OL].compute_at(s[out],<sp/>tx);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>].compute_at(s[out],<sp/>tx);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::function&lt;void(Operation)&gt;<sp/>traverse;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>traverse<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inline<sp/>all<sp/>one-to-one-mapping<sp/>operators<sp/>except<sp/>the<sp/>last<sp/>stage<sp/>(output)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetopi_1aeaf79d9b22b36fc51e7d1bb5ad331802" kindref="member">is_broadcast</ref>(op-&gt;tag))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!detail::contains(s-&gt;outputs,<sp/>op))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[op].compute_inline();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tensor<sp/>:<sp/>op-&gt;InputTensors())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor-&gt;op-&gt;InputTensors().size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traverse(tensor-&gt;op);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;tag.rfind(</highlight><highlight class="stringliteral">&quot;pool&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tag<sp/>starts<sp/>with<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>padded_input<sp/>=<sp/>op-&gt;InputTensors()[0];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref><sp/>=<sp/>op.output(0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_schedule(padded_input,<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>operator<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>op-&gt;tag;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>traverse(outs[0]-&gt;op);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="namespacetopi_1_1cuda_1ad62dabb52c17a9edcfbeb34cf66b4c4e" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref><sp/><ref refid="namespacetopi_1_1rocm_1a77d9f533a273599910a7369802d46331" kindref="member">schedule_global_pool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Target" kindref="compound">Target</ref><sp/>&amp;target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref>&amp;<sp/>outs)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Operation&gt;</ref><sp/>out_ops;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>outs)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ops.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(t-&gt;op);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacetvm_1_1te_1a485034766309df280239e0994913b34b" kindref="member">create_schedule</ref>(out_ops);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_schedule<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_thread<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block_x<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;blockIdx.x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block_y<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;blockIdx.y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>thread_x<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>num_thread),<sp/></highlight><highlight class="stringliteral">&quot;threadIdx.x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>thread_y<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">tvm::te::thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>num_thread),<sp/></highlight><highlight class="stringliteral">&quot;threadIdx.y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>out;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>OL;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::contains(s-&gt;outputs,<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OL<sp/>=<sp/>s.cache_write(<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>,<sp/></highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>outs[0]-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>.<ref refid="classtvm_1_1te_1_1Operation_1a014d606502eab4ae507c5d4290595349" kindref="member">output</ref>(0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>].set_scope(</highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>s[out]-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>.as&lt;<ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref>&gt;()-&gt;axis[0];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>s[out]-&gt;op.as&lt;<ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref>&gt;()-&gt;axis[1];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/>by,<sp/>ty;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].split(i,<sp/>num_thread,<sp/>&amp;by,<sp/>&amp;ty);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/>bx,<sp/>tx;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].split(c,<sp/>num_thread,<sp/>&amp;bx,<sp/>&amp;tx);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].reorder({<sp/>by,<sp/>bx,<sp/>ty,<sp/>tx<sp/>});</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(ty,<sp/>thread_y);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(tx,<sp/>thread_x);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(by,<sp/>block_y);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>s[out].bind(bx,<sp/>block_x);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::contains(s-&gt;outputs,<sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[OL].compute_at(s[out],<sp/>tx);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>].compute_at(s[out],<sp/>tx);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::function&lt;void(Operation)&gt;<sp/>traverse;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>traverse<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inline<sp/>all<sp/>one-to-one-mapping<sp/>operators<sp/>except<sp/>the<sp/>last<sp/>stage<sp/>(output)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetopi_1aeaf79d9b22b36fc51e7d1bb5ad331802" kindref="member">is_broadcast</ref>(op-&gt;tag))<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!detail::contains(s-&gt;outputs,<sp/>op))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[op].compute_inline();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tensor<sp/>:<sp/>op-&gt;InputTensors())<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor-&gt;op-&gt;InputTensors().size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traverse(tensor-&gt;op);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op-&gt;tag.rfind(</highlight><highlight class="stringliteral">&quot;global_pool&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tag<sp/>starts<sp/>with<sp/>global_pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref><sp/>=<sp/>op.output(0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_schedule(<ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>operator<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>op-&gt;tag;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>traverse(outs[0]-&gt;op);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cuda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>topi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TOPI_CUDA_POOLING_H_</highlight></codeline>
    </programlisting>
    <location file="topi/include/topi/cuda/pooling.h"/>
  </compounddef>
</doxygen>
