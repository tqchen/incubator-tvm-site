<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1AssertStmtNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::AssertStmtNode</compoundname>
    <basecompoundref refid="classtvm_1_1tir_1_1StmtNode" prot="public" virt="non-virtual">tvm::tir::StmtNode</basecompoundref>
    <includes refid="stmt_8h" local="no">stmt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1AssertStmtNode_1a016ff228d0c944b8d295223f54858493" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::AssertStmtNode::condition</definition>
        <argsstring></argsstring>
        <name>condition</name>
        <briefdescription>
<para>Condition to be checked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="147" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1AssertStmtNode_1a42ff732b4df33bddf74f9a92669cebb9" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::AssertStmtNode::message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <briefdescription>
<para><ref refid="classtvm_1_1Error" kindref="compound">Error</ref> message when assertion failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="149" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1AssertStmtNode_1ad861e0e3a9f7d7aefe60cba36241d226" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>Stmt tvm::tir::AssertStmtNode::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>Body which this assertion holds true. Will be executed after the assertion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="154" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1AssertStmtNode_1a656ba70169caac2670439782234b2fa6" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::tir::AssertStmtNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;AssertStmt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="177" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1AssertStmtNode_1ad4b51bee8779971bed4bdfeb72006d99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::AssertStmtNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="156" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1AssertStmtNode_1a95e359c096097dacf07eeaefd1977826" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::AssertStmtNode::SEqualReduce</definition>
        <argsstring>(const AssertStmtNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1AssertStmtNode" kindref="compound">AssertStmtNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="162" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="162" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1AssertStmtNode_1af951b4bd4d85da16e19cdf546a447c1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::AssertStmtNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="169" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1AssertStmtNode_1a63080edac8e68a1358affcc192b747c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::AssertStmtNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(AssertStmtNode, StmtNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1AssertStmtNode" kindref="compound">AssertStmtNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1StmtNode" kindref="compound">StmtNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="178" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1AssertStmtNode_1abdd0a95299b297bab446c9710c039b06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>static Stmt tvm::tir::AssertStmtNode::make</definition>
        <argsstring>(PrimExpr condition, PrimExpr message, Stmt body)</argsstring>
        <name>make</name>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Assert condition, if an error occurs, return the error message. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3939">
        <label>Object</label>
      </node>
      <node id="3937">
        <label>tvm::tir::AssertStmtNode</label>
        <link refid="classtvm_1_1tir_1_1AssertStmtNode"/>
        <childnode refid="3938" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3938">
        <label>tvm::tir::StmtNode</label>
        <link refid="classtvm_1_1tir_1_1StmtNode"/>
        <childnode refid="3939" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3945">
        <label>ObjectRef</label>
      </node>
      <node id="3942">
        <label>Object</label>
      </node>
      <node id="3940">
        <label>tvm::tir::AssertStmtNode</label>
        <link refid="classtvm_1_1tir_1_1AssertStmtNode"/>
        <childnode refid="3941" relation="public-inheritance">
        </childnode>
        <childnode refid="3943" relation="usage">
          <edgelabel>+condition</edgelabel>
          <edgelabel>+message</edgelabel>
        </childnode>
        <childnode refid="3946" relation="usage">
          <edgelabel>+body</edgelabel>
        </childnode>
      </node>
      <node id="3943">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="3944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3946">
        <label>tvm::tir::Stmt</label>
        <link refid="classtvm_1_1tir_1_1Stmt"/>
        <childnode refid="3945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3944">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="3945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3941">
        <label>tvm::tir::StmtNode</label>
        <link refid="classtvm_1_1tir_1_1StmtNode"/>
        <childnode refid="3942" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/stmt.h" line="144" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="144" bodyend="179"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1StmtNode_1a463ce5a124a6c222706888122bb44865" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1StmtNode_1ab7e026e32383e67e620719b025e00056" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1a656ba70169caac2670439782234b2fa6" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1ad861e0e3a9f7d7aefe60cba36241d226" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>body</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1a016ff228d0c944b8d295223f54858493" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>condition</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1abdd0a95299b297bab446c9710c039b06" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>make</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1a42ff732b4df33bddf74f9a92669cebb9" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>message</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1a95e359c096097dacf07eeaefd1977826" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1af951b4bd4d85da16e19cdf546a447c1f" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1tir_1_1StmtNode_1ab4627fb1adbea88d4fe3a33679569421" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1a63080edac8e68a1358affcc192b747c6" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1AssertStmtNode_1ad4b51bee8779971bed4bdfeb72006d99" prot="public" virt="non-virtual"><scope>tvm::tir::AssertStmtNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
