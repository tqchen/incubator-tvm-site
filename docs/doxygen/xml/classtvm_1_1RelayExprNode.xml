<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1RelayExprNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::RelayExprNode</compoundname>
    <basecompoundref refid="classtvm_1_1BaseExprNode" prot="public" virt="non-virtual">tvm::BaseExprNode</basecompoundref>
    <derivedcompoundref refid="classtvm_1_1BaseFuncNode" prot="public" virt="non-virtual">tvm::BaseFuncNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1ConstructorNode" prot="public" virt="non-virtual">tvm::ConstructorNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1GlobalVarNode" prot="public" virt="non-virtual">tvm::GlobalVarNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1OpNode" prot="public" virt="non-virtual">tvm::OpNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1CallNode" prot="public" virt="non-virtual">tvm::relay::CallNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1ConstantNode" prot="public" virt="non-virtual">tvm::relay::ConstantNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1IfNode" prot="public" virt="non-virtual">tvm::relay::IfNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1LetNode" prot="public" virt="non-virtual">tvm::relay::LetNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1MatchNode" prot="public" virt="non-virtual">tvm::relay::MatchNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1RefCreateNode" prot="public" virt="non-virtual">tvm::relay::RefCreateNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1RefReadNode" prot="public" virt="non-virtual">tvm::relay::RefReadNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1RefWriteNode" prot="public" virt="non-virtual">tvm::relay::RefWriteNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1TempExprNode" prot="public" virt="non-virtual">tvm::relay::TempExprNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1TupleGetItemNode" prot="public" virt="non-virtual">tvm::relay::TupleGetItemNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1TupleNode" prot="public" virt="non-virtual">tvm::relay::TupleNode</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1relay_1_1VarNode" prot="public" virt="non-virtual">tvm::relay::VarNode</derivedcompoundref>
    <includes refid="ir_2expr_8h" local="no">expr.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1RelayExprNode_1a904ae50be0b72eab079bed93829c9563" prot="public" static="no" mutable="yes">
        <type><ref refid="classtvm_1_1Span" kindref="compound">Span</ref></type>
        <definition>Span tvm::RelayExprNode::span</definition>
        <argsstring></argsstring>
        <name>span</name>
        <briefdescription>
<para><ref refid="classtvm_1_1Span" kindref="compound">Span</ref> that points to the original source code. Reserved debug information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="144" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1RelayExprNode_1ae30ca49a8b84288fbc21d5f312f02929" prot="public" static="no" mutable="yes">
        <type><ref refid="classtvm_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type tvm::RelayExprNode::checked_type_</definition>
        <argsstring></argsstring>
        <name>checked_type_</name>
        <initializer>= <ref refid="classtvm_1_1Type" kindref="compound">Type</ref>(nullptr)</initializer>
        <briefdescription>
<para>Stores the result of type inference(type checking). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This can be undefined before type inference. This value is discarded during serialization. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="151" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1RelayExprNode_1af3b9138611995c37d266f0f977f8eb1b" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::RelayExprNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;relay.Expr&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="169" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1RelayExprNode_1a89bfd23e109a842d18240277ffaaa130" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1Type" kindref="compound">Type</ref> &amp;</type>
        <definition>const Type &amp; tvm::RelayExprNode::checked_type</definition>
        <argsstring>() const </argsstring>
        <name>checked_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The checked_type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="155" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="427" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1RelayExprNode_1a60c73bac632a728a2a669bb34a1c3008" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TTypeNode</type>
          </param>
        </templateparamlist>
        <type>const TTypeNode *</type>
        <definition>const TTypeNode * tvm::RelayExprNode::type_as</definition>
        <argsstring>() const </argsstring>
        <name>type_as</name>
        <briefdescription>
<para>Check if the inferred(checked) type of the Expr is backed by a TTypeNode and return it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will thrown an error if the node type of this Expr is not TTypeNode.</para></simplesect>
<simplesect kind="return"><para>The corresponding TTypeNode pointer. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>specific <ref refid="classtvm_1_1TypeNode" kindref="compound">TypeNode</ref> we look for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="167" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="437" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1RelayExprNode_1a89eb638258551ea1ae2d0e578335474a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::RelayExprNode::TVM_DECLARE_BASE_OBJECT_INFO</definition>
        <argsstring>(RelayExprNode, BaseExprNode)</argsstring>
        <name>TVM_DECLARE_BASE_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1RelayExprNode" kindref="compound">RelayExprNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1BaseExprNode" kindref="compound">BaseExprNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/expr.h" line="170" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base node of all non-primitive expressions. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classtvm_1_1RelayExpr" kindref="compound">RelayExpr</ref> supports tensor types, functions and ADT as first class citizens. The life-cycle of the corresponding objects are implicitly managed by the language.</para><para><simplesect kind="see"><para><ref refid="classtvm_1_1RelayExpr" kindref="compound">RelayExpr</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6564">
        <label>tvm::relay::CallNode</label>
        <link refid="classtvm_1_1relay_1_1CallNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6570">
        <label>tvm::relay::RefReadNode</label>
        <link refid="classtvm_1_1relay_1_1RefReadNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6555">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="6556" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6566">
        <label>tvm::relay::IfNode</label>
        <link refid="classtvm_1_1relay_1_1IfNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6561">
        <label>tvm::ConstructorNode</label>
        <link refid="classtvm_1_1ConstructorNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6575">
        <label>tvm::relay::VarNode</label>
        <link refid="classtvm_1_1relay_1_1VarNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6562">
        <label>tvm::GlobalVarNode</label>
        <link refid="classtvm_1_1GlobalVarNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6569">
        <label>tvm::relay::RefCreateNode</label>
        <link refid="classtvm_1_1relay_1_1RefCreateNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6567">
        <label>tvm::relay::LetNode</label>
        <link refid="classtvm_1_1relay_1_1LetNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6556">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="6557" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6559">
        <label>tvm::relay::FunctionNode</label>
        <link refid="classtvm_1_1relay_1_1FunctionNode"/>
        <childnode refid="6558" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6572">
        <label>tvm::relay::TempExprNode</label>
        <link refid="classtvm_1_1relay_1_1TempExprNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6557">
        <label>Object</label>
      </node>
      <node id="6574">
        <label>tvm::relay::TupleNode</label>
        <link refid="classtvm_1_1relay_1_1TupleNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6565">
        <label>tvm::relay::ConstantNode</label>
        <link refid="classtvm_1_1relay_1_1ConstantNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6558">
        <label>tvm::BaseFuncNode</label>
        <link refid="classtvm_1_1BaseFuncNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6560">
        <label>tvm::tir::PrimFuncNode</label>
        <link refid="classtvm_1_1tir_1_1PrimFuncNode"/>
        <childnode refid="6558" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6573">
        <label>tvm::relay::TupleGetItemNode</label>
        <link refid="classtvm_1_1relay_1_1TupleGetItemNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6568">
        <label>tvm::relay::MatchNode</label>
        <link refid="classtvm_1_1relay_1_1MatchNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6563">
        <label>tvm::OpNode</label>
        <link refid="classtvm_1_1OpNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6571">
        <label>tvm::relay::RefWriteNode</label>
        <link refid="classtvm_1_1relay_1_1RefWriteNode"/>
        <childnode refid="6555" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6580">
        <label>ObjectRef</label>
      </node>
      <node id="6576">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="6577" relation="public-inheritance">
        </childnode>
        <childnode refid="6579" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
        <childnode refid="6581" relation="usage">
          <edgelabel>+checked_type_</edgelabel>
        </childnode>
      </node>
      <node id="6577">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="6578" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6579">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="6580" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6578">
        <label>Object</label>
      </node>
      <node id="6581">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="6580" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/expr.h" line="138" column="1" bodyfile="include/tvm/ir/expr.h" bodystart="138" bodyend="171"/>
    <listofallmembers>
      <member refid="classtvm_1_1BaseExprNode_1a905dcf65204e877b6ccb977cf375f2a0" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a13d7d1f1e6f790951caf200cd59c3620" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1RelayExprNode_1af3b9138611995c37d266f0f977f8eb1b" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89bfd23e109a842d18240277ffaaa130" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>checked_type</name></member>
      <member refid="classtvm_1_1RelayExprNode_1ae30ca49a8b84288fbc21d5f312f02929" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>checked_type_</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a904ae50be0b72eab079bed93829c9563" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>span</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89eb638258551ea1ae2d0e578335474a" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a831794c879d47c30cdd9cefd4f05d533" prot="public" virt="non-virtual" ambiguityscope="tvm::BaseExprNode::"><scope>tvm::RelayExprNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a60c73bac632a728a2a669bb34a1c3008" prot="public" virt="non-virtual"><scope>tvm::RelayExprNode</scope><name>type_as</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
