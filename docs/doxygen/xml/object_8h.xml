<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="object_8h" kind="file" language="C++">
    <compoundname>object.h</compoundname>
    <includes local="no">dmlc/logging.h</includes>
    <includes refid="c__runtime__api_8h" local="no">tvm/runtime/c_runtime_api.h</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">atomic</includes>
    <includedby refid="ir_2adt_8h" local="no">include/tvm/ir/adt.h</includedby>
    <includedby refid="ir_2expr_8h" local="no">include/tvm/ir/expr.h</includedby>
    <includedby refid="span_8h" local="no">include/tvm/ir/span.h</includedby>
    <includedby refid="ir_2type_8h" local="no">include/tvm/ir/type.h</includedby>
    <includedby refid="node_2container_8h" local="no">include/tvm/node/container.h</includedby>
    <includedby refid="functor_8h" local="no">include/tvm/node/functor.h</includedby>
    <includedby refid="node_8h" local="no">include/tvm/node/node.h</includedby>
    <includedby refid="reflection_8h" local="no">include/tvm/node/reflection.h</includedby>
    <includedby refid="serialization_8h" local="no">include/tvm/node/serialization.h</includedby>
    <includedby refid="interpreter_8h" local="no">include/tvm/relay/interpreter.h</includedby>
    <includedby refid="runtime_2container_8h" local="no">include/tvm/runtime/container.h</includedby>
    <includedby refid="runtime_2memory_8h" local="no">include/tvm/runtime/memory.h</includedby>
    <includedby refid="runtime_2module_8h" local="no">include/tvm/runtime/module.h</includedby>
    <includedby refid="ndarray_8h" local="no">include/tvm/runtime/ndarray.h</includedby>
    <includedby refid="packed__func_8h" local="no">include/tvm/runtime/packed_func.h</includedby>
    <includedby refid="vm_8h" local="no">include/tvm/runtime/vm.h</includedby>
    <incdepgraph>
      <node id="14788">
        <label>atomic</label>
      </node>
      <node id="14779">
        <label>include/tvm/runtime/object.h</label>
        <link refid="object.h"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
      </node>
      <node id="14783">
        <label>stdint.h</label>
      </node>
      <node id="14786">
        <label>string</label>
      </node>
      <node id="14784">
        <label>stddef.h</label>
      </node>
      <node id="14780">
        <label>dmlc/logging.h</label>
      </node>
      <node id="14781">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14783" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
      </node>
      <node id="14787">
        <label>utility</label>
      </node>
      <node id="14785">
        <label>type_traits</label>
      </node>
      <node id="14782">
        <label>dlpack/dlpack.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14867">
        <label>include/tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="14815" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
      </node>
      <node id="14850">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="14809">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="14897">
        <label>include/tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="14792" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
      </node>
      <node id="14840">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
      </node>
      <node id="14889">
        <label>include/tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14860">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14861" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
      </node>
      <node id="14803">
        <label>include/tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
      </node>
      <node id="14822">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="14849">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="14848" relation="include">
        </childnode>
      </node>
      <node id="14870">
        <label>include/tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14871" relation="include">
        </childnode>
      </node>
      <node id="14910">
        <label>include/tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="14911" relation="include">
        </childnode>
      </node>
      <node id="14829">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="14911">
        <label>include/tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14912" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14913" relation="include">
        </childnode>
        <childnode refid="14914" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14885" relation="include">
        </childnode>
      </node>
      <node id="14878">
        <label>include/tvm/relay/attrs/nn.h</label>
        <link refid="include_2tvm_2relay_2attrs_2nn_8h"/>
      </node>
      <node id="14905">
        <label>include/tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14906" relation="include">
        </childnode>
        <childnode refid="14901" relation="include">
        </childnode>
        <childnode refid="14904" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14891" relation="include">
        </childnode>
        <childnode refid="14892" relation="include">
        </childnode>
      </node>
      <node id="14827">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="14871">
        <label>include/tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14866">
        <label>include/tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="14861" relation="include">
        </childnode>
      </node>
      <node id="14837">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="14903">
        <label>include/tvm/ir/env_func.h</label>
        <link refid="env__func_8h"/>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14799">
        <label>include/tvm/ir/type_relation.h</label>
        <link refid="type__relation_8h"/>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14789">
        <label>include/tvm/runtime/object.h</label>
        <link refid="object.h"/>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14897" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14905" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14907" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14909" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14915" relation="include">
        </childnode>
        <childnode refid="14911" relation="include">
        </childnode>
        <childnode refid="14914" relation="include">
        </childnode>
      </node>
      <node id="14846">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="14854">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="14915">
        <label>include/tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14911" relation="include">
        </childnode>
        <childnode refid="14916" relation="include">
        </childnode>
      </node>
      <node id="14852">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14904">
        <label>include/tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
      </node>
      <node id="14865">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14831" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14795">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="14826">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="14827" relation="include">
        </childnode>
      </node>
      <node id="14801">
        <label>include/tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14853">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="14838">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="14815">
        <label>include/tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="14816" relation="include">
        </childnode>
      </node>
      <node id="14848">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14880">
        <label>include/tvm/relay/attrs/vision.h</label>
        <link refid="vision_8h"/>
      </node>
      <node id="14914">
        <label>include/tvm/runtime/vm.h</label>
        <link refid="vm_8h"/>
        <childnode refid="14809" relation="include">
        </childnode>
      </node>
      <node id="14885">
        <label>include/tvm/target/generic_func.h</label>
        <link refid="generic__func_8h"/>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="14823" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
      </node>
      <node id="14857">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="14835" relation="include">
        </childnode>
      </node>
      <node id="14887">
        <label>include/tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14861" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14891" relation="include">
        </childnode>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14893" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
        <childnode refid="14896" relation="include">
        </childnode>
        <childnode refid="14892" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14895" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
      </node>
      <node id="14877">
        <label>include/tvm/relay/attrs/image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="14802">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type__functor_8h"/>
      </node>
      <node id="14886">
        <label>include/tvm/target/target_info.h</label>
        <link refid="target__info_8h"/>
      </node>
      <node id="14906">
        <label>include/tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="14900" relation="include">
        </childnode>
      </node>
      <node id="14824">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="14825" relation="include">
        </childnode>
      </node>
      <node id="14899">
        <label>include/tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14901" relation="include">
        </childnode>
        <childnode refid="14904" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14893" relation="include">
        </childnode>
      </node>
      <node id="14912">
        <label>include/tvm/runtime/device_api.h</label>
        <link refid="device__api_8h"/>
      </node>
      <node id="14836">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="14830">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
      </node>
      <node id="14834">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14816">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="14817" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="14823" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14830" relation="include">
        </childnode>
        <childnode refid="14831" relation="include">
        </childnode>
        <childnode refid="14839" relation="include">
        </childnode>
        <childnode refid="14840" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
        <childnode refid="14849" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14850" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
        <childnode refid="14853" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
      </node>
      <node id="14806">
        <label>include/tvm/relay/attrs/transform.h</label>
        <link refid="include_2tvm_2relay_2attrs_2transform_8h"/>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14798">
        <label>include/tvm/relay/pattern_functor.h</label>
        <link refid="pattern__functor_8h"/>
      </node>
      <node id="14888">
        <label>include/tvm/relay/base.h</label>
        <link refid="base_8h"/>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14883">
        <label>include/tvm/target/target.h</label>
        <link refid="target_8h"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14885" relation="include">
        </childnode>
      </node>
      <node id="14863">
        <label>include/tvm/driver/driver_api.h</label>
        <link refid="driver__api_8h"/>
      </node>
      <node id="14869">
        <label>include/tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="14870" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14881" relation="include">
        </childnode>
      </node>
      <node id="14859">
        <label>include/tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="14860" relation="include">
        </childnode>
      </node>
      <node id="14855">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="14893">
        <label>include/tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14851">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="14792">
        <label>include/tvm/ir/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
      </node>
      <node id="14892">
        <label>include/tvm/tir/stmt_functor.h</label>
        <link refid="stmt__functor_8h"/>
      </node>
      <node id="14894">
        <label>include/tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14895" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
      </node>
      <node id="14823">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="14814">
        <label>include/tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="14815" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14870" relation="include">
        </childnode>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14886" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
      </node>
      <node id="14828">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="14829" relation="include">
        </childnode>
      </node>
      <node id="14839">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="14817" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
      </node>
      <node id="14808">
        <label>include/tvm/relay/function.h</label>
        <link refid="relay_2function_8h"/>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14793">
        <label>include/tvm/ir/transform.h</label>
        <link refid="include_2tvm_2ir_2transform_8h"/>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14845">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="14907">
        <label>include/tvm/node/serialization.h</label>
        <link refid="serialization_8h"/>
      </node>
      <node id="14862">
        <label>include/tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="14823" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
      </node>
      <node id="14796">
        <label>include/tvm/tir/transform.h</label>
        <link refid="include_2tvm_2tir_2transform_8h"/>
      </node>
      <node id="14790">
        <label>include/tvm/ir/adt.h</label>
        <link refid="ir_2adt_8h"/>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
      </node>
      <node id="14825">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="14831">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="14832" relation="include">
        </childnode>
      </node>
      <node id="14876">
        <label>include/tvm/relay/attrs/device_copy.h</label>
        <link refid="device__copy_8h"/>
      </node>
      <node id="14817">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="14818" relation="include">
        </childnode>
      </node>
      <node id="14896">
        <label>include/tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14893" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
        <childnode refid="14892" relation="include">
        </childnode>
      </node>
      <node id="14819">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="14821">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="14822" relation="include">
        </childnode>
      </node>
      <node id="14901">
        <label>include/tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
      </node>
      <node id="14844">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="14868">
        <label>include/tvm/arith/pattern.h</label>
        <link refid="pattern_8h"/>
      </node>
      <node id="14898">
        <label>include/tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
      </node>
      <node id="14864">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14853" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
      </node>
      <node id="14835">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="14791">
        <label>include/tvm/ir/module.h</label>
        <link refid="ir_2module_8h"/>
        <childnode refid="14792" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
      </node>
      <node id="14900">
        <label>include/tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14897" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
      </node>
      <node id="14813">
        <label>include/tvm/relay/type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
      </node>
      <node id="14841">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="14879">
        <label>include/tvm/relay/attrs/reduce.h</label>
        <link refid="reduce_8h"/>
      </node>
      <node id="14832">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
      </node>
      <node id="14805">
        <label>include/tvm/relay/attrs/memory.h</label>
        <link refid="relay_2attrs_2memory_8h"/>
      </node>
      <node id="14807">
        <label>include/tvm/relay/feature.h</label>
        <link refid="feature_8h"/>
      </node>
      <node id="14794">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="14795" relation="include">
        </childnode>
      </node>
      <node id="14856">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="14858">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="14797">
        <label>include/tvm/relay/expr_functor.h</label>
        <link refid="relay_2expr__functor_8h"/>
      </node>
      <node id="14820">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14800">
        <label>include/tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
      </node>
      <node id="14847">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
      </node>
      <node id="14891">
        <label>include/tvm/tir/expr_functor.h</label>
        <link refid="tir_2expr__functor_8h"/>
        <childnode refid="14892" relation="include">
        </childnode>
      </node>
      <node id="14842">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14916">
        <label>include/tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="14915" relation="include">
        </childnode>
      </node>
      <node id="14902">
        <label>include/tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="14903" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
      </node>
      <node id="14895">
        <label>topi/include/topi/detail/pad_utils.h</label>
        <link refid="pad__utils_8h"/>
        <childnode refid="14835" relation="include">
        </childnode>
      </node>
      <node id="14811">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14818">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14909">
        <label>include/tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14914" relation="include">
        </childnode>
      </node>
      <node id="14843">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="14842" relation="include">
        </childnode>
      </node>
      <node id="14913">
        <label>include/tvm/runtime/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14914" relation="include">
        </childnode>
      </node>
      <node id="14875">
        <label>include/tvm/relay/attrs/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="14872">
        <label>include/tvm/relay/attrs/algorithm.h</label>
        <link refid="algorithm_8h"/>
      </node>
      <node id="14874">
        <label>include/tvm/relay/attrs/bitserial.h</label>
        <link refid="bitserial_8h"/>
      </node>
      <node id="14882">
        <label>include/tvm/ir/tensor_type.h</label>
        <link refid="tensor__type_8h"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14881">
        <label>include/tvm/relay/qnn/attrs.h</label>
        <link refid="relay_2qnn_2attrs_8h"/>
      </node>
      <node id="14861">
        <label>include/tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14862" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14884">
        <label>include/tvm/target/codegen.h</label>
        <link refid="codegen_8h"/>
      </node>
      <node id="14804">
        <label>include/tvm/relay/analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="14908">
        <label>include/tvm/runtime/container.h</label>
        <link refid="runtime_2container_8h"/>
        <childnode refid="14809" relation="include">
        </childnode>
      </node>
      <node id="14833">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="14834" relation="include">
        </childnode>
      </node>
      <node id="14810">
        <label>include/tvm/relay/op.h</label>
        <link refid="relay_2op_8h"/>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14812">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="14873">
        <label>include/tvm/relay/attrs/annotation.h</label>
        <link refid="annotation_8h"/>
      </node>
      <node id="14890">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data__layout_8h"/>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1runtime_1_1Object" prot="public">tvm::runtime::Object</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1ObjectPtr" prot="public">tvm::runtime::ObjectPtr</innerclass>
    <innerclass refid="classtvm_1_1runtime_1_1ObjectRef" prot="public">tvm::runtime::ObjectRef</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1ObjectHash" prot="public">tvm::runtime::ObjectHash</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1ObjectEqual" prot="public">tvm::runtime::ObjectEqual</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1runtime">tvm::runtime</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="object_8h_1a5f80f888f69ef72c51ba04cac65d033c" prot="public" static="no">
        <name>TVM_OBJECT_ATOMIC_REF_COUNTER</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Whether or not use atomic reference counter. If the reference counter is not atomic, an object cannot be owned by multiple threads. We can, however, move an object across threads. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="39" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" prot="public" static="no">
        <name>TVM_DECLARE_BASE_OBJECT_INFO</name>
        <param><defname>TypeName</defname></param>
        <param><defname>ParentType</defname></param>
        <initializer>static_assert(!ParentType::_type_final, &quot;ParentObj maked as final&quot;);  \
  static uint32_t RuntimeTypeIndex()  {                                 \
    if (TypeName::_type_index != ::<ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a633f5947b3a79c577b538cec7528f5aa" kindref="member">tvm::runtime::TypeIndex::kDynamic</ref>) { \
      return TypeName::_type_index;                                     \
    }                                                                   \
    return _GetOrAllocRuntimeTypeIndex();                               \
  }                                                                     \
  static uint32_t _GetOrAllocRuntimeTypeIndex()  {                      \
    static uint32_t tidx = Object::GetOrAllocRuntimeTypeIndex(          \
        TypeName::_type_key,                                            \
        TypeName::_type_index,                                          \
        ParentType::_GetOrAllocRuntimeTypeIndex(),                      \
        TypeName::_type_child_slots,                                    \
        TypeName::_type_child_slots_can_overflow);                      \
    return tidx;                                                        \
  }                                                                     \</initializer>
        <briefdescription>
<para>helper macro to declare a base object type that can be inheritated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TypeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the current type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ParentType</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the ParentType </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="655" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" prot="public" static="no">
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param><defname>TypeName</defname></param>
        <param><defname>ParentType</defname></param>
        <initializer>static const constexpr bool _type_final = true;                       \
  static const constexpr int _type_child_slots = 0;                     \
  <ref refid="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" kindref="member">TVM_DECLARE_BASE_OBJECT_INFO</ref>(TypeName, ParentType)                    \</initializer>
        <briefdescription>
<para>helper macro to declare type information in a final class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TypeName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the current type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ParentType</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the ParentType </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="678" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1a744c2fdb7ff7dc43070c1841a5873c84" prot="public" static="no">
        <name>TVM_ATTRIBUTE_UNUSED</name>
        <briefdescription>
<para>helper macro to supress unused warning </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="688" column="10" bodyfile="include/tvm/runtime/object.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1a7b72d9155e59e0d4dcdf674c90e64c7e" prot="public" static="no">
        <name>TVM_STR_CONCAT_</name>
        <param><defname>__x</defname></param>
        <param><defname>__y</defname></param>
        <initializer>__x##__y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="691" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1a73bf3e57b9d7a6e0dd55d901321d01ed" prot="public" static="no">
        <name>TVM_STR_CONCAT</name>
        <param><defname>__x</defname></param>
        <param><defname>__y</defname></param>
        <initializer><ref refid="object_8h_1a7b72d9155e59e0d4dcdf674c90e64c7e" kindref="member">TVM_STR_CONCAT_</ref>(__x, __y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="692" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1ac63db332fce1a32738566c8880f0d425" prot="public" static="no">
        <name>TVM_OBJECT_REG_VAR_DEF</name>
        <initializer>static <ref refid="object_8h_1a744c2fdb7ff7dc43070c1841a5873c84" kindref="member">TVM_ATTRIBUTE_UNUSED</ref> uint32_t __make_Object_tid</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="694" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1ae1029068e5e7608770038906ca30db09" prot="public" static="no">
        <name>TVM_REGISTER_OBJECT_TYPE</name>
        <param><defname>TypeName</defname></param>
        <initializer><ref refid="object_8h_1a73bf3e57b9d7a6e0dd55d901321d01ed" kindref="member">TVM_STR_CONCAT</ref>(<ref refid="object_8h_1ac63db332fce1a32738566c8880f0d425" kindref="member">TVM_OBJECT_REG_VAR_DEF</ref>, __COUNTER__) =                 \
      TypeName::_GetOrAllocRuntimeTypeIndex()</initializer>
        <briefdescription>
<para>Helper macro to register the object type to runtime. Makes sure that the runtime type table is correctly populated. </para>        </briefdescription>
        <detaileddescription>
<para>Use this macro in the cc file for each terminal class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="703" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" prot="public" static="no">
        <name>TVM_DEFINE_OBJECT_REF_METHODS</name>
        <param><defname>TypeName</defname></param>
        <param><defname>ParentType</defname></param>
        <param><defname>ObjectName</defname></param>
        <initializer>TypeName() {}                                                         \
  explicit TypeName(                                                    \
      ::<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">tvm::runtime::ObjectPtr</ref>&lt;::<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">tvm::runtime::Object</ref>&gt; n)              \
      : ParentType(n) {}                                                \
  const ObjectName* operator-&gt;() const {                                \
    return static_cast&lt;const ObjectName*&gt;(data_.get());                 \
  }                                                                     \
  using ContainerType = ObjectName;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="713" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1aaaa3dc5b6dc33f84b2d28f9a81267212" prot="public" static="no">
        <name>TVM_DEFINE_MUTABLE_OBJECT_REF_METHODS</name>
        <param><defname>TypeName</defname></param>
        <param><defname>ParentType</defname></param>
        <param><defname>ObjectName</defname></param>
        <initializer>TypeName() {}                                                         \
  explicit TypeName(                                                    \
      ::<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">tvm::runtime::ObjectPtr</ref>&lt;::<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">tvm::runtime::Object</ref>&gt; n)              \
      : ParentType(n) {}                                                \
  ObjectName* operator-&gt;() const {                                      \
    return static_cast&lt;ObjectName*&gt;(data_.get());                       \
  }                                                                     \
  using ContainerType = ObjectName;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="731" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="object_8h_1af8330e3864503fb7c4133ae4d48fe4a2" prot="public" static="no">
        <name>TVM_DEFINE_OBJECT_REF_COW_METHOD</name>
        <param><defname>ObjectName</defname></param>
        <initializer>ObjectName* CopyOnWrite() {                                           \
      CHECK(data_ != nullptr);                                          \
      if (!data_.unique())  {                                           \
        auto n = make_object&lt;ObjectName&gt;(*(operator-&gt;()));              \
        ObjectPtr&lt;Object&gt;(std::move(n)).swap(data_);                    \
      }                                                                 \
      return static_cast&lt;ObjectName*&gt;(data_.get());                     \
    }</initializer>
        <briefdescription>
<para>Define CopyOnWrite function in an ObjectRef. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ObjectName</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the Node.</para></parameterdescription>
</parameteritem>
</parameterlist>
CopyOnWrite will generate a unique copy of the internal node. The node will be copied if it is referenced by multiple places. The function returns the raw pointer to the node to allow modification of the content.</para><para><programlisting><codeline><highlight class="normal">MyCOWObjectRef<sp/>ref,<sp/>ref2;</highlight></codeline>
<codeline><highlight class="normal">ref2<sp/>=<sp/>ref;</highlight></codeline>
<codeline><highlight class="normal">ref.CopyOnWrite()-&gt;value<sp/>=<sp/>new_value;</highlight></codeline>
<codeline><highlight class="normal">assert(ref2-&gt;value<sp/>==<sp/>old_value);</highlight></codeline>
<codeline><highlight class="normal">assert(ref-&gt;value<sp/>==<sp/>new_value);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="760" column="9" bodyfile="include/tvm/runtime/object.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A managed object in the TVM runtime. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">#ifndef<sp/>TVM_RUNTIME_OBJECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_RUNTIME_OBJECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dmlc/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="c__runtime__api_8h" kindref="compound">tvm/runtime/c_runtime_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#ifndef<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="object_8h_1a5f80f888f69ef72c51ba04cac65d033c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runtime<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4" kindref="member">TypeIndex</ref><sp/><sp/>{</highlight></codeline>
<codeline lineno="52" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a1b73281b45b997205b5082ba53300d6a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a1b73281b45b997205b5082ba53300d6a" kindref="member">kRoot</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="53" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a626309e16a9075cc8009c93adf3fbc9f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a626309e16a9075cc8009c93adf3fbc9f" kindref="member">kClosure</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="54" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a86d9bc218c0f54443cbbe3fcc5c8382e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a86d9bc218c0f54443cbbe3fcc5c8382e" kindref="member">kVMADT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="55" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4af5474ebdbaaa19e977334eefa4bbd611" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4af5474ebdbaaa19e977334eefa4bbd611" kindref="member">kRuntimeModule</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="56" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a548302094bc9afb6bb14dc2a283c1014" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a548302094bc9afb6bb14dc2a283c1014" kindref="member">kStaticIndexEnd</ref>,</highlight></codeline>
<codeline lineno="58" refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a633f5947b3a79c577b538cec7528f5aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a633f5947b3a79c577b538cec7528f5aa" kindref="member">kDynamic</ref><sp/>=<sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a548302094bc9afb6bb14dc2a283c1014" kindref="member">kStaticIndexEnd</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classtvm_1_1runtime_1_1Object" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150" refid="classtvm_1_1runtime_1_1Object_1a9e84841ca982bff376a978ade0132631" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="classtvm_1_1runtime_1_1Object_1a9e84841ca982bff376a978ade0132631" kindref="member">FDeleter</ref>)(<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152" refid="classtvm_1_1runtime_1_1Object_1a594c0d786dbc567ff6774ab11b45958a" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a594c0d786dbc567ff6774ab11b45958a" kindref="member">type_index</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" kindref="member">type_index_</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159" refid="classtvm_1_1runtime_1_1Object_1a9581610ea91e0e38f57edc82e264a1b0" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a9581610ea91e0e38f57edc82e264a1b0" kindref="member">GetTypeKey</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a817ba6c23b7ee1821c48a75edf255a30" kindref="member">TypeIndex2Key</ref>(<ref refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" kindref="member">type_index_</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165" refid="classtvm_1_1runtime_1_1Object_1ac9a7d8d3d562803c9cf91271c462b61d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ac9a7d8d3d562803c9cf91271c462b61d" kindref="member">GetTypeKeyHash</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a6ee32a02dd44257da105fbbe5d9c8622" kindref="member">TypeIndex2KeyHash</ref>(<ref refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" kindref="member">type_index_</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" kindref="member">IsInstance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a817ba6c23b7ee1821c48a75edf255a30" kindref="member">TypeIndex2Key</ref>(uint32_t<sp/>tindex);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a6ee32a02dd44257da105fbbe5d9c8622" kindref="member">TypeIndex2KeyHash</ref>(uint32_t<sp/>tindex);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a6841f97e06e6614dd7e82c6dd41b818a" kindref="member">TypeKey2Index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" kindref="member">RefCounterType</ref><sp/>=<sp/>std::atomic&lt;int32_t&gt;;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" kindref="member">RefCounterType</ref><sp/>=<sp/>int32_t;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classtvm_1_1runtime_1_1Object_1a43d6bf3191bebb805eced0744d859c1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a43d6bf3191bebb805eced0744d859c1e" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classtvm_1_1runtime_1_1Object_1a5fbebc47be111ecc1d5869bcc0476e21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a5fbebc47be111ecc1d5869bcc0476e21" kindref="member">_GetOrAllocRuntimeTypeIndex</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a1b73281b45b997205b5082ba53300d6a" kindref="member">TypeIndex::kRoot</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206" refid="classtvm_1_1runtime_1_1Object_1ad94d79729ac85aa7c976e23d39066383" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1ad94d79729ac85aa7c976e23d39066383" kindref="member">RuntimeTypeIndex</ref>()<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a1b73281b45b997205b5082ba53300d6a" kindref="member">TypeIndex::kRoot</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>object<sp/>type<sp/>properties<sp/>for<sp/>sub-classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classtvm_1_1runtime_1_1Object_1a55cb618bd4bbcd49317b35ea8e2996be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a55cb618bd4bbcd49317b35ea8e2996be" kindref="member">_type_final</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212" refid="classtvm_1_1runtime_1_1Object_1a14b234a745215da158b2386bbb34bd70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a14b234a745215da158b2386bbb34bd70" kindref="member">_type_child_slots</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213" refid="classtvm_1_1runtime_1_1Object_1a05ece7bcb6bf73e88765c1f193a489ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a05ece7bcb6bf73e88765c1f193a489ce" kindref="member">_type_child_slots_can_overflow</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>member<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classtvm_1_1runtime_1_1Object_1a74e9f076b50b8b335b4a321e9b0bf03c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a74e9f076b50b8b335b4a321e9b0bf03c" kindref="member">_type_has_method_visit_attrs</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216" refid="classtvm_1_1runtime_1_1Object_1a92fe62494027b70af1f7696d611c21b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a92fe62494027b70af1f7696d611c21b6" kindref="member">_type_has_method_sequal_reduce</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217" refid="classtvm_1_1runtime_1_1Object_1ac97054694d03dc5eac58315fb569ef88" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ac97054694d03dc5eac58315fb569ef88" kindref="member">_type_has_method_shash_reduce</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>following<sp/>field<sp/>is<sp/>not<sp/>type<sp/>index<sp/>of<sp/>Object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>was<sp/>intended<sp/>to<sp/>be<sp/>used<sp/>by<sp/>sub-classes<sp/>as<sp/>default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>index<sp/>of<sp/>Object<sp/>is<sp/>TypeIndex::kRoot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classtvm_1_1runtime_1_1Object_1af6aed95d70af7e44ce376a8d7be6c5f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1af6aed95d70af7e44ce376a8d7be6c5f1" kindref="member">_type_index</ref><sp/>=<sp/><ref refid="namespacetvm_1_1runtime_1a7d395cd724f727e86358b73b5cdeb4e4a633f5947b3a79c577b538cec7528f5aa" kindref="member">TypeIndex::kDynamic</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>constructor<sp/>and<sp/>copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classtvm_1_1runtime_1_1Object_1a133436a9ec5c4a768b94102bf95a660b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a133436a9ec5c4a768b94102bf95a660b" kindref="member">Object</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Override<sp/>the<sp/>copy<sp/>and<sp/>assign<sp/>constructors<sp/>to<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>make<sp/>sure<sp/>only<sp/>contents,<sp/>but<sp/>not<sp/>deleter<sp/>and<sp/>ref_counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>copied<sp/>when<sp/>a<sp/>child<sp/>class<sp/>copies<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>enable<sp/>us<sp/>to<sp/>use<sp/>make_object&lt;ObjectClass&gt;(*obj_ptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>copy<sp/>an<sp/>existing<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classtvm_1_1runtime_1_1Object_1ab7968feb6ad38ecaffc320e13819d826" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ab7968feb6ad38ecaffc320e13819d826" kindref="member">Object</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233" refid="classtvm_1_1runtime_1_1Object_1aa1612f69ea5b4225d4cda759cd517323" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1aa1612f69ea5b4225d4cda759cd517323" kindref="member">Object</ref>(<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235" refid="classtvm_1_1runtime_1_1Object_1a69c32fbd96181f5c21d2c878ab285e4f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a69c32fbd96181f5c21d2c878ab285e4f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238" refid="classtvm_1_1runtime_1_1Object_1ae341e561272ff43cdcbc927bc29ac50d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Object_1ae341e561272ff43cdcbc927bc29ac50d" kindref="member">operator=</ref>(<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>&amp;&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fields<sp/>of<sp/>the<sp/>base<sp/>object<sp/>cell.</highlight></codeline>
<codeline lineno="245" refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" kindref="member">type_index_</ref>{0};</highlight></codeline>
<codeline lineno="247" refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" kindref="member">RefCounterType</ref><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>{0};</highlight></codeline>
<codeline lineno="253" refid="classtvm_1_1runtime_1_1Object_1af4407d2b59132e803ff791482dbe0145" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a9e84841ca982bff376a978ade0132631" kindref="member">FDeleter</ref><sp/><ref refid="classtvm_1_1runtime_1_1Object_1af4407d2b59132e803ff791482dbe0145" kindref="member">deleter_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invariant<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" kindref="member">RefCounterType</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(int32_t)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classtvm_1_1runtime_1_1Object_1a55549a6c23987890246248682560a03d" kindref="member">RefCounterType</ref>),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RefCounter<sp/>ABI<sp/>check.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a726972ff315c446192df94027ddea032" kindref="member">GetOrAllocRuntimeTypeIndex</ref>(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>static_tindex,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>parent_tindex,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>type_child_slots,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>type_child_slots_can_overflow);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>counter<sp/>related<sp/>operations</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ac9e5eed7719e322117bde996a171e33a" kindref="member">IncRef</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a70fb5361147634605d6595bb89381f03" kindref="member">DecRef</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DerivedFrom(uint32_t<sp/>parent_tindex)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>friend<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="306" refid="classtvm_1_1runtime_1_1Object_1a8fae619f3bd1a2b2f7273d8d6525032a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjAllocatorBase" kindref="compound">ObjAllocatorBase</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="308" refid="classtvm_1_1runtime_1_1Object_1a4193bb155125953e77ded93c0fb46965" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>;</highlight></codeline>
<codeline lineno="309" refid="classtvm_1_1runtime_1_1Object_1ae0ea8b4adc6dab8c74086bceaef6b3e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref>;</highlight></codeline>
<codeline lineno="310" refid="classtvm_1_1runtime_1_1Object_1a4a8e2a2ce9dc9267dc18ac8abfd8dd16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Object_1a4a8e2a2ce9dc9267dc18ac8abfd8dd16" kindref="member">ObjectInternal</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RelayRefType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1RelayRefType" kindref="compound">RelayRefType</ref><sp/><ref refid="namespacetvm_1_1runtime_1aa4a97de4fefd23aa5942c6a545544a05" kindref="member">GetRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectType*<sp/>ptr);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SubRef,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseRef&gt;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>SubRef<sp/><ref refid="namespacetvm_1_1runtime_1a756a222aed384e208f32d35d3412c918" kindref="member">Downcast</ref>(BaseRef<sp/>ref);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="345" refid="classtvm_1_1runtime_1_1ObjectPtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348" refid="classtvm_1_1runtime_1_1ObjectPtr_1a29eed1f62407d1ea7b28725ea620f0e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a29eed1f62407d1ea7b28725ea620f0e4" kindref="member">ObjectPtr</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="350" refid="classtvm_1_1runtime_1_1ObjectPtr_1a4e8fc75dab845ba616f4d4dc31c5164f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a4e8fc75dab845ba616f4d4dc31c5164f" kindref="member">ObjectPtr</ref>(std::nullptr_t)<sp/>{}<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight></codeline>
<codeline lineno="355" refid="classtvm_1_1runtime_1_1ObjectPtr_1a4feb081f219dfa65775d46f15fd898c4" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a4feb081f219dfa65775d46f15fd898c4" kindref="member">ObjectPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>other)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>(other.data_)<sp/>{}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="362" refid="classtvm_1_1runtime_1_1ObjectPtr_1adccc0605a72bbf2806b0a2c415f82382" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1adccc0605a72bbf2806b0a2c415f82382" kindref="member">ObjectPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;U&gt;</ref>&amp;<sp/>other)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>(other.data_)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;T,<sp/>U&gt;::value,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can<sp/>only<sp/>assign<sp/>of<sp/>child<sp/>class<sp/>ObjectPtr<sp/>to<sp/>parent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371" refid="classtvm_1_1runtime_1_1ObjectPtr_1ab9a13c742256492a2bb19070e41697f2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1ab9a13c742256492a2bb19070e41697f2" kindref="member">ObjectPtr</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;&amp;<sp/>other)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(other.data_)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>other.data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Y&gt;</highlight></codeline>
<codeline lineno="380" refid="classtvm_1_1runtime_1_1ObjectPtr_1a62e18d1b81152c6caf93961eca6d04bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a62e18d1b81152c6caf93961eca6d04bc" kindref="member">ObjectPtr</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Y&gt;</ref>&amp;&amp;<sp/>other)<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(other.data_)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;T,<sp/>Y&gt;::value,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can<sp/>only<sp/>assign<sp/>of<sp/>child<sp/>class<sp/>ObjectPtr<sp/>to<sp/>parent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>other.data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387" refid="classtvm_1_1runtime_1_1ObjectPtr_1ac56d7fad8cbc348ad8ef0e7e23ee90e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1ac56d7fad8cbc348ad8ef0e7e23ee90e2" kindref="member">~ObjectPtr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;reset();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394" refid="classtvm_1_1runtime_1_1ObjectPtr_1a0306cc87b99ff5f392fdb90d6aabc70f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a0306cc87b99ff5f392fdb90d6aabc70f" kindref="member">swap</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(data_,<sp/>other.data_);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400" refid="classtvm_1_1runtime_1_1ObjectPtr_1a1bd42b6c6b4e971414983d3d8f2b884f" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406" refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e40337b5eff0d7629859b495af69361" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e40337b5eff0d7629859b495af69361" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412" refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f055002c740996976657bdd448d9899" refkind="member"><highlight class="normal"><sp/><sp/>T&amp;<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f055002c740996976657bdd448d9899" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420" refid="classtvm_1_1runtime_1_1ObjectPtr_1afda3c65f41e83e1c87145a216f8c846d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1afda3c65f41e83e1c87145a216f8c846d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>takes<sp/>in<sp/>plane<sp/>operator<sp/>to<sp/>enable<sp/>copy<sp/>elison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy-and-swap<sp/>idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a4193bb155125953e77ded93c0fb46965" kindref="member">ObjectPtr</ref>(other).swap(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431" refid="classtvm_1_1runtime_1_1ObjectPtr_1a4ea3532cb25b896b47b609c7db788bf8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a4ea3532cb25b896b47b609c7db788bf8" kindref="member">operator=</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy-and-swap<sp/>idiom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a4193bb155125953e77ded93c0fb46965" kindref="member">ObjectPtr</ref>(std::move(other)).swap(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437" refid="classtvm_1_1runtime_1_1ObjectPtr_1ac4461465ba0e785794794e0405c96590" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1ac4461465ba0e785794794e0405c96590" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_-&gt;DecRef();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444" refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e21dd2172469145baa7bf4d12a998ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e21dd2172469145baa7bf4d12a998ce" kindref="member">use_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/>data_-&gt;use_count()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448" refid="classtvm_1_1runtime_1_1ObjectPtr_1a34b83145402b1340466d1ea7e667cd27" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a34b83145402b1340466d1ea7e667cd27" kindref="member">unique</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>data_-&gt;use_count()<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452" refid="classtvm_1_1runtime_1_1ObjectPtr_1a687b3081346f3b35bee5abc77640e3ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a687b3081346f3b35bee5abc77640e3ae" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>==<sp/>other.data_;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456" refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f135e291e6773f18c89d2af837e02da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f135e291e6773f18c89d2af837e02da" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/>other.data_;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460" refid="classtvm_1_1runtime_1_1ObjectPtr_1aa05e0ea44b9ce636b4b9a9c1f7abab4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1aa05e0ea44b9ce636b4b9a9c1f7abab4c" kindref="member">operator==</ref>(std::nullptr_t<sp/>null)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464" refid="classtvm_1_1runtime_1_1ObjectPtr_1a739e2e97c1b3c6f41abaf937acd899ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a739e2e97c1b3c6f41abaf937acd899ed" kindref="member">operator!=</ref>(std::nullptr_t<sp/>null)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/>data_{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a4193bb155125953e77ded93c0fb46965" kindref="member">ObjectPtr</ref>(<ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/>data)<sp/>:<sp/>data_(data)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_-&gt;IncRef();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>friend<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="classtvm_1_1runtime_1_1ObjectPtr_1a0720b5f434e636e22a3ed34f847eec57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>;</highlight></codeline>
<codeline lineno="482" refid="classtvm_1_1runtime_1_1ObjectPtr_1a5d7d1b555fd908e511caa42bd7ccfc71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>;</highlight></codeline>
<codeline lineno="483" refid="classtvm_1_1runtime_1_1ObjectPtr_1a7191cb82e9344bec1b5fd20f45b289f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectHash" kindref="compound">ObjectHash</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="485" refid="classtvm_1_1runtime_1_1ObjectPtr_1a4193bb155125953e77ded93c0fb46965" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="487" refid="classtvm_1_1runtime_1_1ObjectPtr_1a8fae619f3bd1a2b2f7273d8d6525032a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjAllocatorBase" kindref="compound">ObjAllocatorBase</ref>;</highlight></codeline>
<codeline lineno="488" refid="classtvm_1_1runtime_1_1ObjectPtr_1a9a9fd94393cfd7d4b6e6029348e3e19a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMPODValue__" kindref="compound">TVMPODValue_</ref>;</highlight></codeline>
<codeline lineno="489" refid="classtvm_1_1runtime_1_1ObjectPtr_1a35ae555d4becf356b16aeacd353d41ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMArgsSetter" kindref="compound">TVMArgsSetter</ref>;</highlight></codeline>
<codeline lineno="490" refid="classtvm_1_1runtime_1_1ObjectPtr_1ae0ea8b4adc6dab8c74086bceaef6b3e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref>;</highlight></codeline>
<codeline lineno="491" refid="classtvm_1_1runtime_1_1ObjectPtr_1a7e8b2c6a4fde079ee813c425d2eb6b24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMArgValue" kindref="compound">TVMArgValue</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RelayRefType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1RelayRefType" kindref="compound">RelayRefType</ref><sp/><ref refid="namespacetvm_1_1runtime_1aa4a97de4fefd23aa5942c6a545544a05" kindref="member">GetRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjType*<sp/>ptr);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType&gt;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;BaseType&gt;</ref><sp/><ref refid="namespacetvm_1_1runtime_1a46bcf7948293194c5b9c7db91da96381" kindref="member">GetObjectPtr</ref>(ObjType*<sp/>ptr);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="classtvm_1_1runtime_1_1ObjectRef" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504" refid="classtvm_1_1runtime_1_1ObjectRef_1a6a7dd7404edf1c26f8dbd9bd92d03a02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a6a7dd7404edf1c26f8dbd9bd92d03a02" kindref="member">ObjectRef</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Object&gt;</ref><sp/>data)<sp/>:<sp/>data_(data)<sp/>{}</highlight></codeline>
<codeline lineno="510" refid="classtvm_1_1runtime_1_1ObjectRef_1a62014c9eba5cae2ab5a84963725d6a65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a62014c9eba5cae2ab5a84963725d6a65" kindref="member">same_as</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>==<sp/>other.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518" refid="classtvm_1_1runtime_1_1ObjectRef_1ac8c2b78649a428e35e279d085d509e1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac8c2b78649a428e35e279d085d509e1b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>==<sp/>other.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526" refid="classtvm_1_1runtime_1_1ObjectRef_1a2ae377cc59f98b42339d76bded1c1711" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a2ae377cc59f98b42339d76bded1c1711" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/>other.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534" refid="classtvm_1_1runtime_1_1ObjectRef_1a17626209947c4a2f302422be451661c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a17626209947c4a2f302422be451661c5" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.get()<sp/>&lt;<sp/>other.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>.get();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538" refid="classtvm_1_1runtime_1_1ObjectRef_1a79d0ae0a887ed5cbfa67de7d43f0ef3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a79d0ae0a887ed5cbfa67de7d43f0ef3a" kindref="member">defined</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542" refid="classtvm_1_1runtime_1_1ObjectRef_1a11ad7a277c175ee33e1551bbb77a8694" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.get();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546" refid="classtvm_1_1runtime_1_1ObjectRef_1ab9b1ac131656be45db88e69c04bb16af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1ab9b1ac131656be45db88e69c04bb16af" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550" refid="classtvm_1_1runtime_1_1ObjectRef_1a4142990fd1959abc95aa0cccca4f6cda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a4142990fd1959abc95aa0cccca4f6cda" kindref="member">unique</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.unique();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectType*<sp/>as()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="classtvm_1_1runtime_1_1ObjectRef_1aa5c355fbb7d2f7402ee360dba8a52cdd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1runtime_1_1Object_1a133436a9ec5c4a768b94102bf95a660b" kindref="member">Object</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="572" refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Object&gt;</ref><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="574" refid="classtvm_1_1runtime_1_1ObjectRef_1aa4604d96f4a77cc10cc1e0419758fb2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1aa4604d96f4a77cc10cc1e0419758fb2c" kindref="member">get_mutable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.<ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a1bd42b6c6b4e971414983d3d8f2b884f" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="584" refid="classtvm_1_1runtime_1_1ObjectRef_1acd04bb22a6861e9952c344ee8547411f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1acd04bb22a6861e9952c344ee8547411f" kindref="member">DowncastNoCheck</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref><sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T(std::move(ref.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592" refid="classtvm_1_1runtime_1_1ObjectRef_1a22e5bb9d64dbc773bb9263b70882239e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1a22e5bb9d64dbc773bb9263b70882239e" kindref="member">FFIClearAfterMove</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>*<sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>ref-&gt;data_.data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="602" refid="classtvm_1_1runtime_1_1ObjectRef_1aed593996e4076632450de8fde776707c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;ObjectType&gt;</ref><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1aed593996e4076632450de8fde776707c" kindref="member">GetDataPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;ObjectType&gt;</ref>(ref.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>.data_);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>friend<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="classtvm_1_1runtime_1_1ObjectRef_1a7191cb82e9344bec1b5fd20f45b289f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectHash" kindref="compound">ObjectHash</ref>;</highlight></codeline>
<codeline lineno="607" refid="classtvm_1_1runtime_1_1ObjectRef_1ae0ea8b4adc6dab8c74086bceaef6b3e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref>;</highlight></codeline>
<codeline lineno="608" refid="classtvm_1_1runtime_1_1ObjectRef_1a35ae555d4becf356b16aeacd353d41ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1TVMArgsSetter" kindref="compound">TVMArgsSetter</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SubRef,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseRef&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>SubRef<sp/><ref refid="namespacetvm_1_1runtime_1a756a222aed384e208f32d35d3412c918" kindref="member">Downcast</ref>(BaseRef<sp/>ref);</highlight></codeline>
<codeline lineno="611"><highlight class="normal">};</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;BaseType&gt;</ref><sp/><ref refid="namespacetvm_1_1runtime_1a46bcf7948293194c5b9c7db91da96381" kindref="member">GetObjectPtr</ref>(ObjectType*<sp/>ptr);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="structtvm_1_1runtime_1_1ObjectHash" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectHash" kindref="compound">ObjectHash</ref><sp/>{</highlight></codeline>
<codeline lineno="626" refid="structtvm_1_1runtime_1_1ObjectHash_1a642c7d424e78d19bc2f496d4cbf67046" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectHash_1a642c7d424e78d19bc2f496d4cbf67046" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator()(a.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="631" refid="structtvm_1_1runtime_1_1ObjectHash_1a2aa652c4d2cf9cc05a3bf0a956ccc5dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectHash_1a2aa652c4d2cf9cc05a3bf0a956ccc5dd" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;Object*&gt;()(a.<ref refid="classtvm_1_1runtime_1_1ObjectPtr_1a1bd42b6c6b4e971414983d3d8f2b884f" kindref="member">get</ref>());</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal">};</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="structtvm_1_1runtime_1_1ObjectEqual" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectEqual" kindref="compound">ObjectEqual</ref><sp/>{</highlight></codeline>
<codeline lineno="639" refid="structtvm_1_1runtime_1_1ObjectEqual_1a101b7706be844b57dc93f64ca291b9d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectEqual_1a101b7706be844b57dc93f64ca291b9d6" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref>&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classtvm_1_1runtime_1_1ObjectRef_1a62014c9eba5cae2ab5a84963725d6a65" kindref="member">same_as</ref>(b);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="644" refid="structtvm_1_1runtime_1_1ObjectEqual_1a555703d5fa104019ce1fb79c35151314" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectEqual_1a555703d5fa104019ce1fb79c35151314" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;T&gt;</ref>&amp;<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">};</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_DECLARE_BASE_OBJECT_INFO(TypeName,<sp/>ParentType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"><sp/><sp/>static_assert(!ParentType::_type_final,<sp/>&quot;ParentObj<sp/>maked<sp/>as<sp/>final&quot;);<sp/><sp/>\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"><sp/><sp/>static<sp/>uint32_t<sp/>RuntimeTypeIndex()<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(TypeName::_type_index<sp/>!=<sp/>::tvm::runtime::TypeIndex::kDynamic)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TypeName::_type_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>_GetOrAllocRuntimeTypeIndex();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/>static<sp/>uint32_t<sp/>_GetOrAllocRuntimeTypeIndex()<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>uint32_t<sp/>tidx<sp/>=<sp/>Object::GetOrAllocRuntimeTypeIndex(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeName::_type_key,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeName::_type_index,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParentType::_GetOrAllocRuntimeTypeIndex(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeName::_type_child_slots,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeName::_type_child_slots_can_overflow);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>tidx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_DECLARE_FINAL_OBJECT_INFO(TypeName,<sp/>ParentType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>constexpr<sp/>bool<sp/>_type_final<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>constexpr<sp/>int<sp/>_type_child_slots<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/>TVM_DECLARE_BASE_OBJECT_INFO(TypeName,<sp/>ParentType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_ATTRIBUTE_UNUSED<sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="object_8h_1a744c2fdb7ff7dc43070c1841a5873c84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_ATTRIBUTE_UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="object_8h_1a7b72d9155e59e0d4dcdf674c90e64c7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_STR_CONCAT_(__x,<sp/>__y)<sp/>__x##__y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="object_8h_1a73bf3e57b9d7a6e0dd55d901321d01ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_STR_CONCAT(__x,<sp/>__y)<sp/>TVM_STR_CONCAT_(__x,<sp/>__y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="object_8h_1ac63db332fce1a32738566c8880f0d425" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_OBJECT_REG_VAR_DEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor"><sp/><sp/>static<sp/>TVM_ATTRIBUTE_UNUSED<sp/>uint32_t<sp/>__make_Object_tid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="object_8h_1ae1029068e5e7608770038906ca30db09" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_REGISTER_OBJECT_TYPE(TypeName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"><sp/><sp/>TVM_STR_CONCAT(TVM_OBJECT_REG_VAR_DEF,<sp/>__COUNTER__)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>TypeName::_GetOrAllocRuntimeTypeIndex()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/>\brief<sp/>Define<sp/>object<sp/>reference<sp/>methods.</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>\param<sp/>TypeName<sp/>The<sp/>object<sp/>type<sp/>name</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/>\param<sp/>ParentType<sp/>The<sp/>parent<sp/>type<sp/>of<sp/>the<sp/>objectref</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>\param<sp/>ObjectName<sp/>The<sp/>type<sp/>name<sp/>of<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="object_8h_1ac6e7295a4999e2c8e4a2c990beca887a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_OBJECT_REF_METHODS(TypeName,<sp/>ParentType,<sp/>ObjectName)<sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"><sp/><sp/>TypeName()<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="715"><highlight class="preprocessor"><sp/><sp/>explicit<sp/>TypeName(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::tvm::runtime::ObjectPtr&lt;::tvm::runtime::Object&gt;<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="717"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ParentType(n)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/>const<sp/>ObjectName*<sp/>operator-&gt;()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;const<sp/>ObjectName*&gt;(data_.get());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="721"><highlight class="preprocessor"><sp/><sp/>using<sp/>ContainerType<sp/>=<sp/>ObjectName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*<sp/>\brief<sp/>Define<sp/>object<sp/>reference<sp/>methods<sp/>of<sp/>whose<sp/>content<sp/>is<sp/>mutable.</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*<sp/>\param<sp/>TypeName<sp/>The<sp/>object<sp/>type<sp/>name</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*<sp/>\param<sp/>ParentType<sp/>The<sp/>parent<sp/>type<sp/>of<sp/>the<sp/>objectref</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/>\param<sp/>ObjectName<sp/>The<sp/>type<sp/>name<sp/>of<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>\note<sp/>We<sp/>recommend<sp/>making<sp/>objects<sp/>immutable<sp/>when<sp/>possible.</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>macro<sp/>is<sp/>only<sp/>reserved<sp/>for<sp/>objects<sp/>that<sp/>stores<sp/>runtime<sp/>states.</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="object_8h_1aaaa3dc5b6dc33f84b2d28f9a81267212" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DEFINE_MUTABLE_OBJECT_REF_METHODS(TypeName,<sp/>ParentType,<sp/>ObjectName)<sp/>\</highlight></codeline>
<codeline lineno="732"><highlight class="preprocessor"><sp/><sp/>TypeName()<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="733"><highlight class="preprocessor"><sp/><sp/>explicit<sp/>TypeName(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::tvm::runtime::ObjectPtr&lt;::tvm::runtime::Object&gt;<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ParentType(n)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="736"><highlight class="preprocessor"><sp/><sp/>ObjectName*<sp/>operator-&gt;()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="737"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;ObjectName*&gt;(data_.get());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="738"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="739"><highlight class="preprocessor"><sp/><sp/>using<sp/>ContainerType<sp/>=<sp/>ObjectName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="object_8h_1af8330e3864503fb7c4133ae4d48fe4a2" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_DEFINE_OBJECT_REF_COW_METHOD(ObjectName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/>ObjectName*<sp/>CopyOnWrite()<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(data_<sp/>!=<sp/>nullptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!data_.unique())<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>n<sp/>=<sp/>make_object&lt;ObjectName&gt;(*(operator-&gt;()));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;Object&gt;(std::move(n)).swap(data_);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;ObjectName*&gt;(data_.get());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementations<sp/>details<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Object<sp/>reference<sp/>counting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="classtvm_1_1runtime_1_1Object_1ac9e5eed7719e322117bde996a171e33a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ac9e5eed7719e322117bde996a171e33a" kindref="member">Object::IncRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>.fetch_add(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="classtvm_1_1runtime_1_1Object_1a70fb5361147634605d6595bb89381f03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a70fb5361147634605d6595bb89381f03" kindref="member">Object::DecRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>.fetch_sub(1,<sp/>std::memory_order_release)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic_thread_fence(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;deleter_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1af4407d2b59132e803ff791482dbe0145" kindref="member">deleter_</ref>)(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Object::use_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>.load(std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1ac9e5eed7719e322117bde996a171e33a" kindref="member">Object::IncRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>++<ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a70fb5361147634605d6595bb89381f03" kindref="member">Object::DecRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--ref_counter<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;deleter_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*this-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1af4407d2b59132e803ff791482dbe0145" kindref="member">deleter_</ref>)(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Object::use_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1a0d492efee331e2239a093f4b2017c10f" kindref="member">ref_counter_</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_OBJECT_ATOMIC_REF_COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="812" refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" kindref="member">Object::IsInstance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>following<sp/>code<sp/>can<sp/>be<sp/>optimized<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compiler<sp/>dead-code<sp/>elimination<sp/>for<sp/>already<sp/>known<sp/>constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>is<sp/>a<sp/>subclass<sp/>of<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;TargetType,<sp/>Object&gt;::value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TargetType::_type_final)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>target<sp/>type<sp/>is<sp/>a<sp/>final<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>only<sp/>need<sp/>to<sp/>check<sp/>the<sp/>equivalence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1a4bfc2586cb55f2af47728187b3256255" kindref="member">type_index_</ref><sp/>==<sp/>TargetType::RuntimeTypeIndex();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>target<sp/>type<sp/>is<sp/>a<sp/>non-leaf<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>type<sp/>index<sp/>falls<sp/>into<sp/>the<sp/>range<sp/>of<sp/>reserved<sp/>slots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>begin<sp/>=<sp/>TargetType::RuntimeTypeIndex();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>condition<sp/>will<sp/>be<sp/>optimized<sp/>by<sp/>constant-folding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TargetType::_type_child_slots<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>end<sp/>=<sp/>begin<sp/>+<sp/>TargetType::_type_child_slots;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;type_index_<sp/>&gt;=<sp/>begin<sp/>&amp;&amp;<sp/>self-&gt;type_index_<sp/>&lt;<sp/>end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;type_index_<sp/>==<sp/>begin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!TargetType::_type_child_slots_can_overflow)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invariance:<sp/>parent<sp/>index<sp/>is<sp/>always<sp/>smaller<sp/>than<sp/>the<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;type_index_<sp/>&lt;<sp/>TargetType::RuntimeTypeIndex())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rare<sp/>slower-path,<sp/>check<sp/>type<sp/>hierachy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;DerivedFrom(TargetType::RuntimeTypeIndex());</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjectType&gt;</highlight></codeline>
<codeline lineno="847" refid="classtvm_1_1runtime_1_1ObjectRef_1ab51c99a3607ca95884d9efd978998ce8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectType*<sp/><ref refid="classtvm_1_1runtime_1_1ObjectRef_1ab51c99a3607ca95884d9efd978998ce8" kindref="member">ObjectRef::as</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_-&gt;IsInstance&lt;ObjectType&gt;())<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ObjectType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get());</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RelayRefType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType&gt;</highlight></codeline>
<codeline lineno="857" refid="namespacetvm_1_1runtime_1ad4c790ddcf38a1ef9800466cd0c1a0a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1RelayRefType" kindref="compound">RelayRefType</ref><sp/><ref refid="namespacetvm_1_1runtime_1aa4a97de4fefd23aa5942c6a545544a05" kindref="member">GetRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjType*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>static_assert(std::is_base_of&lt;typename<sp/>RelayRefType::ContainerType,<sp/>ObjType&gt;::value,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>only<sp/>cast<sp/>to<sp/>the<sp/>ref<sp/>of<sp/>same<sp/>container<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1relay_1a13fd39dbc2a639262858e9b72e8fb37f" kindref="member">RelayRefType</ref>(<ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;Object&gt;</ref>(const_cast&lt;Object*&gt;(static_cast&lt;const<sp/>Object*&gt;(ptr))));</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType&gt;</highlight></codeline>
<codeline lineno="864" refid="namespacetvm_1_1runtime_1ac2d903012aff56c2bd54ff66f48450c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;BaseType&gt;</ref><sp/><ref refid="namespacetvm_1_1runtime_1a46bcf7948293194c5b9c7db91da96381" kindref="member">GetObjectPtr</ref>(ObjType*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>static_assert(std::is_base_of&lt;BaseType,<sp/>ObjType&gt;::value,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>only<sp/>cast<sp/>to<sp/>the<sp/>ref<sp/>of<sp/>same<sp/>container<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr&lt;BaseType&gt;</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr));</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SubRef,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseRef&gt;</highlight></codeline>
<codeline lineno="871" refid="namespacetvm_1_1runtime_1a756a222aed384e208f32d35d3412c918" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>SubRef<sp/><ref refid="namespacetvm_1_1runtime_1a756a222aed384e208f32d35d3412c918" kindref="member">Downcast</ref>(BaseRef<sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>CHECK(ref-&gt;template<sp/>IsInstance&lt;typename<sp/>SubRef::ContainerType&gt;())</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Downcast<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ref-&gt;GetTypeKey()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SubRef::ContainerType::_type_key<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SubRef(std::move(ref.data_));</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_RUNTIME_OBJECT_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/runtime/object.h"/>
  </compounddef>
</doxygen>
