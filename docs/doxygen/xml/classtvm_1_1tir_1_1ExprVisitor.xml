<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1ExprVisitor" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::ExprVisitor</compoundname>
    <basecompoundref refid="classtvm_1_1tir_1_1ExprFunctor" prot="public" virt="non-virtual">tvm::tir::ExprFunctor&lt; void(const PrimExpr &amp;)&gt;</basecompoundref>
    <derivedcompoundref refid="classtvm_1_1tir_1_1StmtExprVisitor" prot="public" virt="non-virtual">tvm::tir::StmtExprVisitor</derivedcompoundref>
    <includes refid="tir_2expr__functor_8h" local="no">expr_functor.h</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1abf1ea11bdeb9df050bc73155ffb50a8a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const VarNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a786dcfcef511795b23359a3c60c74477" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const SizeVarNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1SizeVarNode" kindref="compound">SizeVarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ace23e526c5e9ca01910d5f3f1511725b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const LoadNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LoadNode" kindref="compound">LoadNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a206c594717e000028659b4868308ec0b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const LetNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LetNode" kindref="compound">LetNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ac2c3101c3ffbd53be46e46e0c0bb20fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const CallNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1CallNode" kindref="compound">CallNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ac15b2305024fcd9fa750350bb51de349" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const AddNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1AddNode" kindref="compound">AddNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a4eb35442748bfdb4872cccc760423efe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const SubNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1SubNode" kindref="compound">SubNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a3514ac6030929c1eab616bccb0da37ad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const MulNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1MulNode" kindref="compound">MulNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a3c91bf7900710da018179935ec40e837" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const DivNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1DivNode" kindref="compound">DivNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a3a28d6962c00847a9aa392d6092e44be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const ModNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1ModNode" kindref="compound">ModNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a600ab7a202c9351d0ce5698a0f884453" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const FloorDivNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1FloorDivNode" kindref="compound">FloorDivNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a001e91c6f7458afcc8f7433c5714dc38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const FloorModNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1FloorModNode" kindref="compound">FloorModNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1af5c92682a0fc192aa04c486bb8a9c07c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const MinNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1MinNode" kindref="compound">MinNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a84893defaf52042718eadb5e7c4c40bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const MaxNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1MaxNode" kindref="compound">MaxNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ab6e54dd3e43497fc0fa6fc02cf04d86a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const EQNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1EQNode" kindref="compound">EQNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a0f5b65f0944eacc6401c8e02cb7ecd63" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const NENode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1NENode" kindref="compound">NENode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ae8b5c68f5ad28542328676dca89dec5c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const LTNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LTNode" kindref="compound">LTNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a092a9c1077a6b50fd3e7d13643446eb0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const LENode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="structtvm_1_1tir_1_1LENode" kindref="compound">LENode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a80845900e297ba27e9700b4e8b827118" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const GTNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1GTNode" kindref="compound">GTNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1abd7bb2cf89bbd693ba682dc989fb8924" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const GENode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1GENode" kindref="compound">GENode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ab8beb3f112fe52825a3894a5de47ed4c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const AndNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1AndNode" kindref="compound">AndNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a1e06eb2730080b3c5b2bb9450b5df9aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const OrNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1OrNode" kindref="compound">OrNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ac42b57f542bac6ec73fd05bdf9e77fa0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const ReduceNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1ReduceNode" kindref="compound">ReduceNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a2bde617452ce9c160cf8bf6f6db89601" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const CastNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1CastNode" kindref="compound">CastNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a893148a9d3d5fa9b76ce653f04d19140" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const NotNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1NotNode" kindref="compound">NotNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a4490d95fc014da418769ac27589ea51b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const SelectNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1SelectNode" kindref="compound">SelectNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a36a25512b8729660c5f3bd7a94085880" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const RampNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1RampNode" kindref="compound">RampNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a8d6d70c40f607e9e438d7f40d4cb2d68" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const BroadcastNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1BroadcastNode" kindref="compound">BroadcastNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1ad83b97a96f2efb935182fd0a5e0b6db0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const ShuffleNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1ShuffleNode" kindref="compound">ShuffleNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a375334641aa93fdc9354a0e0dc636284" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const IntImmNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1tir_1ae8c7db788e840dc1c2ed1f365d5ea829" kindref="member">IntImmNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a8f990531a61731bc5465577f5c6571d5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const FloatImmNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1tir_1adb123be81447d2871f4c716ce2d1dc00" kindref="member">FloatImmNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1ExprVisitor_1a5ea877b24afb7654fe457c13bcee9620" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::ExprVisitor::VisitExpr_</definition>
        <argsstring>(const StringImmNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1StringImmNode" kindref="compound">StringImmNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr_functor.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1tir_1_1ExprVisitor" kindref="compound">ExprVisitor</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5000">
        <label>tvm::tir::StmtExprVisitor</label>
        <link refid="classtvm_1_1tir_1_1StmtExprVisitor"/>
        <childnode refid="4998" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4999">
        <label>tvm::tir::ExprFunctor&lt; void(const PrimExpr &amp;)&gt;</label>
        <link refid="classtvm_1_1tir_1_1ExprFunctor"/>
      </node>
      <node id="4998">
        <label>tvm::tir::ExprVisitor</label>
        <link refid="classtvm_1_1tir_1_1ExprVisitor"/>
        <childnode refid="4999" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5002">
        <label>tvm::tir::ExprFunctor&lt; void(const PrimExpr &amp;)&gt;</label>
        <link refid="classtvm_1_1tir_1_1ExprFunctor"/>
      </node>
      <node id="5001">
        <label>tvm::tir::ExprVisitor</label>
        <link refid="classtvm_1_1tir_1_1ExprVisitor"/>
        <childnode refid="5002" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/expr_functor.h" line="207" column="1" bodyfile="include/tvm/tir/expr_functor.h" bodystart="206" bodyend="246"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1abf1ea11bdeb9df050bc73155ffb50a8a" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a786dcfcef511795b23359a3c60c74477" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ace23e526c5e9ca01910d5f3f1511725b" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a206c594717e000028659b4868308ec0b" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ac2c3101c3ffbd53be46e46e0c0bb20fb" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ac15b2305024fcd9fa750350bb51de349" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a4eb35442748bfdb4872cccc760423efe" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a3514ac6030929c1eab616bccb0da37ad" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a3c91bf7900710da018179935ec40e837" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a3a28d6962c00847a9aa392d6092e44be" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a600ab7a202c9351d0ce5698a0f884453" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a001e91c6f7458afcc8f7433c5714dc38" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1af5c92682a0fc192aa04c486bb8a9c07c" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a84893defaf52042718eadb5e7c4c40bb" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ab6e54dd3e43497fc0fa6fc02cf04d86a" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a0f5b65f0944eacc6401c8e02cb7ecd63" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ae8b5c68f5ad28542328676dca89dec5c" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a092a9c1077a6b50fd3e7d13643446eb0" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a80845900e297ba27e9700b4e8b827118" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1abd7bb2cf89bbd693ba682dc989fb8924" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ab8beb3f112fe52825a3894a5de47ed4c" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a1e06eb2730080b3c5b2bb9450b5df9aa" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ac42b57f542bac6ec73fd05bdf9e77fa0" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a2bde617452ce9c160cf8bf6f6db89601" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a893148a9d3d5fa9b76ce653f04d19140" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a4490d95fc014da418769ac27589ea51b" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a36a25512b8729660c5f3bd7a94085880" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a8d6d70c40f607e9e438d7f40d4cb2d68" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1ad83b97a96f2efb935182fd0a5e0b6db0" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a375334641aa93fdc9354a0e0dc636284" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a8f990531a61731bc5465577f5c6571d5" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1tir_1_1ExprVisitor_1a5ea877b24afb7654fe457c13bcee9620" prot="protected" virt="non-virtual"><scope>tvm::tir::ExprVisitor</scope><name>VisitExpr_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
