<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="registry_8h" kind="file" language="C++">
    <compoundname>registry.h</compoundname>
    <includes refid="packed__func_8h" local="no">tvm/runtime/packed_func.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includedby refid="ir_2op_8h" local="no">include/tvm/ir/op.h</includedby>
    <includedby refid="relay_2type_8h" local="no">include/tvm/relay/type.h</includedby>
    <includedby refid="vm_8h" local="no">include/tvm/runtime/vm.h</includedby>
    <incdepgraph>
      <node id="15075">
        <label>atomic</label>
      </node>
      <node id="15085">
        <label>functional</label>
      </node>
      <node id="15087">
        <label>limits</label>
      </node>
      <node id="15069">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="15070" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15071" relation="include">
        </childnode>
        <childnode refid="15076" relation="include">
        </childnode>
        <childnode refid="15078" relation="include">
        </childnode>
        <childnode refid="15079" relation="include">
        </childnode>
        <childnode refid="15073" relation="include">
        </childnode>
        <childnode refid="15080" relation="include">
        </childnode>
        <childnode refid="15063" relation="include">
        </childnode>
      </node>
      <node id="15063">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="15064" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15069" relation="include">
        </childnode>
        <childnode refid="15081" relation="include">
        </childnode>
        <childnode refid="15084" relation="include">
        </childnode>
        <childnode refid="15071" relation="include">
        </childnode>
        <childnode refid="15085" relation="include">
        </childnode>
        <childnode refid="15086" relation="include">
        </childnode>
        <childnode refid="15079" relation="include">
        </childnode>
        <childnode refid="15073" relation="include">
        </childnode>
        <childnode refid="15087" relation="include">
        </childnode>
        <childnode refid="15078" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
        <childnode refid="15072" relation="include">
        </childnode>
      </node>
      <node id="15071">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="15064" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15072" relation="include">
        </childnode>
        <childnode refid="15073" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
        <childnode refid="15075" relation="include">
        </childnode>
      </node>
      <node id="15067">
        <label>stdint.h</label>
      </node>
      <node id="15081">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15071" relation="include">
        </childnode>
        <childnode refid="15082" relation="include">
        </childnode>
        <childnode refid="15075" relation="include">
        </childnode>
        <childnode refid="15079" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
      </node>
      <node id="15073">
        <label>string</label>
      </node>
      <node id="15068">
        <label>stddef.h</label>
      </node>
      <node id="15086">
        <label>tuple</label>
      </node>
      <node id="15064">
        <label>dmlc/logging.h</label>
      </node>
      <node id="15079">
        <label>vector</label>
      </node>
      <node id="15070">
        <label>dmlc/io.h</label>
      </node>
      <node id="15065">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="15066" relation="include">
        </childnode>
        <childnode refid="15067" relation="include">
        </childnode>
        <childnode refid="15068" relation="include">
        </childnode>
      </node>
      <node id="15074">
        <label>utility</label>
      </node>
      <node id="15083">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="15077">
        <label>cstdlib</label>
      </node>
      <node id="15082">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="15070" relation="include">
        </childnode>
        <childnode refid="15083" relation="include">
        </childnode>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15081" relation="include">
        </childnode>
      </node>
      <node id="15080">
        <label>unordered_map</label>
      </node>
      <node id="15076">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="15071" relation="include">
        </childnode>
        <childnode refid="15077" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
        <childnode refid="15072" relation="include">
        </childnode>
      </node>
      <node id="15062">
        <label>include/tvm/runtime/registry.h</label>
        <link refid="registry.h"/>
        <childnode refid="15063" relation="include">
        </childnode>
        <childnode refid="15073" relation="include">
        </childnode>
        <childnode refid="15079" relation="include">
        </childnode>
        <childnode refid="15074" relation="include">
        </childnode>
      </node>
      <node id="15084">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="15065" relation="include">
        </childnode>
        <childnode refid="15064" relation="include">
        </childnode>
        <childnode refid="15072" relation="include">
        </childnode>
      </node>
      <node id="15072">
        <label>type_traits</label>
      </node>
      <node id="15066">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="15078">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15102">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="15092">
        <label>include/tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="15091" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15094" relation="include">
        </childnode>
        <childnode refid="15095" relation="include">
        </childnode>
      </node>
      <node id="15099">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="15090">
        <label>include/tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="15091" relation="include">
        </childnode>
        <childnode refid="15092" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15096" relation="include">
        </childnode>
        <childnode refid="15097" relation="include">
        </childnode>
        <childnode refid="15094" relation="include">
        </childnode>
        <childnode refid="15100" relation="include">
        </childnode>
        <childnode refid="15101" relation="include">
        </childnode>
        <childnode refid="15102" relation="include">
        </childnode>
        <childnode refid="15103" relation="include">
        </childnode>
        <childnode refid="15104" relation="include">
        </childnode>
        <childnode refid="15105" relation="include">
        </childnode>
        <childnode refid="15095" relation="include">
        </childnode>
        <childnode refid="15098" relation="include">
        </childnode>
      </node>
      <node id="15107">
        <label>include/tvm/runtime/vm.h</label>
        <link refid="vm_8h"/>
        <childnode refid="15102" relation="include">
        </childnode>
      </node>
      <node id="15091">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type__functor_8h"/>
      </node>
      <node id="15097">
        <label>include/tvm/relay/attrs/transform.h</label>
        <link refid="include_2tvm_2relay_2attrs_2transform_8h"/>
        <childnode refid="15098" relation="include">
        </childnode>
      </node>
      <node id="15095">
        <label>include/tvm/relay/pattern_functor.h</label>
        <link refid="pattern__functor_8h"/>
      </node>
      <node id="15101">
        <label>include/tvm/relay/function.h</label>
        <link refid="relay_2function_8h"/>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15094" relation="include">
        </childnode>
        <childnode refid="15098" relation="include">
        </childnode>
      </node>
      <node id="15106">
        <label>include/tvm/relay/type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="15092" relation="include">
        </childnode>
        <childnode refid="15093" relation="include">
        </childnode>
        <childnode refid="15090" relation="include">
        </childnode>
        <childnode refid="15103" relation="include">
        </childnode>
        <childnode refid="15104" relation="include">
        </childnode>
      </node>
      <node id="15096">
        <label>include/tvm/relay/attrs/memory.h</label>
        <link refid="relay_2attrs_2memory_8h"/>
      </node>
      <node id="15100">
        <label>include/tvm/relay/feature.h</label>
        <link refid="feature_8h"/>
      </node>
      <node id="15098">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="15099" relation="include">
        </childnode>
      </node>
      <node id="15094">
        <label>include/tvm/relay/expr_functor.h</label>
        <link refid="relay_2expr__functor_8h"/>
      </node>
      <node id="15089">
        <label>include/tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="15090" relation="include">
        </childnode>
        <childnode refid="15103" relation="include">
        </childnode>
      </node>
      <node id="15104">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="15105" relation="include">
        </childnode>
        <childnode refid="15098" relation="include">
        </childnode>
      </node>
      <node id="15088">
        <label>include/tvm/runtime/registry.h</label>
        <link refid="registry.h"/>
        <childnode refid="15089" relation="include">
        </childnode>
        <childnode refid="15106" relation="include">
        </childnode>
        <childnode refid="15107" relation="include">
        </childnode>
      </node>
      <node id="15093">
        <label>include/tvm/relay/analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="15103">
        <label>include/tvm/relay/op.h</label>
        <link refid="relay_2op_8h"/>
        <childnode refid="15094" relation="include">
        </childnode>
        <childnode refid="15095" relation="include">
        </childnode>
        <childnode refid="15098" relation="include">
        </childnode>
      </node>
      <node id="15105">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1runtime_1_1Registry" prot="public">tvm::runtime::Registry</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1runtime">tvm::runtime</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="registry_8h_1a11b8ea3ea0ce4b6cd2d7be2d5a5627b8" prot="public" static="no">
        <name>TVM_FUNC_REG_VAR_DEF</name>
        <initializer>static <ref refid="object_8h_1a744c2fdb7ff7dc43070c1841a5873c84" kindref="member">TVM_ATTRIBUTE_UNUSED</ref> ::<ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">tvm::runtime::Registry</ref>&amp; __mk_ ## TVM</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/registry.h" line="273" column="9" bodyfile="include/tvm/runtime/registry.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="registry_8h_1a10f047b126505a3deda0b7f68718fa37" prot="public" static="no">
        <name>TVM_REGISTER_GLOBAL</name>
        <param><defname>OpName</defname></param>
        <initializer><ref refid="object_8h_1a73bf3e57b9d7a6e0dd55d901321d01ed" kindref="member">TVM_STR_CONCAT</ref>(<ref refid="registry_8h_1a11b8ea3ea0ce4b6cd2d7be2d5a5627b8" kindref="member">TVM_FUNC_REG_VAR_DEF</ref>, __COUNTER__) =            \
      ::<ref refid="classtvm_1_1runtime_1_1Registry_1a227ffef03991cd50224d5d31257a475a" kindref="member">tvm::runtime::Registry::Register</ref>(OpName)</initializer>
        <briefdescription>
<para>Register a function globally. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">TVM_REGISTER_GLOBAL(&quot;MyPrint&quot;)</highlight></codeline>
<codeline><highlight class="normal">.set_body([](TVMArgs<sp/>args,<sp/>TVMRetValue*<sp/>rv)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">});</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/registry.h" line="284" column="9" bodyfile="include/tvm/runtime/registry.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file defines the TVM global function registry. </para>    </briefdescription>
    <detaileddescription>
<para>The registered functions will be made available to front-end as well as backend users.</para><para>The registry stores type-erased functions. Each registered function is automatically exposed to front-end language(e.g. python).</para><para>Front-end can also pass callbacks as PackedFunc, or register then into the same global registry in C++. The goal is to mix the front-end language and the TVM back-end.</para><para><programlisting><codeline><highlight class="normal">//<sp/>register<sp/>the<sp/>function<sp/>as<sp/>MyAPIFuncName</highlight></codeline>
<codeline><highlight class="normal">TVM_REGISTER_GLOBAL(MyAPIFuncName)</highlight></codeline>
<codeline><highlight class="normal">.set_body([](TVMArgs<sp/>args,<sp/>TVMRetValue*<sp/>rv)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>my<sp/>code.</highlight></codeline>
<codeline><highlight class="normal">});</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">#ifndef<sp/>TVM_RUNTIME_REGISTRY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_RUNTIME_REGISTRY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="packed__func_8h" kindref="compound">tvm/runtime/packed_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runtime<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classtvm_1_1runtime_1_1Registry" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref><sp/>f);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight></codeline>
<codeline lineno="66" refid="classtvm_1_1runtime_1_1Registry_1aa093c769200bbf53e1c5911bd1be5568" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aa093c769200bbf53e1c5911bd1be5568" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1PackedFunc_1ae5f951a6a515f3e3a7493c27704b7849" kindref="member">PackedFunc::FType</ref><sp/>f)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref>(f));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FLambda&gt;</highlight></codeline>
<codeline lineno="92" refid="classtvm_1_1runtime_1_1Registry_1a607848df01d8c33d7e2cf40e7dae42b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a607848df01d8c33d7e2cf40e7dae42b1" kindref="member">set_body_typed</ref>(FLambda<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::function_signature&lt;FLambda&gt;::FType;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">TypedPackedFunc&lt;FType&gt;</ref>(std::move(f)).packed());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args&gt;</highlight></codeline>
<codeline lineno="117" refid="classtvm_1_1runtime_1_1Registry_1ae5f7cc19067b609a79e1bb32b7b6f086" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1ae5f7cc19067b609a79e1bb32b7b6f086" kindref="member">set_body_method</ref>(R<sp/>(T::*f)(Args...))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fwrap<sp/>=[f](T<sp/>target,<sp/>Args...<sp/>params)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>method<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target.*f)(params...);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">TypedPackedFunc</ref>&lt;R(T,<sp/>Args...)&gt;(fwrap));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args&gt;</highlight></codeline>
<codeline lineno="146" refid="classtvm_1_1runtime_1_1Registry_1ae1243626f5f81ca956343dbe8c22b9b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1ae1243626f5f81ca956343dbe8c22b9b3" kindref="member">set_body_method</ref>(R<sp/>(T::*f)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fwrap<sp/>=<sp/>[f](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>target,<sp/>Args...<sp/>params)<sp/>-&gt;<sp/>R<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>method<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target.*f)(params...);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">TypedPackedFunc</ref>&lt;R(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T,<sp/>Args...)&gt;(fwrap));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TObjectRef,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TNode,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_base_of&lt;ObjectRef,<sp/>TObjectRef&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="186" refid="classtvm_1_1runtime_1_1Registry_1ae5fcbc18ff9a33ad700592dc8e46bd90" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1ae5fcbc18ff9a33ad700592dc8e46bd90" kindref="member">set_body_method</ref>(R<sp/>(TNode::*f)(Args...))<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fwrap<sp/>=<sp/>[f](TObjectRef<sp/>ref,<sp/>Args...<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TNode*<sp/>target<sp/>=<sp/>ref.operator-&gt;();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>method<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target-&gt;*f)(params...);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">TypedPackedFunc</ref>&lt;R(TObjectRef,<sp/>Args...)&gt;(fwrap));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TObjectRef,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TNode,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Args,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_base_of&lt;ObjectRef,<sp/>TObjectRef&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="227" refid="classtvm_1_1runtime_1_1Registry_1a106607f2535dc7c838646aabd029aa60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a106607f2535dc7c838646aabd029aa60" kindref="member">set_body_method</ref>(R<sp/>(TNode::*f)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fwrap<sp/>=<sp/>[f](TObjectRef<sp/>ref,<sp/>Args...<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TNode*<sp/>target<sp/>=<sp/>ref.operator-&gt;();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>method<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target-&gt;*f)(params...);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aed802ed365a13a9cef9de4e9f601b62a" kindref="member">set_body</ref>(<ref refid="classtvm_1_1runtime_1_1TypedPackedFunc" kindref="compound">TypedPackedFunc</ref>&lt;R(TObjectRef,<sp/>Args...)&gt;(fwrap));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry" kindref="compound">Registry</ref>&amp;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a227ffef03991cd50224d5d31257a475a" kindref="member">Register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1aad89aa915515019c59364b7b569c4648" kindref="member">Remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref>*<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1afcddc7b207f519f92c622e6918076635" kindref="member">Get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight></codeline>
<codeline lineno="260"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a5c2ff3b997756d76a1ae5fb1d3cc550d" kindref="member">ListNames</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classtvm_1_1runtime_1_1Registry_1a4d8221b67729bafee4c2c5b424ed80ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Registry_1a1fd6b9bc3f72bb2b64e602de3982929d" kindref="member">Manager</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a4d8221b67729bafee4c2c5b424ed80ea" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="269" refid="classtvm_1_1runtime_1_1Registry_1a911416a22858355e0b95ec493db67218" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1PackedFunc" kindref="compound">PackedFunc</ref><sp/><ref refid="classtvm_1_1runtime_1_1Registry_1a911416a22858355e0b95ec493db67218" kindref="member">func_</ref>;</highlight></codeline>
<codeline lineno="270" refid="classtvm_1_1runtime_1_1Registry_1a1fd6b9bc3f72bb2b64e602de3982929d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1runtime_1_1Registry_1a1fd6b9bc3f72bb2b64e602de3982929d" kindref="member">Manager</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="registry_8h_1a11b8ea3ea0ce4b6cd2d7be2d5a5627b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_FUNC_REG_VAR_DEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/>static<sp/>TVM_ATTRIBUTE_UNUSED<sp/>::tvm::runtime::Registry&amp;<sp/>__mk_<sp/>##<sp/>TVM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="registry_8h_1a10f047b126505a3deda0b7f68718fa37" refkind="member"><highlight class="preprocessor">#define<sp/>TVM_REGISTER_GLOBAL(OpName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/>TVM_STR_CONCAT(TVM_FUNC_REG_VAR_DEF,<sp/>__COUNTER__)<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::tvm::runtime::Registry::Register(OpName)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_RUNTIME_REGISTRY_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/runtime/registry.h"/>
  </compounddef>
</doxygen>
