<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1relay_1_1PatternVisitor" kind="class" language="C++" prot="public">
    <compoundname>tvm::relay::PatternVisitor</compoundname>
    <basecompoundref refid="classtvm_1_1relay_1_1PatternFunctor" prot="public" virt="non-virtual">tvm::relay::PatternFunctor&lt; void(const Pattern &amp;n)&gt;</basecompoundref>
    <includes refid="pattern__functor_8h" local="no">pattern_functor.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1aacc0309f0a28ade3e33287906c990259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::PatternVisitor::VisitPattern_</definition>
        <argsstring>(const PatternWildcardNode *op) override</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternWildcardNode" kindref="compound">PatternWildcardNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1ad5ed2a5c3b88ec027df9e4269dff4b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::PatternVisitor::VisitPattern_</definition>
        <argsstring>(const PatternVarNode *op) override</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternVarNode" kindref="compound">PatternVarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1a615c586aebfe563c7dfee3ff99e8ecb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::PatternVisitor::VisitPattern_</definition>
        <argsstring>(const PatternConstructorNode *op) override</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternConstructorNode" kindref="compound">PatternConstructorNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1a2d9a35bc9be4f5d0badb0c1bb5b86847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::relay::PatternVisitor::VisitPattern_</definition>
        <argsstring>(const PatternTupleNode *op) override</argsstring>
        <name>VisitPattern_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1PatternTupleNode" kindref="compound">PatternTupleNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1ac65b220fb52088e5fd6b07f9e355d0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::relay::PatternVisitor::VisitType</definition>
        <argsstring>(const Type &amp;t)</argsstring>
        <name>VisitType</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1aa1ae59cf643dacfef3071ea551e965a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::relay::PatternVisitor::VisitVar</definition>
        <argsstring>(const Var &amp;v)</argsstring>
        <name>VisitVar</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1Var" kindref="compound">Var</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1PatternVisitor_1ace76ea7238295c0be6924c1f0fd85826" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::relay::PatternVisitor::VisitConstructor</definition>
        <argsstring>(const Constructor &amp;c)</argsstring>
        <name>VisitConstructor</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1aec85bf097deda59bd22e88475c9165e9" kindref="member">Constructor</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/pattern_functor.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple visitor wrapper around <ref refid="classtvm_1_1relay_1_1PatternFunctor" kindref="compound">PatternFunctor</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>Exposes two visitors with default traversal strategies, one which doesn&apos;t compute a result but can mutate internal state, and another which functionally builds a new pattern. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="6144">
        <label>tvm::relay::PatternFunctor&lt; void(const Pattern &amp;n)&gt;</label>
        <link refid="classtvm_1_1relay_1_1PatternFunctor"/>
      </node>
      <node id="6143">
        <label>tvm::relay::PatternVisitor</label>
        <link refid="classtvm_1_1relay_1_1PatternVisitor"/>
        <childnode refid="6144" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6146">
        <label>tvm::relay::PatternFunctor&lt; void(const Pattern &amp;n)&gt;</label>
        <link refid="classtvm_1_1relay_1_1PatternFunctor"/>
      </node>
      <node id="6145">
        <label>tvm::relay::PatternVisitor</label>
        <link refid="classtvm_1_1relay_1_1PatternVisitor"/>
        <childnode refid="6146" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/pattern_functor.h" line="131" column="1" bodyfile="include/tvm/relay/pattern_functor.h" bodystart="131" bodyend="140"/>
    <listofallmembers>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1ace76ea7238295c0be6924c1f0fd85826" prot="public" virt="virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitConstructor</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1aacc0309f0a28ade3e33287906c990259" prot="public" virt="non-virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1ad5ed2a5c3b88ec027df9e4269dff4b80" prot="public" virt="non-virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1a615c586aebfe563c7dfee3ff99e8ecb5" prot="public" virt="non-virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1a2d9a35bc9be4f5d0badb0c1bb5b86847" prot="public" virt="non-virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitPattern_</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1ac65b220fb52088e5fd6b07f9e355d0b5" prot="public" virt="virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitType</name></member>
      <member refid="classtvm_1_1relay_1_1PatternVisitor_1aa1ae59cf643dacfef3071ea551e965a5" prot="public" virt="virtual"><scope>tvm::relay::PatternVisitor</scope><name>VisitVar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
