<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tensor_8h" kind="file" language="C++">
    <compoundname>tensor.h</compoundname>
    <includes refid="node_2container_8h" local="no">tvm/node/container.h</includes>
    <includes refid="bound_8h" local="no">tvm/arith/bound.h</includes>
    <includes refid="tir_2expr_8h" local="no">tvm/tir/expr.h</includes>
    <includes refid="tir_2op_8h" local="no">tvm/tir/op.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="op__attr__types_8h" local="no">include/tvm/relay/op_attr_types.h</includedby>
    <includedby refid="op__strategy_8h" local="no">include/tvm/relay/op_strategy.h</includedby>
    <includedby refid="operation_8h" local="no">include/tvm/te/operation.h</includedby>
    <includedby refid="schedule_8h" local="no">include/tvm/te/schedule.h</includedby>
    <includedby refid="tensor__intrin_8h" local="no">include/tvm/te/tensor_intrin.h</includedby>
    <incdepgraph>
      <node id="15860">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
      </node>
      <node id="15857">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
      </node>
      <node id="15831">
        <label>atomic</label>
      </node>
      <node id="15820">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor.h"/>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15848" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15844">
        <label>functional</label>
      </node>
      <node id="15846">
        <label>limits</label>
      </node>
      <node id="15835">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
      </node>
      <node id="15834">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="15823" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="15845" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15853">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="15823" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
      </node>
      <node id="15822">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="15823" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15831" relation="include">
        </childnode>
      </node>
      <node id="15826">
        <label>stdint.h</label>
      </node>
      <node id="15840">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15841" relation="include">
        </childnode>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
      </node>
      <node id="15854">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
      </node>
      <node id="15861">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
      </node>
      <node id="15829">
        <label>string</label>
      </node>
      <node id="15855">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
      </node>
      <node id="15821">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15847" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
      </node>
      <node id="15827">
        <label>stddef.h</label>
      </node>
      <node id="15848">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
      </node>
      <node id="15863">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="15858" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
      </node>
      <node id="15849">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15858" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15845">
        <label>tuple</label>
      </node>
      <node id="15823">
        <label>dmlc/logging.h</label>
      </node>
      <node id="15862">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
      </node>
      <node id="15838">
        <label>vector</label>
      </node>
      <node id="15852">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
      </node>
      <node id="15836">
        <label>dmlc/io.h</label>
      </node>
      <node id="15824">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="15825" relation="include">
        </childnode>
        <childnode refid="15826" relation="include">
        </childnode>
        <childnode refid="15827" relation="include">
        </childnode>
      </node>
      <node id="15858">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
      </node>
      <node id="15830">
        <label>utility</label>
      </node>
      <node id="15850">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15851" relation="include">
        </childnode>
        <childnode refid="15855" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15854" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15842">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="15833">
        <label>cstdlib</label>
      </node>
      <node id="15856">
        <label>iostream</label>
      </node>
      <node id="15841">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="15842" relation="include">
        </childnode>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
      </node>
      <node id="15839">
        <label>unordered_map</label>
      </node>
      <node id="15851">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15854" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15829" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15832">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15843">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="15824" relation="include">
        </childnode>
        <childnode refid="15823" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15828">
        <label>type_traits</label>
      </node>
      <node id="15859">
        <label>algorithm</label>
      </node>
      <node id="15825">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="15837">
        <label>memory</label>
      </node>
      <node id="15847">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15903">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="15893">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15881" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15875" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15882" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15899" relation="include">
        </childnode>
      </node>
      <node id="15864">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor.h"/>
        <childnode refid="15865" relation="include">
        </childnode>
        <childnode refid="15866" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="15917" relation="include">
        </childnode>
      </node>
      <node id="15875">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="15902">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="15882">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="15880">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="15917">
        <label>include/tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="15912" relation="include">
        </childnode>
      </node>
      <node id="15890">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="15899">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="15907">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="15905">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
      </node>
      <node id="15916">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="15885" relation="include">
        </childnode>
        <childnode refid="15884" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
        <childnode refid="15907" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15887" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
      </node>
      <node id="15868">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="15879">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="15880" relation="include">
        </childnode>
      </node>
      <node id="15906">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="15891">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="15901">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15887" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
      </node>
      <node id="15910">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="15888" relation="include">
        </childnode>
      </node>
      <node id="15877">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="15878" relation="include">
        </childnode>
      </node>
      <node id="15889">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="15883">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
      </node>
      <node id="15887">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="15888" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
      </node>
      <node id="15869">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="15870" relation="include">
        </childnode>
        <childnode refid="15873" relation="include">
        </childnode>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15876" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15881" relation="include">
        </childnode>
        <childnode refid="15883" relation="include">
        </childnode>
        <childnode refid="15884" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
        <childnode refid="15906" relation="include">
        </childnode>
        <childnode refid="15907" relation="include">
        </childnode>
        <childnode refid="15908" relation="include">
        </childnode>
        <childnode refid="15909" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15887" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="15875" relation="include">
        </childnode>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15882" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15899" relation="include">
        </childnode>
      </node>
      <node id="15914">
        <label>include/tvm/driver/driver_api.h</label>
        <link refid="driver__api_8h"/>
      </node>
      <node id="15908">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="15904">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="15876">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="15881">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="15882" relation="include">
        </childnode>
      </node>
      <node id="15892">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="15870" relation="include">
        </childnode>
        <childnode refid="15873" relation="include">
        </childnode>
      </node>
      <node id="15898">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="15913">
        <label>include/tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="15914" relation="include">
        </childnode>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15876" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15881" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
      </node>
      <node id="15878">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="15884">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="15885" relation="include">
        </childnode>
      </node>
      <node id="15870">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
      </node>
      <node id="15872">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="15874">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="15875" relation="include">
        </childnode>
      </node>
      <node id="15897">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="15915">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15886" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
        <childnode refid="15906" relation="include">
        </childnode>
        <childnode refid="15888" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
      </node>
      <node id="15888">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="15894">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="15885">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="15886" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15887" relation="include">
        </childnode>
      </node>
      <node id="15867">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="15868" relation="include">
        </childnode>
      </node>
      <node id="15909">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="15911">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="15873">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="15872" relation="include">
        </childnode>
      </node>
      <node id="15900">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="15887" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="15895">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
      </node>
      <node id="15865">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="15866" relation="include">
        </childnode>
        <childnode refid="15867" relation="include">
        </childnode>
      </node>
      <node id="15871">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="15872" relation="include">
        </childnode>
      </node>
      <node id="15896">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="15895" relation="include">
        </childnode>
      </node>
      <node id="15912">
        <label>include/tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="15865" relation="include">
        </childnode>
        <childnode refid="15866" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
      </node>
      <node id="15886">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="15887" relation="include">
        </childnode>
      </node>
      <node id="15866">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1te_1_1Tensor" prot="public">tvm::te::Tensor</innerclass>
    <innerclass refid="classtvm_1_1te_1_1Tensor_1_1Slice" prot="public">tvm::te::Tensor::Slice</innerclass>
    <innerclass refid="classtvm_1_1te_1_1Operation" prot="public">tvm::te::Operation</innerclass>
    <innerclass refid="classtvm_1_1te_1_1TensorNode" prot="public">tvm::te::TensorNode</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1te">tvm::te</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tensor_8h_1a2a32e5f31a6c0d80884b4aa9822dbbac" prot="public" static="no">
        <name>DEFINE_OVERLOAD_SLICE_UNARY_OP</name>
        <param><defname>Op</defname></param>
        <initializer>inline PrimExpr operator Op (const Tensor::Slice&amp; a) {                \
    return Op a.operator PrimExpr() ;                                   \
  }                                                                     \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/tensor.h" line="218" column="9" bodyfile="include/tvm/te/tensor.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" prot="public" static="no">
        <name>DEFINE_OVERLOAD_SLICE_BINARY_OP</name>
        <param><defname>Op</defname></param>
        <initializer>template&lt;typename T&gt;                                                  \
  inline PrimExpr operator Op (const Tensor::Slice&amp; a, const T&amp; b) {    \
    return a.operator PrimExpr() Op b;                                  \
  }                                                                     \
  template&lt;typename T&gt;                                                  \
  inline PrimExpr operator Op (const T&amp; a, const Tensor::Slice&amp; b) {    \
    return a Op b.operator PrimExpr();                                  \
  }                                                                        \
  inline PrimExpr operator Op (const Tensor::Slice&amp; a, const Tensor::Slice&amp; b) { \
    return a.operator PrimExpr() Op b.operator PrimExpr();                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/tensor.h" line="223" column="9" bodyfile="include/tvm/te/tensor.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Dataflow tensor object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TVM_TE_TENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_TE_TENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="node_2container_8h" kindref="compound">tvm/node/container.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bound_8h" kindref="compound">tvm/arith/bound.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2expr_8h" kindref="compound">tvm/tir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2op_8h" kindref="compound">tvm/tir/op.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">te<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>arith::IntSet;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm_1_1tir" kindref="compound">tvm::tir</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>node<sp/>container<sp/>of<sp/>Tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TensorNode;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>node<sp/>container<sp/>for<sp/>Operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OperationNode;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classtvm_1_1te_1_1Tensor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="classtvm_1_1te_1_1Tensor_1a23a2f5549bdcd66eb210fd71813d6051" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor_1a23a2f5549bdcd66eb210fd71813d6051" kindref="member">Tensor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="56" refid="classtvm_1_1te_1_1Tensor_1a6d619c9a463a0ad05bb5bc27189d1230" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1a6d619c9a463a0ad05bb5bc27189d1230" kindref="member">Tensor</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref>*<sp/>operator-&gt;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1a5d186948df24bd18a8aef7eee3b37727" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1a8953e862224184536c2a94d773abf62d" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ndim()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="82" refid="classtvm_1_1te_1_1Tensor_1a2c58dbdca81f9326dc097d2dfa932c13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="classtvm_1_1te_1_1Tensor_1a2c58dbdca81f9326dc097d2dfa932c13" kindref="member">operator()</ref>(Args&amp;&amp;<sp/>...args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices{std::forward&lt;Args&gt;(args)...};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator()(indices);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>operator()(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>operator()(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref><sp/>indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102" refid="classtvm_1_1te_1_1Tensor_1_1Slice" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice" kindref="compound">Slice</ref><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>via<sp/>tensor<sp/>and<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classtvm_1_1te_1_1Tensor_1_1Slice_1ab314819e8bcca6421e9a4f33e48578c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice_1ab314819e8bcca6421e9a4f33e48578c3" kindref="member">Slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>tensor,<sp/>std::vector&lt;PrimExpr&gt;<sp/>indices)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>tensor_(tensor),<sp/>indices_(indices)<sp/>{}</highlight></codeline>
<codeline lineno="112" refid="classtvm_1_1te_1_1Tensor_1_1Slice_1a1a00e3ec5f80973c337b0e7ab9c0974d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice" kindref="compound">Slice</ref><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice_1a1a00e3ec5f80973c337b0e7ab9c0974d" kindref="member">operator[]</ref>(<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>other<sp/>=<sp/>indices_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.emplace_back(i);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice" kindref="compound">Slice</ref>(tensor_,<sp/>other);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122" refid="classtvm_1_1te_1_1Tensor_1_1Slice_1a52250a6adf8e78cde22dd34d1d5baaee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_(indices_);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>tensor_;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>indices_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="135" refid="classtvm_1_1te_1_1Tensor_1a2186a1bbc39673d9e39eafe7a01fed91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice" kindref="compound">Slice</ref><sp/><ref refid="classtvm_1_1te_1_1Tensor_1a2186a1bbc39673d9e39eafe7a01fed91" kindref="member">operator[]</ref>(<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1_1Slice" kindref="compound">Slice</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>{i});</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139" refid="classtvm_1_1te_1_1Tensor_1a79078835ab113994887e66878e2a87ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classtvm_1_1te_1_1Operation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1FunctionRef" kindref="compound">tir::FunctionRef</ref><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146" refid="classtvm_1_1te_1_1Operation_1a7bc69f793cb5cbc99bf20fed8617d487" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation_1a7bc69f793cb5cbc99bf20fed8617d487" kindref="member">Operation</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="147" refid="classtvm_1_1te_1_1Operation_1a261c64004b4c8712e97f90cb04e135d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation_1a261c64004b4c8712e97f90cb04e135d1" kindref="member">Operation</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/><ref refid="classtvm_1_1tir_1_1FunctionRef" kindref="compound">FunctionRef</ref>(n)<sp/>{}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>*<sp/>operator-&gt;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>output(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160" refid="classtvm_1_1te_1_1Operation_1adf4101428237ffcca42774fad9ba6ef5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classtvm_1_1te_1_1TensorNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167" refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="169" refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/><ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="171" refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/><ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="173" refid="classtvm_1_1te_1_1TensorNode_1aaf908a208cea7f27477c1c58ba605aa8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_index{0};</highlight></codeline>
<codeline lineno="175" refid="classtvm_1_1te_1_1TensorNode_1a153569448cb1bf9d2924d35639c3b8b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1TensorNode_1a153569448cb1bf9d2924d35639c3b8b8" kindref="member">TensorNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classtvm_1_1te_1_1TensorNode_1a206fe89fe8fa50a48434bdafc44872e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorNode_1a206fe89fe8fa50a48434bdafc44872e9" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;shape&quot;</highlight><highlight class="normal">,<sp/>&amp;shape);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;dtype&quot;</highlight><highlight class="normal">,<sp/>&amp;dtype);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">,<sp/>&amp;op);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;value_index&quot;</highlight><highlight class="normal">,<sp/>&amp;value_index);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/>make(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>dtype,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>op,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_index);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classtvm_1_1te_1_1TensorNode_1a0e33ec8b473ade0dbd3643fe380c36a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tensor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementations<sp/>of<sp/>inline<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classtvm_1_1te_1_1Tensor_1a725bede99576a444220c7c46473edbba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref>*<sp/><ref refid="classtvm_1_1te_1_1Tensor_1a725bede99576a444220c7c46473edbba" kindref="member">Tensor::operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1TensorNode" kindref="compound">TensorNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classtvm_1_1te_1_1Tensor_1abe7e5dcf5965fa514ba2a78b2f71a871" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1abe7e5dcf5965fa514ba2a78b2f71a871" kindref="member">Tensor::ndim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*this)-&gt;shape.size();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classtvm_1_1te_1_1Tensor_1a15b163083896422fbbf6a1ad972b461e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1a15b163083896422fbbf6a1ad972b461e" kindref="member">Tensor::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>==<sp/>other.get())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>other.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*this)-&gt;op.defined()<sp/>||<sp/>other-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref>.defined())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*this)-&gt;op<sp/>==<sp/>other-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a64faab73896ac7e9dd8dc43110920c7c" kindref="member">op</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)-&gt;value_index<sp/>==<sp/>other-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1aaf908a208cea7f27477c1c58ba605aa8" kindref="member">value_index</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classtvm_1_1te_1_1Tensor_1aa9247465fac8685c9b816359c144a32d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor_1aa9247465fac8685c9b816359c144a32d" kindref="member">Tensor::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>macro<sp/>to<sp/>turn<sp/>every<sp/>operation<sp/>of<sp/>slice<sp/>to<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="tensor_8h_1a2a32e5f31a6c0d80884b4aa9822dbbac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_OVERLOAD_SLICE_UNARY_OP(Op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>operator<sp/>Op<sp/>(const<sp/>Tensor::Slice&amp;<sp/>a)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Op<sp/>a.operator<sp/>PrimExpr()<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_OVERLOAD_SLICE_BINARY_OP(Op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>operator<sp/>Op<sp/>(const<sp/>Tensor::Slice&amp;<sp/>a,<sp/>const<sp/>T&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>a.operator<sp/>PrimExpr()<sp/>Op<sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>operator<sp/>Op<sp/>(const<sp/>T&amp;<sp/>a,<sp/>const<sp/>Tensor::Slice&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>a<sp/>Op<sp/>b.operator<sp/>PrimExpr();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/>inline<sp/>PrimExpr<sp/>operator<sp/>Op<sp/>(const<sp/>Tensor::Slice&amp;<sp/>a,<sp/>const<sp/>Tensor::Slice&amp;<sp/>b)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>a.operator<sp/>PrimExpr()<sp/>Op<sp/>b.operator<sp/>PrimExpr();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="namespacetvm_1_1te_1a27eae569b04a2d43a513b654b6d2b98c" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1a2a32e5f31a6c0d80884b4aa9822dbbac" kindref="member">DEFINE_OVERLOAD_SLICE_UNARY_OP</ref>(!);</highlight></codeline>
<codeline lineno="237" refid="namespacetvm_1_1te_1a7cbaaf91ad0e43d83d88a522fcb4214b" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1a2a32e5f31a6c0d80884b4aa9822dbbac" kindref="member">DEFINE_OVERLOAD_SLICE_UNARY_OP</ref>(-);</highlight></codeline>
<codeline lineno="238" refid="namespacetvm_1_1te_1ab5a98e93df74228039fff60553720999" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(+);</highlight></codeline>
<codeline lineno="239" refid="namespacetvm_1_1te_1a0e218dec6bd51cebdbb05fab7d3f07d4" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(-);</highlight></codeline>
<codeline lineno="240" refid="namespacetvm_1_1te_1a3b9149e3bfe9aa3db7112eb94b87a953" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(*);</highlight></codeline>
<codeline lineno="241" refid="namespacetvm_1_1te_1a643184f062c87081a55f9e4ba0e6d0d6" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(==);</highlight></codeline>
<codeline lineno="242" refid="namespacetvm_1_1te_1ae7fe819e0a6e9615e65cabfe5058b498" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&lt;=);</highlight></codeline>
<codeline lineno="243" refid="namespacetvm_1_1te_1ac3fd738e5127c9070b347732f40c88b9" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&gt;=);</highlight></codeline>
<codeline lineno="244" refid="namespacetvm_1_1te_1a2ec6eaac719b6db0b90cb3bc2111c627" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(!=);</highlight></codeline>
<codeline lineno="245" refid="namespacetvm_1_1te_1a5e13828dac02bc1cb4e63e08a9b2eeba" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&amp;&amp;);</highlight></codeline>
<codeline lineno="246" refid="namespacetvm_1_1te_1a1619810ecdc1c9b051522a4313a2c24e" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(||);</highlight></codeline>
<codeline lineno="247" refid="namespacetvm_1_1te_1a9d3d9a057d5f1a36277ac4005f38bafa" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&gt;&gt;);</highlight></codeline>
<codeline lineno="248" refid="namespacetvm_1_1te_1a6bb44656b78b7d6a02ede706ed0a85ec" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&lt;&lt;);</highlight></codeline>
<codeline lineno="249" refid="namespacetvm_1_1te_1af05f53104e6686e271783712280e4005" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&gt;);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="namespacetvm_1_1te_1a7585d3a07b7a501536fe8337464d243e" refkind="member"><highlight class="normal"><ref refid="tensor_8h_1ae0fd4dc106013194f57e4db8454083e7" kindref="member">DEFINE_OVERLOAD_SLICE_BINARY_OP</ref>(&lt;);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hash&lt;::<ref refid="classtvm_1_1te_1_1Operation" kindref="compound">tvm::te::Operation</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::tvm::ObjectHash<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hash&lt;::<ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>std::size_t<sp/>operator()(const<sp/>::tvm::te::Tensor&amp;<sp/>k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>::tvm::ObjectHash<sp/>hasher;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k.defined()<sp/>&amp;&amp;<sp/>k-&gt;op.defined())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasher(k-&gt;op);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasher(k);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_TE_TENSOR_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/te/tensor.h"/>
  </compounddef>
</doxygen>
