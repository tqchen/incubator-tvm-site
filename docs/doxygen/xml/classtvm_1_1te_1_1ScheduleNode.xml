<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1te_1_1ScheduleNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::te::ScheduleNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Object</basecompoundref>
    <includes refid="schedule_8h" local="no">schedule.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1a27b0f687f7b20fcc6416a49e041712d8" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref> &gt;</type>
        <definition>Array&lt;Operation&gt; tvm::te::ScheduleNode::outputs</definition>
        <argsstring></argsstring>
        <name>outputs</name>
        <briefdescription>
<para>The output operations in original data flow graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="526" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1ab5649969db603d6b7b4d155c0d09cdd5" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref> &gt;</type>
        <definition>Array&lt;Stage&gt; tvm::te::ScheduleNode::stages</definition>
        <argsstring></argsstring>
        <name>stages</name>
        <briefdescription>
<para>list of all stages for ops. The stages are sorted in dependency order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="531" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1ab2020fcfbb6fd3c216bb09455697452f" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref> &gt;</type>
        <definition>Array&lt;Stage&gt; tvm::te::ScheduleNode::groups</definition>
        <argsstring></argsstring>
        <name>groups</name>
        <briefdescription>
<para>List of all stage groups. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="535" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1a612223aec2751cbd035a18c9e5453085" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>&lt; <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>, <ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref> &gt;</type>
        <definition>Map&lt;Operation, Stage&gt; tvm::te::ScheduleNode::stage_map</definition>
        <argsstring></argsstring>
        <name>stage_map</name>
        <briefdescription>
<para>map of original operation to the stages </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="537" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1adbc8bfb6812add2173dcc7a6adb85d5c" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; const Object *, <ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref> &gt;</type>
        <definition>std::unordered_map&lt;const Object*, Stage&gt; tvm::te::ScheduleNode::op2stage_cache_</definition>
        <argsstring></argsstring>
        <name>op2stage_cache_</name>
        <briefdescription>
<para>Internal stage map to map internal ops to stages. This is created on demand and can be invalidated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="542" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1ScheduleNode_1a92364be62c19b302a10e74147b4f5dc1" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::te::ScheduleNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;Schedule&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="579" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a77fbc73cef9265d8ae817903564a6e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::te::ScheduleNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="544" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="544" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a2c2472f9cbb1d42bec661149fe801179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::te::ScheduleNode::InitCache</definition>
        <argsstring>()</argsstring>
        <name>InitCache</name>
        <briefdescription>
<para>Initialize temp cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a2b6a92ec4b1c295604b55ff8e8c365e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::te::ScheduleNode::InvalidateCache</definition>
        <argsstring>()</argsstring>
        <name>InvalidateCache</name>
        <briefdescription>
<para>Invalidate temp cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a54bbdb82a87a597007f82751ffdf11c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::te::ScheduleNode::Contain</definition>
        <argsstring>(const Operation &amp;op) const </argsstring>
        <name>Contain</name>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Check if the schedule contains an <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The candidate <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the schedule has the <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>. Otherwise, false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a2b30ce9ba2e0d6a174825bbfa8fc7e4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::te::ScheduleNode::Contain</definition>
        <argsstring>(const Tensor &amp;tensor) const </argsstring>
        <name>Contain</name>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
<para>Check if the schedule contains a <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The candidate tensor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the schedule has the tensor. Otherwise, false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="568" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="568" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a6ded7c6c5dfc7b8525c8048fdd9475ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::te::ScheduleNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(ScheduleNode, Object)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1te_1_1ScheduleNode" kindref="compound">ScheduleNode</ref></type>
        </param>
        <param>
          <type>Object</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="580" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1te_1_1ScheduleNode_1a5cc8e941bb4b977e6bd909c501025688" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>static Schedule tvm::te::ScheduleNode::make</definition>
        <argsstring>(Array&lt; Operation &gt; ops)</argsstring>
        <name>make</name>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref> &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Create a schedule for array of ops(and their dependencies). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>The ops to be scheduled. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sch The created <ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/schedule.h" line="577" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>node container for schedule </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6706">
        <label>Object</label>
      </node>
      <node id="6705">
        <label>tvm::te::ScheduleNode</label>
        <link refid="classtvm_1_1te_1_1ScheduleNode"/>
        <childnode refid="6706" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6710">
        <label>ObjectRef</label>
      </node>
      <node id="6712">
        <label>tvm::Array&lt; tvm::te::Operation &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="6710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6711">
        <label>tvm::Map&lt; tvm::te::Operation, tvm::te::Stage &gt;</label>
        <link refid="classtvm_1_1Map"/>
        <childnode refid="6710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6708">
        <label>Object</label>
      </node>
      <node id="6707">
        <label>tvm::te::ScheduleNode</label>
        <link refid="classtvm_1_1te_1_1ScheduleNode"/>
        <childnode refid="6708" relation="public-inheritance">
        </childnode>
        <childnode refid="6709" relation="usage">
          <edgelabel>+groups</edgelabel>
          <edgelabel>+stages</edgelabel>
        </childnode>
        <childnode refid="6711" relation="usage">
          <edgelabel>+stage_map</edgelabel>
        </childnode>
        <childnode refid="6712" relation="usage">
          <edgelabel>+outputs</edgelabel>
        </childnode>
      </node>
      <node id="6709">
        <label>tvm::Array&lt; tvm::te::Stage &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="6710" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/te/schedule.h" line="523" column="1" bodyfile="include/tvm/te/schedule.h" bodystart="523" bodyend="581"/>
    <listofallmembers>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a92364be62c19b302a10e74147b4f5dc1" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a54bbdb82a87a597007f82751ffdf11c2" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>Contain</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a2b30ce9ba2e0d6a174825bbfa8fc7e4d" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>Contain</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1ab2020fcfbb6fd3c216bb09455697452f" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>groups</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a2c2472f9cbb1d42bec661149fe801179" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>InitCache</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a2b6a92ec4b1c295604b55ff8e8c365e7" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>InvalidateCache</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a5cc8e941bb4b977e6bd909c501025688" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>make</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1adbc8bfb6812add2173dcc7a6adb85d5c" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>op2stage_cache_</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a27b0f687f7b20fcc6416a49e041712d8" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>outputs</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a612223aec2751cbd035a18c9e5453085" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>stage_map</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1ab5649969db603d6b7b4d155c0d09cdd5" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>stages</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a6ded7c6c5dfc7b8525c8048fdd9475ad" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1te_1_1ScheduleNode_1a77fbc73cef9265d8ae817903564a6e44" prot="public" virt="non-virtual"><scope>tvm::te::ScheduleNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
