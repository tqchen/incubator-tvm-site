<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1transform_1_1Pass" kind="class" language="C++" prot="public">
    <compoundname>tvm::transform::Pass</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <derivedcompoundref refid="classtvm_1_1transform_1_1Sequential" prot="public" virt="non-virtual">tvm::transform::Sequential</derivedcompoundref>
    <includes refid="include_2tvm_2ir_2transform_8h" local="no">transform.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1transform_1_1Pass_1a3894c4af152ad0618323d20d21ef631d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref></type>
        <definition>IRModule tvm::transform::Pass::operator()</definition>
        <argsstring>(const IRModule &amp;mod) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Transform mod using the default <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> in the current scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module that an optimization pass runs on.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed module. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="283" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="283" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1Pass_1aeb29f2d1519ba3611ad8dbeb03b65245" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref></type>
        <definition>IRModule tvm::transform::Pass::operator()</definition>
        <argsstring>(const IRModule &amp;mod, const PassContext &amp;pass_ctx) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> &amp;</type>
          <declname>pass_ctx</declname>
        </param>
        <briefdescription>
<para>Transform mod using a functor under a given pass context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module that an optimization pass runs on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pass_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass context that can provide information for the optimization.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed module. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="296" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1Pass_1a7b4c24b01a5e8b2da636d7267890f906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::transform::Pass::TVM_DEFINE_OBJECT_REF_METHODS</definition>
        <argsstring>(Pass, ObjectRef, PassNode)</argsstring>
        <name>TVM_DEFINE_OBJECT_REF_METHODS</name>
        <param>
          <type><ref refid="classtvm_1_1transform_1_1Pass" kindref="compound">Pass</ref></type>
        </param>
        <param>
          <type>ObjectRef</type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1transform_1_1PassNode" kindref="compound">PassNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="303" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6029">
        <label>ObjectRef</label>
      </node>
      <node id="6030">
        <label>tvm::transform::Sequential</label>
        <link refid="classtvm_1_1transform_1_1Sequential"/>
        <childnode refid="6028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6028">
        <label>tvm::transform::Pass</label>
        <link refid="classtvm_1_1transform_1_1Pass"/>
        <childnode refid="6029" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6032">
        <label>ObjectRef</label>
      </node>
      <node id="6031">
        <label>tvm::transform::Pass</label>
        <link refid="classtvm_1_1transform_1_1Pass"/>
        <childnode refid="6032" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/transform.h" line="274" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="274" bodyend="304"/>
    <listofallmembers>
      <member refid="classtvm_1_1transform_1_1Pass_1a3894c4af152ad0618323d20d21ef631d" prot="public" virt="non-virtual"><scope>tvm::transform::Pass</scope><name>operator()</name></member>
      <member refid="classtvm_1_1transform_1_1Pass_1aeb29f2d1519ba3611ad8dbeb03b65245" prot="public" virt="non-virtual"><scope>tvm::transform::Pass</scope><name>operator()</name></member>
      <member refid="classtvm_1_1transform_1_1Pass_1a7b4c24b01a5e8b2da636d7267890f906" prot="public" virt="non-virtual"><scope>tvm::transform::Pass</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
