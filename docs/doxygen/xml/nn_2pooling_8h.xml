<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="nn_2pooling_8h" kind="file" language="C++">
    <compoundname>pooling.h</compoundname>
    <includes refid="pad__utils_8h" local="no">topi/detail/pad_utils.h</includes>
    <includes refid="topi_2include_2topi_2nn_8h" local="no">topi/nn.h</includes>
    <includes refid="reduction_8h" local="no">topi/reduction.h</includes>
    <includes refid="tags_8h" local="no">topi/tags.h</includes>
    <includes refid="ir__pass_8h" local="no">tvm/tir/ir_pass.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="17337">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
      </node>
      <node id="17325">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17301">
        <label>atomic</label>
      </node>
      <node id="17339">
        <label>tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17335">
        <label>tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17336" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17314">
        <label>functional</label>
      </node>
      <node id="17358">
        <label>topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="17347" relation="include">
        </childnode>
      </node>
      <node id="17316">
        <label>limits</label>
      </node>
      <node id="17342">
        <label>tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17343" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17306">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="17307" relation="include">
        </childnode>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17305" relation="include">
        </childnode>
      </node>
      <node id="17305">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="17297" relation="include">
        </childnode>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17306" relation="include">
        </childnode>
        <childnode refid="17310" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17314" relation="include">
        </childnode>
        <childnode refid="17315" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17359">
        <label>iterator</label>
      </node>
      <node id="17318">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="17297" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17341">
        <label>tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="17342" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17339" relation="include">
        </childnode>
        <childnode refid="17329" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17338">
        <label>tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="17335" relation="include">
        </childnode>
        <childnode refid="17339" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17296">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="17297" relation="include">
        </childnode>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
      </node>
      <node id="17294">
        <label>stdint.h</label>
      </node>
      <node id="17310">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17311" relation="include">
        </childnode>
        <childnode refid="17301" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17321">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17318" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17314" relation="include">
        </childnode>
      </node>
      <node id="17332">
        <label>topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17333" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
      </node>
      <node id="17348">
        <label>tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="17340" relation="include">
        </childnode>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17337" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17308" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
      </node>
      <node id="17354">
        <label>topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="17355" relation="include">
        </childnode>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
        <childnode refid="17358" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17359" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
        <childnode refid="17346" relation="include">
        </childnode>
      </node>
      <node id="17330">
        <label>topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17333" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17290">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17318" relation="include">
        </childnode>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17323" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17299">
        <label>string</label>
      </node>
      <node id="17344">
        <label>dmlc/common.h</label>
      </node>
      <node id="17322">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="17318" relation="include">
        </childnode>
        <childnode refid="17323" relation="include">
        </childnode>
      </node>
      <node id="17319">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17305" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17320" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17346">
        <label>unordered_set</label>
      </node>
      <node id="17349">
        <label>topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
        <childnode refid="17353" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17354" relation="include">
        </childnode>
        <childnode refid="17357" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17359" relation="include">
        </childnode>
      </node>
      <node id="17347">
        <label>tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="17348" relation="include">
        </childnode>
        <childnode refid="17335" relation="include">
        </childnode>
        <childnode refid="17334" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17339" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
      </node>
      <node id="17295">
        <label>stddef.h</label>
      </node>
      <node id="17343">
        <label>tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="17344" relation="include">
        </childnode>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17305" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17314" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17336">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17324" relation="include">
        </childnode>
        <childnode refid="17337" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17329" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
      </node>
      <node id="17345">
        <label>tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17329" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17328">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="17326" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17329" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
      </node>
      <node id="17324">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17325" relation="include">
        </childnode>
        <childnode refid="17326" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17316" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17351">
        <label>topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17352" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17315">
        <label>tuple</label>
      </node>
      <node id="17297">
        <label>dmlc/logging.h</label>
      </node>
      <node id="17329">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17289">
        <label>vector</label>
      </node>
      <node id="17317">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17318" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17307">
        <label>dmlc/io.h</label>
      </node>
      <node id="17292">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="17293" relation="include">
        </childnode>
        <childnode refid="17294" relation="include">
        </childnode>
        <childnode refid="17295" relation="include">
        </childnode>
      </node>
      <node id="17326">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17291" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17325" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17333">
        <label>tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="17334" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17339" relation="include">
        </childnode>
        <childnode refid="17341" relation="include">
        </childnode>
        <childnode refid="17345" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
        <childnode refid="17346" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17287">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn/pooling.h"/>
        <childnode refid="17288" relation="include">
        </childnode>
        <childnode refid="17330" relation="include">
        </childnode>
        <childnode refid="17349" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17333" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
      </node>
      <node id="17300">
        <label>utility</label>
      </node>
      <node id="17356">
        <label>sstream</label>
      </node>
      <node id="17291">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17304" relation="include">
        </childnode>
        <childnode refid="17322" relation="include">
        </childnode>
        <childnode refid="17319" relation="include">
        </childnode>
        <childnode refid="17317" relation="include">
        </childnode>
        <childnode refid="17321" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17350">
        <label>topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="17351" relation="include">
        </childnode>
        <childnode refid="17332" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
      </node>
      <node id="17312">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="17303">
        <label>cstdlib</label>
      </node>
      <node id="17357">
        <label>topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="17347" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
      </node>
      <node id="17323">
        <label>iostream</label>
      </node>
      <node id="17311">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="17307" relation="include">
        </childnode>
        <childnode refid="17312" relation="include">
        </childnode>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17310" relation="include">
        </childnode>
      </node>
      <node id="17352">
        <label>deque</label>
      </node>
      <node id="17309">
        <label>unordered_map</label>
      </node>
      <node id="17304">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17302" relation="include">
        </childnode>
        <childnode refid="17305" relation="include">
        </childnode>
        <childnode refid="17310" relation="include">
        </childnode>
        <childnode refid="17313" relation="include">
        </childnode>
        <childnode refid="17317" relation="include">
        </childnode>
        <childnode refid="17321" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17288">
        <label>topi/detail/pad_utils.h</label>
        <link refid="pad__utils_8h"/>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
      </node>
      <node id="17302">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="17296" relation="include">
        </childnode>
        <childnode refid="17303" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17313">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="17292" relation="include">
        </childnode>
        <childnode refid="17297" relation="include">
        </childnode>
        <childnode refid="17298" relation="include">
        </childnode>
      </node>
      <node id="17340">
        <label>tvm/support/with.h</label>
        <link refid="with_8h"/>
        <childnode refid="17297" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
      </node>
      <node id="17298">
        <label>type_traits</label>
      </node>
      <node id="17327">
        <label>algorithm</label>
      </node>
      <node id="17331">
        <label>topi/tags.h</label>
        <link refid="tags_8h"/>
        <childnode refid="17299" relation="include">
        </childnode>
      </node>
      <node id="17293">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="17334">
        <label>tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17335" relation="include">
        </childnode>
        <childnode refid="17338" relation="include">
        </childnode>
        <childnode refid="17340" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17309" relation="include">
        </childnode>
      </node>
      <node id="17353">
        <label>topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17333" relation="include">
        </childnode>
        <childnode refid="17331" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17350" relation="include">
        </childnode>
      </node>
      <node id="17308">
        <label>memory</label>
      </node>
      <node id="17320">
        <label>initializer_list</label>
      </node>
      <node id="17355">
        <label>tvm/tir/data_layout.h</label>
        <link refid="data__layout_8h"/>
        <childnode refid="17290" relation="include">
        </childnode>
        <childnode refid="17328" relation="include">
        </childnode>
        <childnode refid="17299" relation="include">
        </childnode>
        <childnode refid="17356" relation="include">
        </childnode>
        <childnode refid="17289" relation="include">
        </childnode>
        <childnode refid="17300" relation="include">
        </childnode>
        <childnode refid="17327" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetopi">topi</innernamespace>
    <innernamespace refid="namespacetopi_1_1nn">topi::nn</innernamespace>
    <briefdescription>
<para>Pooling op constructions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TOPI_NN_POOLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_NN_POOLING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pad__utils_8h" kindref="compound">topi/detail/pad_utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="topi_2include_2topi_2nn_8h" kindref="compound">topi/nn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="reduction_8h" kindref="compound">topi/reduction.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tags_8h" kindref="compound">topi/tags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ir__pass_8h" kindref="compound">tvm/tir/ir_pass.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetopi" kindref="compound">topi</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm_1_1te" kindref="compound">tvm::te</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44" refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" kindref="member">kAvgPool</ref>,</highlight></codeline>
<codeline lineno="45" refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" kindref="member">kMaxPool</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespacetopi_1_1nn_1ad51533b09956d7bc8de2537adf3b6b77" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1ad51533b09956d7bc8de2537adf3b6b77" kindref="member">pool_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height_axis,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width_axis,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>CHECK(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size()<sp/>&gt;=<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>input<sp/>must<sp/>&gt;=<sp/>2-D<sp/>(H,<sp/>W)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>CHECK_EQ(kernel_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>kernel_size<sp/>must<sp/>have<sp/>2<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>CHECK_EQ(stride_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>stride_size<sp/>must<sp/>have<sp/>2<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>CHECK_EQ(padding_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>padding_size<sp/>must<sp/>have<sp/>4<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_height<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>kernel_size[0]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_width<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>kernel_size[1]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stride_height<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>stride_size[0]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stride_width<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>stride_size[1]);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[height_axis];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[width_axis];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_top<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[0]);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_left<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[1]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_bottom<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[2]);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_right<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[3]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ceil_mode)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>padding<sp/>to<sp/>ensure<sp/>we<sp/>do<sp/>ceil<sp/>instead<sp/>of<sp/>floor<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dividing<sp/>by<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_bottom<sp/>+=<sp/>stride_height<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_right<sp/>+=<sp/>stride_width<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_before(std::vector&lt;PrimExpr&gt;(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size(),<sp/>0));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>pad_before.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>pad_top);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>pad_before.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>pad_left);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_after(std::vector&lt;PrimExpr&gt;(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size(),<sp/>0));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>pad_after.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>pad_bottom);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>pad_after.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>pad_right);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_height<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(height<sp/>-<sp/>kernel_height<sp/>+<sp/>pad_top<sp/>+<sp/>pad_bottom,<sp/>stride_height)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_width<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(width<sp/>-<sp/>kernel_width<sp/>+<sp/>pad_left<sp/>+<sp/>pad_right,<sp/>stride_width)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dheight<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>kernel_height));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dwidth<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>kernel_width));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>out_shape<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>out_shape.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>out_height);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>out_shape.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>out_width);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding_h0<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_top);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding_w0<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_left);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding_h1<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_bottom);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding_w1<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_right);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_pad<sp/>=<sp/>((padding_h0<sp/>&amp;&amp;<sp/>*padding_h0)<sp/>||<sp/>(padding_w0<sp/>&amp;&amp;<sp/>*padding_w0))<sp/>||</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((padding_h1<sp/>&amp;&amp;<sp/>*padding_h1)<sp/>||<sp/>(padding_w1<sp/>&amp;&amp;<sp/>*padding_w1));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" kindref="member">kMaxPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>do_pad<sp/>?<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>pad_before,<sp/>pad_after,<sp/><ref refid="namespacetvm_1a9c126a8dde0d4079713969ca574f172e" kindref="member">tvm::min_value</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>),<sp/></highlight><highlight class="stringliteral">&quot;pad_temp&quot;</highlight><highlight class="normal">)<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>output[height_axis]<sp/>*<sp/>stride_height<sp/>+<sp/>dheight);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>output[width_axis]<sp/>*<sp/>stride_width<sp/>+<sp/>dwidth);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">tvm::max</ref>(temp(indices),<sp/>{<sp/>dheight,<sp/>dwidth<sp/>});</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" kindref="member">kAvgPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>do_pad<sp/>?<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(x,<sp/>pad_before,<sp/>pad_after,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;pad_temp&quot;</highlight><highlight class="normal">)<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TVM<sp/>compute<sp/>for<sp/>summing<sp/>the<sp/>pooling<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool_sum<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>output[height_axis]<sp/>*<sp/>stride_height<sp/>+<sp/>dheight);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>output[width_axis]<sp/>*<sp/>stride_width<sp/>+<sp/>dwidth);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(temp(indices),<sp/>{<sp/>dheight,<sp/>dwidth<sp/>});</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_sum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TVM<sp/>compute<sp/>for<sp/>dividing<sp/>the<sp/>reduced<sp/>window<sp/>sum<sp/>by<sp/>kernel<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(pool_sum(indices),<sp/>(kernel_height<sp/>*<sp/>kernel_width));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>h_start<sp/>=<sp/>output[height_axis]<sp/>*<sp/>stride_height<sp/>-<sp/>pad_top;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>w_start<sp/>=<sp/>output[width_axis]<sp/>*<sp/>stride_width<sp/>-<sp/>pad_left;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>h_end<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MinNode::make</ref>(h_start<sp/>+<sp/>kernel_height,<sp/>height);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>w_end<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MinNode::make</ref>(w_start<sp/>+<sp/>kernel_width,<sp/>width);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_start<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(h_start,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(DataType::DataType::Int(32),<sp/>0));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_start<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(w_start,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(DataType::DataType::Int(32),<sp/>0));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>divide_factor<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>((h_end<sp/>-<sp/>h_start)<sp/>*<sp/>(w_end<sp/>-<sp/>w_start),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(DataType::DataType::Int(32),<sp/>1));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(pool_sum(indices),<sp/>divide_factor);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>pool_type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool_type;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="namespacetopi_1_1nn_1af2c25e8b3ab3cac1c2896cb750838337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1af2c25e8b3ab3cac1c2896cb750838337" kindref="member">pool_grad_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>out_grad,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height_axis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width_axis,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>CHECK(out_grad-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size()<sp/>&gt;=<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>grad<sp/>output<sp/>must<sp/>&gt;=<sp/>2-D<sp/>(H,<sp/>W)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>CHECK(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size()<sp/>&gt;=<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>input<sp/>must<sp/>&gt;=<sp/>2-D<sp/>(H,<sp/>W)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>CHECK_EQ(kernel_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>kernel_size<sp/>must<sp/>have<sp/>2<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>CHECK_EQ(stride_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>stride_size<sp/>must<sp/>have<sp/>2<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>CHECK_EQ(padding_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>padding_size<sp/>must<sp/>have<sp/>4<sp/>elements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_height<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>kernel_size[0]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_width<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>kernel_size[1]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stride_height<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>stride_size[0]);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stride_width<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>stride_size[1]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[height_axis];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[width_axis];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_top<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[0]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_left<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[1]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_bottom<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[2]);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_right<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(DataType::DataType::Int(32),<sp/>padding_size[3]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ceil_mode)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>padding<sp/>to<sp/>ensure<sp/>we<sp/>do<sp/>ceil<sp/>instead<sp/>of<sp/>floor<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dividing<sp/>by<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_bottom<sp/>+=<sp/>stride_height<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_right<sp/>+=<sp/>stride_width<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_before(std::vector&lt;PrimExpr&gt;(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size(),<sp/>0));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>pad_before.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>pad_top);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>pad_before.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>pad_left);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_after(std::vector&lt;PrimExpr&gt;(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size(),<sp/>0));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>pad_after.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>pad_bottom);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>pad_after.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>pad_right);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_height<sp/>=</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>((height<sp/>-<sp/>kernel_height<sp/>+<sp/>pad_top<sp/>+<sp/>pad_bottom)<sp/>/<sp/>stride_height<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_width<sp/>=</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>((width<sp/>-<sp/>kernel_width<sp/>+<sp/>pad_left<sp/>+<sp/>pad_right)<sp/>/<sp/>stride_width<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dheight<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>kernel_height));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dwidth<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>kernel_width));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>out_shape<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>out_shape.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(height_axis,<sp/>out_height);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>out_shape.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(width_axis,<sp/>out_width);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>padding_h0<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_top);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>padding_w0<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_left);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>padding_h1<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_bottom);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>padding_w1<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_right);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_pad<sp/>=<sp/>((padding_h0<sp/>&amp;&amp;<sp/>*padding_h0)<sp/>||<sp/>(padding_w0<sp/>&amp;&amp;<sp/>*padding_w0))<sp/>||</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((padding_h1<sp/>&amp;&amp;<sp/>*padding_h1)<sp/>||<sp/>(padding_w1<sp/>&amp;&amp;<sp/>*padding_w1));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" kindref="member">kMaxPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>ravel_shape{x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.begin(),<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.end()};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ravel_shape.Set(height_axis,<sp/>ravel_shape[height_axis]<sp/>+<sp/>pad_top<sp/>+<sp/>pad_bottom);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ravel_shape.Set(width_axis,<sp/>ravel_shape[width_axis]<sp/>+<sp/>pad_left<sp/>+<sp/>pad_right);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windowh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>(kernel_height<sp/>+<sp/>stride_height<sp/>-<sp/>1)<sp/>/<sp/>stride_height));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windoww<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>(kernel_width<sp/>+<sp/>stride_width<sp/>-<sp/>1)<sp/>/<sp/>stride_width));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1a94f412c82e4225050328fae33a3342f2" kindref="member">argmax</ref><sp/>=<sp/><ref refid="namespacetopi_1af82f23bc79d3ecca9919b45568192d07" kindref="member">MakeArgmaxReducer</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad_x<sp/>=<sp/>do_pad<sp/>?<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>pad_before,<sp/>pad_after,<sp/><ref refid="namespacetvm_1a9c126a8dde0d4079713969ca574f172e" kindref="member">tvm::min_value</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>),<sp/></highlight><highlight class="stringliteral">&quot;pad_temp&quot;</highlight><highlight class="normal">)<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp_argmax<sp/>=</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_shape,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>inds)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>window_inds{inds.<ref refid="classtvm_1_1Array_1a5db0d3faad39ca865162e50d555a25fa" kindref="member">begin</ref>(),<sp/>inds.<ref refid="classtvm_1_1Array_1a6f05e6a14eca3ea865da0f293b4a5325" kindref="member">end</ref>()};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_inds.Set(height_axis,<sp/>inds[height_axis]<sp/>*<sp/>stride_height<sp/>+<sp/>dheight);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_inds.Set(width_axis,<sp/>inds[width_axis]<sp/>*<sp/>stride_width<sp/>+<sp/>dwidth);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>detail::RavelIndex(window_inds,<sp/>ravel_shape);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1a94f412c82e4225050328fae33a3342f2" kindref="member">argmax</ref>({idx,<sp/>pad_x(window_inds)},<sp/>{dheight,<sp/>dwidth},<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;maxpool_grad_argmax&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetopi_1aaf18db0af5abc7dd13818115bac402bc" kindref="member">kCommReduceIdx</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp_inds<sp/>=<sp/>mp_argmax[0];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>inds)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;PrimExpr&gt;<sp/>pad_inds<sp/>{inds.begin(),<sp/>inds.end()};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_inds.Set(height_axis,<sp/>pad_inds[height_axis]<sp/>+<sp/>pad_top);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_inds.Set(width_axis,<sp/>pad_inds[width_axis]<sp/>+<sp/>pad_left);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>detail::RavelIndex(pad_inds,<sp/>ravel_shape);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>out_idx<sp/>{inds.<ref refid="classtvm_1_1Array_1a5db0d3faad39ca865162e50d555a25fa" kindref="member">begin</ref>(),<sp/>inds.<ref refid="classtvm_1_1Array_1a6f05e6a14eca3ea865da0f293b4a5325" kindref="member">end</ref>()};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx.Set(height_axis,<sp/>(inds[height_axis]<sp/>+<sp/>pad_top)<sp/>/<sp/>stride_height<sp/>-<sp/>windowh);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx.Set(width_axis,<sp/>(inds[width_axis]<sp/>+<sp/>pad_left)<sp/>/<sp/>stride_width<sp/>-<sp/>windoww);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>out_idx_lower_h<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1SelectNode_1ae0809a88c56d20faceba05184b6e793b" kindref="member">tir::SelectNode::make</ref>(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_inds[height_axis]<sp/>&lt;<sp/>kernel_height,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(DataType::DataType::Int(32),<sp/>0),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pad_inds[height_axis]<sp/>-<sp/>kernel_height)<sp/>/<sp/>stride_height<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>out_idx_lower_w<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1SelectNode_1ae0809a88c56d20faceba05184b6e793b" kindref="member">tir::SelectNode::make</ref>(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_inds[width_axis]<sp/>&lt;<sp/>kernel_width,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(DataType::DataType::Int(32),<sp/>0),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pad_inds[width_axis]<sp/>-<sp/>kernel_width)<sp/>/<sp/>stride_width<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(<ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tir::AndNode::make</ref>(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tir::AndNode::make</ref>(out_idx[height_axis]<sp/>&gt;=<sp/>out_idx_lower_h,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx[width_axis]<sp/>&gt;=<sp/>out_idx_lower_w),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp_inds(out_idx)<sp/>==<sp/>idx),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_grad(out_idx),<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>,<sp/>0)),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{windowh,<sp/>windoww});</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;T_pool_grad&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_grad_max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" kindref="member">kAvgPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windowh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>(kernel_height<sp/>+<sp/>stride_height<sp/>-<sp/>1)<sp/>/<sp/>stride_height));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windoww<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>(kernel_width<sp/>+<sp/>stride_width<sp/>-<sp/>1)<sp/>/<sp/>stride_width));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x-&gt;shape,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>inds)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimExpr<sp/>pad_h_idx<sp/>=<sp/>inds[height_axis]<sp/>+<sp/>pad_top;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrimExpr<sp/>pad_w_idx<sp/>=<sp/>inds[width_axis]<sp/>+<sp/>pad_left;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>indices<sp/>whose<sp/>pooling<sp/>windows<sp/>cover<sp/>current<sp/>input<sp/>element<sp/>(can<sp/>be<sp/>out-of-bound)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;PrimExpr&gt;<sp/>out_idx{inds.begin(),<sp/>inds.end()};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx.Set(height_axis,<sp/>(pad_h_idx<sp/>/<sp/>stride_height<sp/>-<sp/>windowh));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx.Set(width_axis,<sp/>(pad_w_idx<sp/>/<sp/>stride_width<sp/>-<sp/>windoww));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>out_idx_lower_h<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1SelectNode_1ae0809a88c56d20faceba05184b6e793b" kindref="member">tir::SelectNode::make</ref>(</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_h_idx<sp/>&lt;<sp/>kernel_height,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>0),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pad_h_idx<sp/>-<sp/>kernel_height)<sp/>/<sp/>stride_height<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>out_idx_lower_w<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1SelectNode_1ae0809a88c56d20faceba05184b6e793b" kindref="member">tir::SelectNode::make</ref>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_w_idx<sp/>&lt;<sp/>kernel_width,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>0),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pad_w_idx<sp/>-<sp/>kernel_width)<sp/>/<sp/>stride_width<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>divide_factor;<sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>pooled<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divide_factor<sp/>=<sp/>kernel_height<sp/>*<sp/>kernel_width;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>h_start<sp/>=<sp/>out_idx[height_axis]<sp/>*<sp/>stride_height<sp/>-<sp/>pad_top;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>w_start<sp/>=<sp/>out_idx[width_axis]<sp/>*<sp/>stride_width<sp/>-<sp/>pad_left;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>h_end<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MinNode::make</ref>(h_start<sp/>+<sp/>kernel_height,<sp/>height);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>w_end<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MinNode::make</ref>(w_start<sp/>+<sp/>kernel_width,<sp/>width);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_start<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(h_start,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>0));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_start<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(w_start,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>0));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divide_factor<sp/>=</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>((h_end<sp/>-<sp/>h_start)<sp/>*<sp/>(w_end<sp/>-<sp/>w_start),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>1));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(<ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tir::AndNode::make</ref>(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tir::AndNode::make</ref>(out_idx[height_axis]<sp/>&gt;=<sp/>out_idx_lower_h,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx[height_axis]<sp/>&lt;<sp/>out_height),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tir::AndNode::make</ref>(out_idx[width_axis]<sp/>&gt;=<sp/>out_idx_lower_w,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_idx[width_axis]<sp/>&lt;<sp/>out_width)),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_grad(out_idx)<sp/>/<sp/>divide_factor,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(out_grad-&gt;dtype,<sp/>0)),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{windowh,<sp/>windoww});</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;T_pool_grad&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_grad_avg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>pool_type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool_type;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" kindref="member">find_depth_height_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>depth_axis,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_axis,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width_axis)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>*depth_axis<sp/>=<sp/>-1,<sp/>*height_axis<sp/>=<sp/>-1,<sp/>*width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>layout.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((layout[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>layout[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(layout[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>layout[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*depth_axis<sp/>!=<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*depth_axis<sp/>=<sp/>curr_idx;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*height_axis<sp/>!=<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height_axis<sp/>=<sp/>curr_idx;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*width_axis<sp/>!=<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width_axis<sp/>=<sp/>curr_idx;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>||<sp/>layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/>||<sp/>layout[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>support<sp/>split<sp/>on<sp/>height<sp/>or<sp/>width,<sp/>e.g.,<sp/>NCHW16w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++curr_idx;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*depth_axis<sp/>==<sp/>-1<sp/>||<sp/>*height_axis<sp/>==<sp/>-1<sp/>||<sp/>*width_axis<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="namespacetopi_1_1nn_1a428e0ba6800ef89b8c1f97f0245e244d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1a428e0ba6800ef89b8c1f97f0245e244d" kindref="member">find_height_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_axis,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width_axis)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>CHECK_EQ(<ref refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" kindref="member">find_depth_height_width</ref>(layout,<sp/>&amp;dummy,<sp/>height_axis,<sp/>width_axis),<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*height_axis<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>*width_axis<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="namespacetopi_1_1nn_1ab1f1f9f86723b30bb8997615e1d63ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ab1f1f9f86723b30bb8997615e1d63ca8" kindref="member">find_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width_axis)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>CHECK_EQ(<ref refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" kindref="member">find_depth_height_width</ref>(layout,<sp/>&amp;dummy,<sp/>&amp;dummy,<sp/>width_axis),<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*width_axis<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1ac1708b3aa1a677f56a4063a568945d98" kindref="member">pool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCHW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_axis<sp/>=<sp/>-1,<sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1a428e0ba6800ef89b8c1f97f0245e244d" kindref="member">find_height_width</ref>(layout,<sp/>&amp;height_axis,<sp/>&amp;width_axis))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ad51533b09956d7bc8de2537adf3b6b77" kindref="member">pool_impl</ref>(x,<sp/>kernel_size,<sp/>stride_size,<sp/>padding_size,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool_type,<sp/>ceil_mode,<sp/>height_axis,<sp/>width_axis,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_include_pad);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="namespacetopi_1_1nn_1a4f915567f195ade4a17743a5e7654e88" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1a4f915567f195ade4a17743a5e7654e88" kindref="member">pool_grad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>out_grad,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCHW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_axis<sp/>=<sp/>-1,<sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1a428e0ba6800ef89b8c1f97f0245e244d" kindref="member">find_height_width</ref>(layout,<sp/>&amp;height_axis,<sp/>&amp;width_axis))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1af2c25e8b3ab3cac1c2896cb750838337" kindref="member">pool_grad_impl</ref>(out_grad,<sp/>x,<sp/>kernel_size,<sp/>stride_size,<sp/>padding_size,<sp/>pool_type,<sp/>ceil_mode,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_axis,<sp/>width_axis,<sp/>count_include_pad);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="namespacetopi_1_1nn_1a91b52c68356d23123474ebf10f9b0140" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetopi_1_1nn_1a91b52c68356d23123474ebf10f9b0140" kindref="member">start_index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/>out_index,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>odim,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>idim)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(out_index<sp/>*<sp/>idim,<sp/>odim);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="namespacetopi_1_1nn_1aadbaaec56f0b485262bf5199bbe3dcb3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/><ref refid="namespacetopi_1_1nn_1aadbaaec56f0b485262bf5199bbe3dcb3" kindref="member">end_index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/>out_index,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>odim,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&amp;<sp/>idim)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>tmp<sp/>=<sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>((out_index<sp/>+<sp/>1)<sp/>*<sp/>idim,<sp/>odim);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1SelectNode_1ae0809a88c56d20faceba05184b6e793b" kindref="member">tvm::tir::SelectNode::make</ref>(<ref refid="namespacetvm_1a857781b7243b2f90018f7fe6baf9c30e" kindref="member">indexmod</ref>((out_index<sp/>+<sp/>1)<sp/>*<sp/>idim,<sp/>odim)<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp,<sp/>tmp<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="namespacetopi_1_1nn_1ad4f34df5cfa8dc75843116bc39f06066" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1ad4f34df5cfa8dc75843116bc39f06066" kindref="member">adaptive_pool_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>output_size,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>axes)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_dim<sp/>=<sp/>output_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>CHECK_EQ(axes.size(),<sp/>n_dim)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>axes<sp/>not<sp/>equal<sp/>to<sp/>the<sp/>in/out<sp/>dimension&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>out_shape<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>in_size,<sp/>out_size;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_dim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>in_size.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[axes[i]]);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>out_size.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>output_size[i]));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>out_shape.Set(axes[i],<sp/>out_size[i]);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get_iter_vars<sp/>=<sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reduce_indices)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();<sp/>++i)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(output[i]);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref><sp/>reduce_axes;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_dim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_start<sp/>=<sp/><ref refid="namespacetopi_1_1nn_1a91b52c68356d23123474ebf10f9b0140" kindref="member">start_index</ref>(output[axes[i]],<sp/>out_size[i],<sp/>in_size[i]);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_end<sp/>=<sp/><ref refid="namespacetopi_1_1nn_1aadbaaec56f0b485262bf5199bbe3dcb3" kindref="member">end_index</ref>(output[axes[i]],<sp/>out_size[i],<sp/>in_size[i]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rv_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rv&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rv_axis<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>i_end<sp/>-<sp/>i_start),<sp/>rv_name);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reduce_axes.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(rv_axis);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reduce_indices)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(axes[i],<sp/>i_start<sp/>+<sp/>rv_axis);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(indices,<sp/>reduce_axes);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" kindref="member">kMaxPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref><sp/>reduce_axes;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(indices,<sp/>reduce_axes)<sp/>=<sp/>get_iter_vars(output,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">tvm::max</ref>(x(indices),<sp/>reduce_axes);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adaptive_pool_max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" kindref="member">kAvgPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool_sum<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref><sp/>reduce_axes;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(indices,<sp/>reduce_axes)<sp/>=<sp/>get_iter_vars(output,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(x(indices),<sp/>reduce_axes);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adaptive_pool_sum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;tir::IterVar&gt;</ref><sp/>reduce_axes;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(indices,<sp/>reduce_axes)<sp/>=<sp/>get_iter_vars(output,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>divide_factor<sp/>=<sp/><ref refid="namespacetvm_1aa058caeda9deceda3d6ffeda347be442" kindref="member">tvm::cast</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_dim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divide_factor<sp/>*=<sp/><ref refid="namespacetvm_1aa058caeda9deceda3d6ffeda347be442" kindref="member">tvm::cast</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>,<sp/>reduce_axes[i]-&gt;dom-&gt;extent);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(pool_sum(indices),<sp/>divide_factor);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>pool_type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool_type;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="namespacetopi_1_1nn_1af721a019c13f1f99dc43d5d49cc71388" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1af721a019c13f1f99dc43d5d49cc71388" kindref="member">adaptive_pool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>output_size,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCHW&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_axis<sp/>=<sp/>-1,<sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1a428e0ba6800ef89b8c1f97f0245e244d" kindref="member">find_height_width</ref>(layout,<sp/>&amp;height_axis,<sp/>&amp;width_axis))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ad4f34df5cfa8dc75843116bc39f06066" kindref="member">adaptive_pool_impl</ref>(x,<sp/>output_size,<sp/>pool_type,<sp/>{height_axis,<sp/>width_axis});</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="namespacetopi_1_1nn_1ad48c57c26ce6bb02576555a4cb11bcd3" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1ad48c57c26ce6bb02576555a4cb11bcd3" kindref="member">adaptive_pool3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>output_size,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCDHW&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth_axis<sp/>=<sp/>-1,<sp/>height_axis<sp/>=<sp/>-1,<sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" kindref="member">find_depth_height_width</ref>(layout,<sp/>&amp;depth_axis,<sp/>&amp;height_axis,<sp/>&amp;width_axis))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1ad4f34df5cfa8dc75843116bc39f06066" kindref="member">adaptive_pool_impl</ref>(x,<sp/>output_size,<sp/>pool_type,<sp/>{depth_axis,<sp/>height_axis,<sp/>width_axis});</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="namespacetopi_1_1nn_1ac5fe64687aa8bffee420bf282f2b8f8c" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1ac5fe64687aa8bffee420bf282f2b8f8c" kindref="member">global_pool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCHW&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1af721a019c13f1f99dc43d5d49cc71388" kindref="member">adaptive_pool</ref>(x,<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>{1,<sp/>1},<sp/>pool_type,<sp/>layout);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="namespacetopi_1_1nn_1a0b2681e29b1f733835ffe2e6b3b69c13" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1a0b2681e29b1f733835ffe2e6b3b69c13" kindref="member">pool_impl_nd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>axis,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_size<sp/>=<sp/>kernel_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_size<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>CHECK_EQ(stride_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>k_size)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>stride_size<sp/>must<sp/>have<sp/>same<sp/>elements<sp/>as<sp/>kernel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>CHECK_EQ(padding_size.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>k_size<sp/>*<sp/>2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pooling<sp/>padding_size<sp/>must<sp/>has<sp/>double<sp/>elements<sp/>of&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>kernel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>CHECK_EQ(axis.size(),<sp/>k_size)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;axis<sp/>must<sp/>have<sp/>same<sp/>elements<sp/>as<sp/>kernel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>daxis;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>kernel(k_size);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>stride(k_size);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>pad_head(k_size);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>pad_tail(k_size);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_before(std::vector&lt;PrimExpr&gt;(x_size,<sp/>0));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>pad_after(std::vector&lt;PrimExpr&gt;(x_size,<sp/>0));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>out_shape<sp/>=<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_pad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>axis[i];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel[i]<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>kernel_size[i]);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>stride[i]<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>stride_size[i]);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_head[i]<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>padding_size[i]);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_tail[i]<sp/>=<sp/><ref refid="namespacetopi_1acfc3df84ca997ccac0f57d50e96c1c06" kindref="member">cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>padding_size[i<sp/>+<sp/>k_size]);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding0<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_head[i]);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>*padding1<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1acbe8f225faaf34c540194921a7ee6a66" kindref="member">as_const_int</ref>(pad_tail[i]);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>do_pad<sp/>=<sp/>(do_pad)<sp/>?<sp/>do_pad<sp/>:<sp/>((padding0<sp/>&amp;&amp;<sp/>*padding0)<sp/>||<sp/>(padding1<sp/>&amp;&amp;<sp/>*padding1));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ceil_mode)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>padding<sp/>to<sp/>ensure<sp/>we<sp/>do<sp/>ceil<sp/>instead<sp/>of<sp/>floor<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dividing<sp/>by<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_tail[i]<sp/>+=<sp/>stride[i]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>daxis.push_back(<ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref>(0,<sp/>kernel[i])));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_before.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(ii,<sp/>pad_head[i]);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_after.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(ii,<sp/>pad_tail[i]);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_dim<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>(</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[ii]<sp/>-<sp/>kernel[i]<sp/>+<sp/>pad_head[i]<sp/>+<sp/>pad_tail[i],<sp/>stride[i])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>out_shape.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(ii,<sp/>out_dim);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95ba3a406a1361a3c7ca311d3c514842c2f4" kindref="member">kMaxPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>do_pad<sp/>?<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>pad_before,<sp/>pad_after,<sp/><ref refid="namespacetvm_1a9c126a8dde0d4079713969ca574f172e" kindref="member">tvm::min_value</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>),<sp/></highlight><highlight class="stringliteral">&quot;pad_temp&quot;</highlight><highlight class="normal">)<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>axis[i];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(ii,<sp/>output[ii]<sp/>*<sp/>stride[i]<sp/>+<sp/>daxis[i]);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">tvm::max</ref>(temp(indices),<sp/>daxis);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_type<sp/>==<sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95babbfb6c4315c8b57e558600af1515d3d8" kindref="member">kAvgPool</ref>)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>do_pad<sp/>?<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(x,<sp/>pad_before,<sp/>pad_after,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;pad_temp&quot;</highlight><highlight class="normal">)<sp/>:<sp/>x;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TVM<sp/>compute<sp/>for<sp/>summing<sp/>the<sp/>pooling<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool_sum<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>axis[i];</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(ii,<sp/>output[ii]<sp/>*<sp/>stride[i]<sp/>+<sp/>daxis[i]);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(temp(indices),<sp/>daxis);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pool_sum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TVM<sp/>compute<sp/>for<sp/>dividing<sp/>the<sp/>reduced<sp/>window<sp/>sum<sp/>by<sp/>kernel<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(out_shape,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>&amp;<sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref><sp/>:<sp/>output)<sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_include_pad)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_size<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>1);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_size<sp/>*=<sp/>kernel[i];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(pool_sum(indices),<sp/>kernel_size);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>start(k_size);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PrimExpr&gt;<sp/>end(k_size);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kernel_size<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>1);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>axis[i];</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start[i]<sp/>=<sp/>output[ii]<sp/>*<sp/>stride[i]<sp/>-<sp/>pad_head[i];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end[i]<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MinNode::make</ref>(start[i]<sp/>+<sp/>kernel[i],<sp/>x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[ii]);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start[i]<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(start[i],<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>0));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_size<sp/>*=<sp/>(end[i]<sp/>-<sp/>start[i]);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>divide_factor<sp/>=<sp/><ref refid="classtvm_1_1tir_1_1BinaryOpNode_1afb3a9f4de76865880cc9f19ebcc75ea0" kindref="member">tir::MaxNode::make</ref>(kernel_size,<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">make_const</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32),<sp/>1));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(pool_sum(indices),<sp/>divide_factor);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>pool_type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pool_type;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="namespacetopi_1_1nn_1a379dfcc1d33774fb4ce998550dda187c" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1a379dfcc1d33774fb4ce998550dda187c" kindref="member">pool1d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1ab1f1f9f86723b30bb8997615e1d63ca8" kindref="member">find_width</ref>(layout,<sp/>&amp;width_axis))</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>axis<sp/>=<sp/>{width_axis};</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1a0b2681e29b1f733835ffe2e6b3b69c13" kindref="member">pool_impl_nd</ref>(x,<sp/>kernel_size,<sp/>stride_size,<sp/>padding_size,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool_type,<sp/>ceil_mode,<sp/>axis,<sp/>count_include_pad);</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="859" refid="namespacetopi_1_1nn_1af84c2ac0c1fd4ec7db5c9bc661bd5aab" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetopi_1_1nn_1af84c2ac0c1fd4ec7db5c9bc661bd5aab" kindref="member">pool3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>kernel_size,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>stride_size,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref>&amp;<sp/>padding_size,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetopi_1_1nn_1ac531cfce9c3a031fa25cfb6ed1f9b95b" kindref="member">PoolType</ref><sp/>pool_type,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ceil_mode,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>layout<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NCDHW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>count_include_pad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth_axis<sp/>=<sp/>-1,<sp/>height_axis<sp/>=<sp/>-1,<sp/>width_axis<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>CHECK(<ref refid="namespacetopi_1_1nn_1a2e81a7938a1e3f273e184e2373d9138d" kindref="member">find_depth_height_width</ref>(layout,<sp/>&amp;depth_axis,<sp/>&amp;height_axis,<sp/>&amp;width_axis))</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>layout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layout;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>axis<sp/>=<sp/>{depth_axis,<sp/>height_axis,<sp/>width_axis};</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1_1nn_1a0b2681e29b1f733835ffe2e6b3b69c13" kindref="member">pool_impl_nd</ref>(x,<sp/>kernel_size,<sp/>stride_size,<sp/>padding_size,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool_type,<sp/>ceil_mode,<sp/>axis,<sp/>count_include_pad);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>topi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TOPI_NN_POOLING_H_</highlight></codeline>
    </programlisting>
    <location file="topi/include/topi/nn/pooling.h"/>
  </compounddef>
</doxygen>
