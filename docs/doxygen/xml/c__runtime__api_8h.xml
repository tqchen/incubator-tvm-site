<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="c__runtime__api_8h" kind="file" language="C++">
    <compoundname>c_runtime_api.h</compoundname>
    <includes local="no">dlpack/dlpack.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="node_8h" local="no">include/tvm/node/node.h</includedby>
    <includedby refid="reflection_8h" local="no">include/tvm/node/reflection.h</includedby>
    <includedby refid="serialization_8h" local="no">include/tvm/node/serialization.h</includedby>
    <includedby refid="include_2tvm_2relay_2qnn_2transform_8h" local="no">include/tvm/relay/qnn/transform.h</includedby>
    <includedby refid="c__backend__api_8h" local="no">include/tvm/runtime/c_backend_api.h</includedby>
    <includedby refid="data__type_8h" local="no">include/tvm/runtime/data_type.h</includedby>
    <includedby refid="device__api_8h" local="no">include/tvm/runtime/device_api.h</includedby>
    <includedby refid="runtime_2module_8h" local="no">include/tvm/runtime/module.h</includedby>
    <includedby refid="ndarray_8h" local="no">include/tvm/runtime/ndarray.h</includedby>
    <includedby refid="object_8h" local="no">include/tvm/runtime/object.h</includedby>
    <includedby refid="packed__func_8h" local="no">include/tvm/runtime/packed_func.h</includedby>
    <includedby refid="serializer_8h" local="no">include/tvm/runtime/serializer.h</includedby>
    <includedby refid="tir_2expr_8h" local="no">include/tvm/tir/expr.h</includedby>
    <incdepgraph>
      <node id="14350">
        <label>stdint.h</label>
      </node>
      <node id="14351">
        <label>stddef.h</label>
      </node>
      <node id="14348">
        <label>include/tvm/runtime/c_runtime_api.h</label>
        <link refid="c_runtime_api.h"/>
        <childnode refid="14349" relation="include">
        </childnode>
        <childnode refid="14350" relation="include">
        </childnode>
        <childnode refid="14351" relation="include">
        </childnode>
      </node>
      <node id="14349">
        <label>dlpack/dlpack.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14431">
        <label>include/tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="14379" relation="include">
        </childnode>
        <childnode refid="14423" relation="include">
        </childnode>
      </node>
      <node id="14414">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="14373">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="14461">
        <label>include/tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="14356" relation="include">
        </childnode>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14452" relation="include">
        </childnode>
      </node>
      <node id="14404">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="14385" relation="include">
        </childnode>
        <childnode refid="14388" relation="include">
        </childnode>
        <childnode refid="14390" relation="include">
        </childnode>
        <childnode refid="14392" relation="include">
        </childnode>
        <childnode refid="14405" relation="include">
        </childnode>
        <childnode refid="14406" relation="include">
        </childnode>
        <childnode refid="14407" relation="include">
        </childnode>
        <childnode refid="14386" relation="include">
        </childnode>
        <childnode refid="14389" relation="include">
        </childnode>
        <childnode refid="14391" relation="include">
        </childnode>
        <childnode refid="14393" relation="include">
        </childnode>
        <childnode refid="14408" relation="include">
        </childnode>
        <childnode refid="14409" relation="include">
        </childnode>
        <childnode refid="14410" relation="include">
        </childnode>
      </node>
      <node id="14453">
        <label>include/tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="14380" relation="include">
        </childnode>
        <childnode refid="14430" relation="include">
        </childnode>
        <childnode refid="14435" relation="include">
        </childnode>
        <childnode refid="14428" relation="include">
        </childnode>
      </node>
      <node id="14424">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14380" relation="include">
        </childnode>
        <childnode refid="14425" relation="include">
        </childnode>
        <childnode refid="14430" relation="include">
        </childnode>
      </node>
      <node id="14367">
        <label>include/tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="14366" relation="include">
        </childnode>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
      </node>
      <node id="14386">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="14413">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="14412" relation="include">
        </childnode>
      </node>
      <node id="14434">
        <label>include/tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="14355" relation="include">
        </childnode>
        <childnode refid="14372" relation="include">
        </childnode>
        <childnode refid="14435" relation="include">
        </childnode>
      </node>
      <node id="14473">
        <label>include/tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="14470" relation="include">
        </childnode>
      </node>
      <node id="14393">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="14470">
        <label>include/tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="14427" relation="include">
        </childnode>
        <childnode refid="14433" relation="include">
        </childnode>
        <childnode refid="14471" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14472" relation="include">
        </childnode>
        <childnode refid="14473" relation="include">
        </childnode>
        <childnode refid="14474" relation="include">
        </childnode>
        <childnode refid="14475" relation="include">
        </childnode>
        <childnode refid="14448" relation="include">
        </childnode>
        <childnode refid="14449" relation="include">
        </childnode>
      </node>
      <node id="14442">
        <label>include/tvm/relay/attrs/nn.h</label>
        <link refid="include_2tvm_2relay_2attrs_2nn_8h"/>
      </node>
      <node id="14479">
        <label>include/tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="14366" relation="include">
        </childnode>
        <childnode refid="14480" relation="include">
        </childnode>
        <childnode refid="14468" relation="include">
        </childnode>
        <childnode refid="14469" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
        <childnode refid="14455" relation="include">
        </childnode>
        <childnode refid="14456" relation="include">
        </childnode>
      </node>
      <node id="14391">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="14435">
        <label>include/tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="14428" relation="include">
        </childnode>
        <childnode refid="14360" relation="include">
        </childnode>
      </node>
      <node id="14430">
        <label>include/tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="14425" relation="include">
        </childnode>
      </node>
      <node id="14401">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="14464">
        <label>include/tvm/ir/env_func.h</label>
        <link refid="env__func_8h"/>
        <childnode refid="14363" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
      </node>
      <node id="14363">
        <label>include/tvm/ir/type_relation.h</label>
        <link refid="type__relation_8h"/>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
      </node>
      <node id="14478">
        <label>include/tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14461" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14471" relation="include">
        </childnode>
        <childnode refid="14479" relation="include">
        </childnode>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14465" relation="include">
        </childnode>
        <childnode refid="14373" relation="include">
        </childnode>
        <childnode refid="14481" relation="include">
        </childnode>
        <childnode refid="14482" relation="include">
        </childnode>
        <childnode refid="14473" relation="include">
        </childnode>
        <childnode refid="14476" relation="include">
        </childnode>
        <childnode refid="14470" relation="include">
        </childnode>
        <childnode refid="14475" relation="include">
        </childnode>
      </node>
      <node id="14410">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="14418">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="14476">
        <label>include/tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14470" relation="include">
        </childnode>
        <childnode refid="14477" relation="include">
        </childnode>
      </node>
      <node id="14416">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
      </node>
      <node id="14469">
        <label>include/tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
      </node>
      <node id="14429">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="14396" relation="include">
        </childnode>
        <childnode refid="14395" relation="include">
        </childnode>
        <childnode refid="14415" relation="include">
        </childnode>
        <childnode refid="14418" relation="include">
        </childnode>
        <childnode refid="14421" relation="include">
        </childnode>
        <childnode refid="14398" relation="include">
        </childnode>
        <childnode refid="14412" relation="include">
        </childnode>
        <childnode refid="14401" relation="include">
        </childnode>
      </node>
      <node id="14359">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="14390">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="14391" relation="include">
        </childnode>
      </node>
      <node id="14365">
        <label>include/tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="14366" relation="include">
        </childnode>
        <childnode refid="14367" relation="include">
        </childnode>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14369" relation="include">
        </childnode>
        <childnode refid="14370" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14371" relation="include">
        </childnode>
        <childnode refid="14372" relation="include">
        </childnode>
        <childnode refid="14373" relation="include">
        </childnode>
        <childnode refid="14374" relation="include">
        </childnode>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
        <childnode refid="14358" relation="include">
        </childnode>
      </node>
      <node id="14417">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="14402">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="14379">
        <label>include/tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="14380" relation="include">
        </childnode>
      </node>
      <node id="14412">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="14402" relation="include">
        </childnode>
        <childnode refid="14398" relation="include">
        </childnode>
        <childnode refid="14401" relation="include">
        </childnode>
      </node>
      <node id="14444">
        <label>include/tvm/relay/attrs/vision.h</label>
        <link refid="vision_8h"/>
      </node>
      <node id="14475">
        <label>include/tvm/runtime/vm.h</label>
        <link refid="vm_8h"/>
        <childnode refid="14373" relation="include">
        </childnode>
      </node>
      <node id="14449">
        <label>include/tvm/target/generic_func.h</label>
        <link refid="generic__func_8h"/>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14385" relation="include">
        </childnode>
        <childnode refid="14387" relation="include">
        </childnode>
        <childnode refid="14388" relation="include">
        </childnode>
        <childnode refid="14390" relation="include">
        </childnode>
        <childnode refid="14392" relation="include">
        </childnode>
        <childnode refid="14405" relation="include">
        </childnode>
        <childnode refid="14406" relation="include">
        </childnode>
        <childnode refid="14407" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
        <childnode refid="14386" relation="include">
        </childnode>
        <childnode refid="14422" relation="include">
        </childnode>
        <childnode refid="14389" relation="include">
        </childnode>
        <childnode refid="14391" relation="include">
        </childnode>
        <childnode refid="14393" relation="include">
        </childnode>
        <childnode refid="14408" relation="include">
        </childnode>
        <childnode refid="14409" relation="include">
        </childnode>
        <childnode refid="14410" relation="include">
        </childnode>
      </node>
      <node id="14421">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="14399" relation="include">
        </childnode>
      </node>
      <node id="14451">
        <label>include/tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="14423" relation="include">
        </childnode>
        <childnode refid="14431" relation="include">
        </childnode>
        <childnode refid="14432" relation="include">
        </childnode>
        <childnode refid="14452" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
        <childnode refid="14448" relation="include">
        </childnode>
        <childnode refid="14380" relation="include">
        </childnode>
        <childnode refid="14425" relation="include">
        </childnode>
        <childnode refid="14424" relation="include">
        </childnode>
        <childnode refid="14453" relation="include">
        </childnode>
        <childnode refid="14454" relation="include">
        </childnode>
        <childnode refid="14455" relation="include">
        </childnode>
        <childnode refid="14435" relation="include">
        </childnode>
        <childnode refid="14428" relation="include">
        </childnode>
        <childnode refid="14457" relation="include">
        </childnode>
        <childnode refid="14458" relation="include">
        </childnode>
        <childnode refid="14460" relation="include">
        </childnode>
        <childnode refid="14456" relation="include">
        </childnode>
        <childnode refid="14360" relation="include">
        </childnode>
        <childnode refid="14429" relation="include">
        </childnode>
        <childnode refid="14459" relation="include">
        </childnode>
        <childnode refid="14397" relation="include">
        </childnode>
        <childnode refid="14421" relation="include">
        </childnode>
      </node>
      <node id="14441">
        <label>include/tvm/relay/attrs/image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="14366">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type__functor_8h"/>
      </node>
      <node id="14450">
        <label>include/tvm/target/target_info.h</label>
        <link refid="target__info_8h"/>
      </node>
      <node id="14480">
        <label>include/tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="14353" relation="include">
        </childnode>
      </node>
      <node id="14388">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="14389" relation="include">
        </childnode>
      </node>
      <node id="14471">
        <label>include/tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="14423" relation="include">
        </childnode>
        <childnode refid="14432" relation="include">
        </childnode>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14357" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14468" relation="include">
        </childnode>
        <childnode refid="14469" relation="include">
        </childnode>
        <childnode refid="14371" relation="include">
        </childnode>
        <childnode refid="14447" relation="include">
        </childnode>
        <childnode refid="14424" relation="include">
        </childnode>
        <childnode refid="14453" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
        <childnode refid="14457" relation="include">
        </childnode>
      </node>
      <node id="14472">
        <label>include/tvm/runtime/device_api.h</label>
        <link refid="device__api_8h"/>
      </node>
      <node id="14400">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="14394">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14388" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
        <childnode refid="14389" relation="include">
        </childnode>
      </node>
      <node id="14398">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="14399" relation="include">
        </childnode>
        <childnode refid="14400" relation="include">
        </childnode>
        <childnode refid="14401" relation="include">
        </childnode>
      </node>
      <node id="14380">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="14381" relation="include">
        </childnode>
        <childnode refid="14384" relation="include">
        </childnode>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14385" relation="include">
        </childnode>
        <childnode refid="14387" relation="include">
        </childnode>
        <childnode refid="14388" relation="include">
        </childnode>
        <childnode refid="14390" relation="include">
        </childnode>
        <childnode refid="14392" relation="include">
        </childnode>
        <childnode refid="14394" relation="include">
        </childnode>
        <childnode refid="14395" relation="include">
        </childnode>
        <childnode refid="14403" relation="include">
        </childnode>
        <childnode refid="14404" relation="include">
        </childnode>
        <childnode refid="14411" relation="include">
        </childnode>
        <childnode refid="14413" relation="include">
        </childnode>
        <childnode refid="14405" relation="include">
        </childnode>
        <childnode refid="14406" relation="include">
        </childnode>
        <childnode refid="14407" relation="include">
        </childnode>
        <childnode refid="14414" relation="include">
        </childnode>
        <childnode refid="14402" relation="include">
        </childnode>
        <childnode refid="14415" relation="include">
        </childnode>
        <childnode refid="14416" relation="include">
        </childnode>
        <childnode refid="14417" relation="include">
        </childnode>
        <childnode refid="14418" relation="include">
        </childnode>
        <childnode refid="14419" relation="include">
        </childnode>
        <childnode refid="14420" relation="include">
        </childnode>
        <childnode refid="14400" relation="include">
        </childnode>
        <childnode refid="14421" relation="include">
        </childnode>
        <childnode refid="14398" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
        <childnode refid="14386" relation="include">
        </childnode>
        <childnode refid="14422" relation="include">
        </childnode>
        <childnode refid="14389" relation="include">
        </childnode>
        <childnode refid="14391" relation="include">
        </childnode>
        <childnode refid="14393" relation="include">
        </childnode>
        <childnode refid="14412" relation="include">
        </childnode>
        <childnode refid="14401" relation="include">
        </childnode>
        <childnode refid="14408" relation="include">
        </childnode>
        <childnode refid="14409" relation="include">
        </childnode>
        <childnode refid="14410" relation="include">
        </childnode>
      </node>
      <node id="14370">
        <label>include/tvm/relay/attrs/transform.h</label>
        <link refid="include_2tvm_2relay_2attrs_2transform_8h"/>
        <childnode refid="14358" relation="include">
        </childnode>
      </node>
      <node id="14362">
        <label>include/tvm/relay/pattern_functor.h</label>
        <link refid="pattern__functor_8h"/>
      </node>
      <node id="14452">
        <label>include/tvm/relay/base.h</label>
        <link refid="base_8h"/>
        <childnode refid="14367" relation="include">
        </childnode>
        <childnode refid="14436" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14441" relation="include">
        </childnode>
        <childnode refid="14442" relation="include">
        </childnode>
        <childnode refid="14370" relation="include">
        </childnode>
        <childnode refid="14444" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
      </node>
      <node id="14447">
        <label>include/tvm/target/target.h</label>
        <link refid="target_8h"/>
        <childnode refid="14427" relation="include">
        </childnode>
        <childnode refid="14373" relation="include">
        </childnode>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14448" relation="include">
        </childnode>
        <childnode refid="14449" relation="include">
        </childnode>
      </node>
      <node id="14427">
        <label>include/tvm/driver/driver_api.h</label>
        <link refid="driver__api_8h"/>
      </node>
      <node id="14433">
        <label>include/tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="14434" relation="include">
        </childnode>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14363" relation="include">
        </childnode>
        <childnode refid="14367" relation="include">
        </childnode>
        <childnode refid="14436" relation="include">
        </childnode>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14441" relation="include">
        </childnode>
        <childnode refid="14369" relation="include">
        </childnode>
        <childnode refid="14442" relation="include">
        </childnode>
        <childnode refid="14443" relation="include">
        </childnode>
        <childnode refid="14370" relation="include">
        </childnode>
        <childnode refid="14444" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
        <childnode refid="14445" relation="include">
        </childnode>
      </node>
      <node id="14423">
        <label>include/tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="14424" relation="include">
        </childnode>
      </node>
      <node id="14419">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="14457">
        <label>include/tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="14427" relation="include">
        </childnode>
        <childnode refid="14448" relation="include">
        </childnode>
        <childnode refid="14428" relation="include">
        </childnode>
      </node>
      <node id="14415">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="14356">
        <label>include/tvm/ir/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="14357" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
      </node>
      <node id="14456">
        <label>include/tvm/tir/stmt_functor.h</label>
        <link refid="stmt__functor_8h"/>
      </node>
      <node id="14458">
        <label>include/tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="14380" relation="include">
        </childnode>
        <childnode refid="14424" relation="include">
        </childnode>
        <childnode refid="14453" relation="include">
        </childnode>
        <childnode refid="14454" relation="include">
        </childnode>
        <childnode refid="14459" relation="include">
        </childnode>
        <childnode refid="14421" relation="include">
        </childnode>
      </node>
      <node id="14387">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="14378">
        <label>include/tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="14379" relation="include">
        </childnode>
        <childnode refid="14423" relation="include">
        </childnode>
        <childnode refid="14431" relation="include">
        </childnode>
        <childnode refid="14432" relation="include">
        </childnode>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14433" relation="include">
        </childnode>
        <childnode refid="14434" relation="include">
        </childnode>
        <childnode refid="14355" relation="include">
        </childnode>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14446" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14447" relation="include">
        </childnode>
        <childnode refid="14450" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
      </node>
      <node id="14392">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="14393" relation="include">
        </childnode>
      </node>
      <node id="14403">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="14381" relation="include">
        </childnode>
        <childnode refid="14384" relation="include">
        </childnode>
      </node>
      <node id="14372">
        <label>include/tvm/relay/function.h</label>
        <link refid="relay_2function_8h"/>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14358" relation="include">
        </childnode>
      </node>
      <node id="14357">
        <label>include/tvm/ir/transform.h</label>
        <link refid="include_2tvm_2ir_2transform_8h"/>
        <childnode refid="14358" relation="include">
        </childnode>
        <childnode refid="14360" relation="include">
        </childnode>
      </node>
      <node id="14409">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="14465">
        <label>include/tvm/node/serialization.h</label>
        <link refid="serialization_8h"/>
      </node>
      <node id="14426">
        <label>include/tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="14427" relation="include">
        </childnode>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14385" relation="include">
        </childnode>
        <childnode refid="14387" relation="include">
        </childnode>
        <childnode refid="14388" relation="include">
        </childnode>
        <childnode refid="14390" relation="include">
        </childnode>
        <childnode refid="14392" relation="include">
        </childnode>
        <childnode refid="14405" relation="include">
        </childnode>
        <childnode refid="14406" relation="include">
        </childnode>
        <childnode refid="14407" relation="include">
        </childnode>
        <childnode refid="14409" relation="include">
        </childnode>
      </node>
      <node id="14360">
        <label>include/tvm/tir/transform.h</label>
        <link refid="include_2tvm_2tir_2transform_8h"/>
      </node>
      <node id="14354">
        <label>include/tvm/ir/adt.h</label>
        <link refid="ir_2adt_8h"/>
        <childnode refid="14355" relation="include">
        </childnode>
        <childnode refid="14367" relation="include">
        </childnode>
      </node>
      <node id="14466">
        <label>include/tvm/runtime/c_backend_api.h</label>
        <link refid="c__backend__api_8h"/>
      </node>
      <node id="14389">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="14395">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="14396" relation="include">
        </childnode>
      </node>
      <node id="14440">
        <label>include/tvm/relay/attrs/device_copy.h</label>
        <link refid="device__copy_8h"/>
      </node>
      <node id="14381">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="14382" relation="include">
        </childnode>
      </node>
      <node id="14460">
        <label>include/tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="14423" relation="include">
        </childnode>
        <childnode refid="14435" relation="include">
        </childnode>
        <childnode refid="14457" relation="include">
        </childnode>
        <childnode refid="14458" relation="include">
        </childnode>
        <childnode refid="14456" relation="include">
        </childnode>
      </node>
      <node id="14383">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="14385">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="14386" relation="include">
        </childnode>
      </node>
      <node id="14468">
        <label>include/tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
      </node>
      <node id="14408">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="14352">
        <label>include/tvm/runtime/c_runtime_api.h</label>
        <link refid="c_runtime_api.h"/>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14465" relation="include">
        </childnode>
        <childnode refid="14359" relation="include">
        </childnode>
        <childnode refid="14466" relation="include">
        </childnode>
        <childnode refid="14467" relation="include">
        </childnode>
        <childnode refid="14472" relation="include">
        </childnode>
        <childnode refid="14473" relation="include">
        </childnode>
        <childnode refid="14476" relation="include">
        </childnode>
        <childnode refid="14478" relation="include">
        </childnode>
        <childnode refid="14470" relation="include">
        </childnode>
        <childnode refid="14477" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
      </node>
      <node id="14432">
        <label>include/tvm/arith/pattern.h</label>
        <link refid="pattern_8h"/>
      </node>
      <node id="14462">
        <label>include/tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14355" relation="include">
        </childnode>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14446" relation="include">
        </childnode>
        <childnode refid="14363" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
        <childnode refid="14458" relation="include">
        </childnode>
      </node>
      <node id="14428">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="14429" relation="include">
        </childnode>
        <childnode refid="14397" relation="include">
        </childnode>
        <childnode refid="14415" relation="include">
        </childnode>
        <childnode refid="14417" relation="include">
        </childnode>
        <childnode refid="14399" relation="include">
        </childnode>
        <childnode refid="14421" relation="include">
        </childnode>
      </node>
      <node id="14399">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="14355">
        <label>include/tvm/ir/module.h</label>
        <link refid="ir_2module_8h"/>
        <childnode refid="14356" relation="include">
        </childnode>
        <childnode refid="14357" relation="include">
        </childnode>
        <childnode refid="14363" relation="include">
        </childnode>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14371" relation="include">
        </childnode>
        <childnode refid="14373" relation="include">
        </childnode>
      </node>
      <node id="14377">
        <label>include/tvm/relay/type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="14367" relation="include">
        </childnode>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14374" relation="include">
        </childnode>
        <childnode refid="14375" relation="include">
        </childnode>
      </node>
      <node id="14353">
        <label>include/tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14461" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14452" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
      </node>
      <node id="14405">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="14443">
        <label>include/tvm/relay/attrs/reduce.h</label>
        <link refid="reduce_8h"/>
      </node>
      <node id="14396">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="14397" relation="include">
        </childnode>
        <childnode refid="14402" relation="include">
        </childnode>
        <childnode refid="14398" relation="include">
        </childnode>
      </node>
      <node id="14369">
        <label>include/tvm/relay/attrs/memory.h</label>
        <link refid="relay_2attrs_2memory_8h"/>
      </node>
      <node id="14371">
        <label>include/tvm/relay/feature.h</label>
        <link refid="feature_8h"/>
      </node>
      <node id="14358">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="14359" relation="include">
        </childnode>
      </node>
      <node id="14420">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="14422">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="14361">
        <label>include/tvm/relay/expr_functor.h</label>
        <link refid="relay_2expr__functor_8h"/>
      </node>
      <node id="14384">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="14383" relation="include">
        </childnode>
      </node>
      <node id="14364">
        <label>include/tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14374" relation="include">
        </childnode>
      </node>
      <node id="14411">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="14398" relation="include">
        </childnode>
        <childnode refid="14412" relation="include">
        </childnode>
      </node>
      <node id="14455">
        <label>include/tvm/tir/expr_functor.h</label>
        <link refid="tir_2expr__functor_8h"/>
        <childnode refid="14456" relation="include">
        </childnode>
      </node>
      <node id="14406">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="14382" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
      </node>
      <node id="14477">
        <label>include/tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="14476" relation="include">
        </childnode>
      </node>
      <node id="14463">
        <label>include/tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="14464" relation="include">
        </childnode>
        <childnode refid="14353" relation="include">
        </childnode>
      </node>
      <node id="14459">
        <label>topi/include/topi/detail/pad_utils.h</label>
        <link refid="pad__utils_8h"/>
        <childnode refid="14399" relation="include">
        </childnode>
      </node>
      <node id="14375">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14358" relation="include">
        </childnode>
      </node>
      <node id="14382">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="14383" relation="include">
        </childnode>
      </node>
      <node id="14482">
        <label>include/tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="14471" relation="include">
        </childnode>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14481" relation="include">
        </childnode>
        <childnode refid="14473" relation="include">
        </childnode>
        <childnode refid="14475" relation="include">
        </childnode>
      </node>
      <node id="14407">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="14406" relation="include">
        </childnode>
      </node>
      <node id="14474">
        <label>include/tvm/runtime/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14377" relation="include">
        </childnode>
        <childnode refid="14475" relation="include">
        </childnode>
      </node>
      <node id="14439">
        <label>include/tvm/relay/attrs/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="14467">
        <label>include/tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14468" relation="include">
        </childnode>
        <childnode refid="14469" relation="include">
        </childnode>
        <childnode refid="14470" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
      </node>
      <node id="14436">
        <label>include/tvm/relay/attrs/algorithm.h</label>
        <link refid="algorithm_8h"/>
      </node>
      <node id="14438">
        <label>include/tvm/relay/attrs/bitserial.h</label>
        <link refid="bitserial_8h"/>
      </node>
      <node id="14446">
        <label>include/tvm/ir/tensor_type.h</label>
        <link refid="tensor__type_8h"/>
        <childnode refid="14377" relation="include">
        </childnode>
      </node>
      <node id="14445">
        <label>include/tvm/relay/qnn/attrs.h</label>
        <link refid="relay_2qnn_2attrs_8h"/>
      </node>
      <node id="14425">
        <label>include/tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14380" relation="include">
        </childnode>
        <childnode refid="14426" relation="include">
        </childnode>
        <childnode refid="14428" relation="include">
        </childnode>
      </node>
      <node id="14448">
        <label>include/tvm/target/codegen.h</label>
        <link refid="codegen_8h"/>
      </node>
      <node id="14368">
        <label>include/tvm/relay/analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="14481">
        <label>include/tvm/runtime/container.h</label>
        <link refid="runtime_2container_8h"/>
        <childnode refid="14373" relation="include">
        </childnode>
      </node>
      <node id="14397">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="14398" relation="include">
        </childnode>
      </node>
      <node id="14374">
        <label>include/tvm/relay/op.h</label>
        <link refid="relay_2op_8h"/>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
        <childnode refid="14358" relation="include">
        </childnode>
      </node>
      <node id="14376">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="14437">
        <label>include/tvm/relay/attrs/annotation.h</label>
        <link refid="annotation_8h"/>
      </node>
      <node id="14454">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data__layout_8h"/>
        <childnode refid="14375" relation="include">
        </childnode>
        <childnode refid="14412" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="unionTVMValue" prot="public">TVMValue</innerclass>
    <innerclass refid="structTVMByteArray" prot="public">TVMByteArray</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="c__runtime__api_8h_1a4d6bcd569c115f7ae4ddc455b14ca395" prot="public" static="no">
        <name>TVM_WEAK</name>
        <initializer>__attribute__((weak))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="43" column="10" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="c__runtime__api_8h_1a429515e9851601ec44c8ed421521ab6d" prot="public" static="no">
        <name>TVM_VERSION</name>
        <initializer>&quot;0.7.dev1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="64" column="9" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcef" prot="public" static="no">
        <name>TVMDeviceExtType</name>
        <enumvalue id="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefad77aa5af5411ed9f3719f48af1f04b02" prot="public">
          <name>kDLAOCL</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefacdc33f5efa9ddabe89e886c28d1ff65b" prot="public">
          <name>kDLSDAccel</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa72361be679c1aca1c1be5f9b500a3315" prot="public">
          <name>kOpenGL</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa3357ff71d095bc9bdbe5116599bade5f" prot="public">
          <name>kDLMicroDev</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Extension device types in TVM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="80" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33" prot="public" static="no">
        <name>TVMTypeCode</name>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a9387f774bc8453afe4aa4cd17789a405" prot="public">
          <name>kTVMOpaqueHandle</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ada22c3d9c62fa8f40d46e80ce83b96a1" prot="public">
          <name>kTVMNullptr</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6ee930a6be374837d4d85dbe1abeb842" prot="public">
          <name>kTVMDataType</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a5f6f9decf7207118e282b20a874e84e7" prot="public">
          <name>kTVMContext</name>
          <initializer>= 6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a8bd637c4caa55b04490fe26b250e3d86" prot="public">
          <name>kTVMDLTensorHandle</name>
          <initializer>= 7U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33abe76912731a3c65bd7cdd9ab9a462c66" prot="public">
          <name>kTVMObjectHandle</name>
          <initializer>= 8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a41343a05e42d08053d9fa1da85f70af6" prot="public">
          <name>kTVMModuleHandle</name>
          <initializer>= 9U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a396e8ab64a9b33d46bcbedb84819f194" prot="public">
          <name>kTVMPackedFuncHandle</name>
          <initializer>= 10U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" prot="public">
          <name>kTVMStr</name>
          <initializer>= 11U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a4b2f3688d719f6e7c20ab00659e2383e" prot="public">
          <name>kTVMBytes</name>
          <initializer>= 12U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3bab8c80e57b1ab2d7ab95962be4d2ec" prot="public">
          <name>kTVMNDArrayHandle</name>
          <initializer>= 13U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2bea0a5b50b0e24384610059bf1cbdc9" prot="public">
          <name>kTVMExtBegin</name>
          <initializer>= 15U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6aa6b0afb212bea097b2c71eb366214c" prot="public">
          <name>kTVMNNVMFirst</name>
          <initializer>= 16U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3b2e1234b4f579630a5a936e042912b6" prot="public">
          <name>kTVMNNVMLast</name>
          <initializer>= 20U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2a80307d3075829e12d14ba6ec52a6ee" prot="public">
          <name>kTVMExtReserveEnd</name>
          <initializer>= 64U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a463445886242b0357db59f74241ce028" prot="public">
          <name>kTVMExtEnd</name>
          <initializer>= 128U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ab568bfefd0ad6b172868caeb964b038a" prot="public">
          <name>kTVMCustomBegin</name>
          <initializer>= 129U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The type code in used in the TVM FFI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="91" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="91" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="c__runtime__api_8h_1ace8007daffd9f2c6d954c24d870bfcc4" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t tvm_index_t</definition>
        <argsstring></argsstring>
        <name>tvm_index_t</name>
        <briefdescription>
<para>type of array index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="77" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" prot="public" static="no">
        <type>DLContext</type>
        <definition>typedef DLContext TVMContext</definition>
        <argsstring></argsstring>
        <name>TVMContext</name>
        <briefdescription>
<para>The Device information, abstract away common device types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="123" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" prot="public" static="no">
        <type>DLTensor *</type>
        <definition>typedef DLTensor* TVMArrayHandle</definition>
        <argsstring></argsstring>
        <name>TVMArrayHandle</name>
        <briefdescription>
<para>the array handle </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="126" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TVMModuleHandle</definition>
        <argsstring></argsstring>
        <name>TVMModuleHandle</name>
        <briefdescription>
<para>Handle to TVM runtime modules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="151" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TVMFunctionHandle</definition>
        <argsstring></argsstring>
        <name>TVMFunctionHandle</name>
        <briefdescription>
<para>Handle to packed function handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="153" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1a6cd1076476117e74454f67931c2da1d4" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TVMRetValueHandle</definition>
        <argsstring></argsstring>
        <name>TVMRetValueHandle</name>
        <briefdescription>
<para>Handle to hold return value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="155" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TVMStreamHandle</definition>
        <argsstring></argsstring>
        <name>TVMStreamHandle</name>
        <briefdescription>
<para>The stream that is specific to device can be NULL, which indicates the default one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="160" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1aff795d001e3761c75b2b8f422465d5a0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TVMObjectHandle</definition>
        <argsstring></argsstring>
        <name>TVMObjectHandle</name>
        <briefdescription>
<para>Handle to Object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="162" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1a07954203342f2787acf988c4c351d9c3" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* TVMPackedCFunc) (TVMValue *args, int *type_codes, int num_args, TVMRetValueHandle ret, void *resource_handle)</definition>
        <argsstring>)(TVMValue *args, int *type_codes, int num_args, TVMRetValueHandle ret, void *resource_handle)</argsstring>
        <name>TVMPackedCFunc</name>
        <briefdescription>
<para>C type of packed function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_codes</parametername>
</parameternamelist>
<parameterdescription>
<para>The type codes of the arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>The return value handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resource_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle additional resouce handle from fron-end. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, -1 if failure happens, set error via TVMAPISetLastError. </para></simplesect>
<simplesect kind="see"><para><ref refid="c__runtime__api_8h_1ad0c98ff469bd844546a71f61d2e164f3" kindref="member">TVMCFuncSetReturn</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="305" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1ac035a1354f2e5d7f8613af73cc735742" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* TVMPackedCFuncFinalizer) (void *resource_handle)</definition>
        <argsstring>)(void *resource_handle)</argsstring>
        <name>TVMPackedCFuncFinalizer</name>
        <briefdescription>
<para>C callback to free the resource handle in C packed function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle additional resouce handle from fron-end. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="316" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__runtime__api_8h_1a3980ab80477e57fc6045c12ea8b9e48d" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* TVMExtensionFuncDeclarer) (TVMFunctionHandle register_func_handle)</definition>
        <argsstring>)(TVMFunctionHandle register_func_handle)</argsstring>
        <name>TVMExtensionFuncDeclarer</name>
        <briefdescription>
<para>Signature for extension function declarer. </para>        </briefdescription>
        <detaileddescription>
<para>TVM call this function to get the extension functions The declarer will call register_func to register function and their name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>register_func_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The register function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, -1 if failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="327" column="1" bodyfile="include/tvm/runtime/c_runtime_api.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="c__runtime__api_8h_1a477111f9accd70633dc5f2e7139b6cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TVMAPISetLastError</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>TVMAPISetLastError</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Used for implementing C API function. Set last error message before return. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message to be set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a775383bcd8c0237e36bdf0c9654d62c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* TVMGetLastError</definition>
        <argsstring>(void)</argsstring>
        <name>TVMGetLastError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>return str message of the last error all function in this file will return 0 when success and -1 when an error occurred, TVMGetLastError can be called to retrieve the error </para>        </briefdescription>
        <detaileddescription>
<para>this function is threadsafe and can be called by different thread <simplesect kind="return"><para>error info </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a47f79bb2004573a8e36a175d1b73fc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMModLoadFromFile</definition>
        <argsstring>(const char *file_name, const char *format, TVMModuleHandle *out)</argsstring>
        <name>TVMModLoadFromFile</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Load module from file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The file name to load the module from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The result module</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
<simplesect kind="note"><para>The resulting module do not contain import relation. It can be reconstructed by TVMModImport. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1aaeb0d67f6d7e90e671dd5a53b1d6b81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMModImport</definition>
        <argsstring>(TVMModuleHandle mod, TVMModuleHandle dep)</argsstring>
        <name>TVMModImport</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref></type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref></type>
          <declname>dep</declname>
        </param>
        <briefdescription>
<para>Add dep to mod&apos;s dependency. This allows functions in this module to use modules. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dep</parametername>
</parameternamelist>
<parameterdescription>
<para>The dependent module to be imported. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a5a19a18084c94396a673efa309405a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMModGetFunction</definition>
        <argsstring>(TVMModuleHandle mod, const char *func_name, int query_imports, TVMFunctionHandle *out)</argsstring>
        <name>TVMModGetFunction</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref></type>
          <declname>mod</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>query_imports</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get function from the module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query_imports</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to query imported modules </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The result function, can be NULL if it is not available. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when no error is thrown, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ac16764609b45ac911a5c9971e195e377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMModFree</definition>
        <argsstring>(TVMModuleHandle mod)</argsstring>
        <name>TVMModFree</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Free the Module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module to be freed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This may not free up the module&apos;s resources. If there is active TVMFunctionHandle uses the module Or if this module is imported by another active module.</para></simplesect>
The all functions remains valid until TVMFuncFree is called. <simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1af420f0d74004615c03bb40270ad5d489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncFree</definition>
        <argsstring>(TVMFunctionHandle func)</argsstring>
        <name>TVMFuncFree</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Free the function when it is no longer needed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The function handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a8a01e20ffd5784465df0759c950154b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncCall</definition>
        <argsstring>(TVMFunctionHandle func, TVMValue *arg_values, int *type_codes, int num_args, TVMValue *ret_val, int *ret_type_code)</argsstring>
        <name>TVMFuncCall</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="unionTVMValue" kindref="compound">TVMValue</ref> *</type>
          <declname>arg_values</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_codes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_args</declname>
        </param>
        <param>
          <type><ref refid="unionTVMValue" kindref="compound">TVMValue</ref> *</type>
          <declname>ret_val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret_type_code</declname>
        </param>
        <briefdescription>
<para>Call a Packed TVM Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>node handle of the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_values</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_codes</parametername>
</parameternamelist>
<parameterdescription>
<para>The type codes of the arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The return value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_type_code</parametername>
</parameternamelist>
<parameterdescription>
<para>the type code of return value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
<simplesect kind="note"><para>TVM calls always exchanges with type bits=64, lanes=1</para></simplesect>
<simplesect kind="note"><para>API calls always exchanges with type bits=64, lanes=1 If API call returns container handles (e.g. FunctionHandle) these handles should be managed by the front-end. The front-end need to call free function (e.g. TVMFuncFree) to free these handles. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ad0c98ff469bd844546a71f61d2e164f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMCFuncSetReturn</definition>
        <argsstring>(TVMRetValueHandle ret, TVMValue *value, int *type_code, int num_ret)</argsstring>
        <name>TVMCFuncSetReturn</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a6cd1076476117e74454f67931c2da1d4" kindref="member">TVMRetValueHandle</ref></type>
          <declname>ret</declname>
        </param>
        <param>
          <type><ref refid="unionTVMValue" kindref="compound">TVMValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ret</declname>
        </param>
        <briefdescription>
<para>Set the return value of TVMPackedCFunc. </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by TVMPackedCFunc to set the return value. When this function is not called, the function returns null by default.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>The return value handle, pass by ret in TVMPackedCFunc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_code</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value to be returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_ret</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of return values, for now only 1 is supported. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a9ed74b4237a8cb8438bd621d028250e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMCbArgToReturn</definition>
        <argsstring>(TVMValue *value, int code)</argsstring>
        <name>TVMCbArgToReturn</name>
        <param>
          <type><ref refid="unionTVMValue" kindref="compound">TVMValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Inplace translate callback argument value to return value. This is only needed for non-POD arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be translated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code to be translated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function will do a shallow copy when necessary.</para></simplesect>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1adfd8d1f9e7229625d4acd7da3b10287c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncCreateFromCFunc</definition>
        <argsstring>(TVMPackedCFunc func, void *resource_handle, TVMPackedCFuncFinalizer fin, TVMFunctionHandle *out)</argsstring>
        <name>TVMFuncCreateFromCFunc</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a07954203342f2787acf988c4c351d9c3" kindref="member">TVMPackedCFunc</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>resource_handle</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ac035a1354f2e5d7f8613af73cc735742" kindref="member">TVMPackedCFuncFinalizer</ref></type>
          <declname>fin</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Wrap a TVMPackedCFunc to become a FunctionHandle. </para>        </briefdescription>
        <detaileddescription>
<para>The resource_handle will be managed by TVM API, until the function is no longer used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The packed C function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resource_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The resource handle from front-end, can be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fin</parametername>
</parameternamelist>
<parameterdescription>
<para>The finalizer on resource handle when the FunctionHandle get freed, can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the result function handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a9642167d9a76bfe7e81174e8776d504b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncRegisterGlobal</definition>
        <argsstring>(const char *name, TVMFunctionHandle f, int override)</argsstring>
        <name>TVMFuncRegisterGlobal</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>override</declname>
        </param>
        <briefdescription>
<para>Register the function to runtime&apos;s global table. </para>        </briefdescription>
        <detaileddescription>
<para>The registered function then can be pulled by the backend by the name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>override</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether allow override already registered function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ad3bd42da244a0e32ac82d7428e01a010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncGetGlobal</definition>
        <argsstring>(const char *name, TVMFunctionHandle *out)</argsstring>
        <name>TVMFuncGetGlobal</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a global function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the result function pointer, NULL if it does not exist.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The function handle of global function is managed by TVM runtime, So TVMFuncFree is should not be called when it get deleted. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a392740d028710fcd356b2b63ab90fd01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMFuncListGlobalNames</definition>
        <argsstring>(int *out_size, const char ***out_array)</argsstring>
        <name>TVMFuncListGlobalNames</name>
        <param>
          <type>int *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
<para>List all the globally registered function name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of functions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_array</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of function names. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a014b89c1a3b17473d82cb3973eeedba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayAlloc</definition>
        <argsstring>(const tvm_index_t *shape, int ndim, int dtype_code, int dtype_bits, int dtype_lanes, int device_type, int device_id, TVMArrayHandle *out)</argsstring>
        <name>TVMArrayAlloc</name>
        <param>
          <type>const <ref refid="c__runtime__api_8h_1ace8007daffd9f2c6d954c24d870bfcc4" kindref="member">tvm_index_t</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype_bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype_lanes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Allocate a nd-array&apos;s memory, including space of shape, of given spec. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>The shape of the array, the data content will be copied to out </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of dimension of the array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype_code</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code of the dtype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits of dtype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype_lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes in the dtype. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a591e48e52098965e235657dab56bc096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayFree</definition>
        <argsstring>(TVMArrayHandle handle)</argsstring>
        <name>TVMArrayFree</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Free the TVM Array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The array handle to be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a50e9b3dfdc1f4228bf52a26da14456a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayCopyFromBytes</definition>
        <argsstring>(TVMArrayHandle handle, void *data, size_t nbytes)</argsstring>
        <name>TVMArrayCopyFromBytes</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Copy array data from CPU byte array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The array handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ae246eaa00342c042f3f194605ad9bc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayCopyToBytes</definition>
        <argsstring>(TVMArrayHandle handle, void *data, size_t nbytes)</argsstring>
        <name>TVMArrayCopyToBytes</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Copy array data to CPU byte array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The array handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a120628b5226af6deee4010c5a512f618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayCopyFromTo</definition>
        <argsstring>(TVMArrayHandle from, TVMArrayHandle to, TVMStreamHandle stream)</argsstring>
        <name>TVMArrayCopyFromTo</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Copy the array, both from and to must be valid during the copy. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be copied from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The target space. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream where the copy happens, can be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ad67b8f8766fce6b62c82a458e3c9b053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayFromDLPack</definition>
        <argsstring>(DLManagedTensor *from, TVMArrayHandle *out)</argsstring>
        <name>TVMArrayFromDLPack</name>
        <param>
          <type>DLManagedTensor *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Produce an array from the DLManagedTensor that shares data memory with the DLManagedTensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The source DLManagedTensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output array handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ae690840d1af9c7b0fe5b9b457456f60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMArrayToDLPack</definition>
        <argsstring>(TVMArrayHandle from, DLManagedTensor **out)</argsstring>
        <name>TVMArrayToDLPack</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>DLManagedTensor **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Produce a DLMangedTensor from the array that shares data memory with the array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The source array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The DLManagedTensor handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a6483791fc218022e690b6e0d81a095b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TVMDLManagedTensorCallDeleter</definition>
        <argsstring>(DLManagedTensor *dltensor)</argsstring>
        <name>TVMDLManagedTensorCallDeleter</name>
        <param>
          <type>DLManagedTensor *</type>
          <declname>dltensor</declname>
        </param>
        <briefdescription>
<para>Delete (free) a DLManagedTensor&apos;s data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dltensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the DLManagedTensor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a71d0c47cca9068b17cf0a1f4c58d8ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMStreamCreate</definition>
        <argsstring>(int device_type, int device_id, TVMStreamHandle *out)</argsstring>
        <name>TVMStreamCreate</name>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a new runtime stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The new stream handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a9dd0545318bfee4e2f4ccce7d7008e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMStreamFree</definition>
        <argsstring>(int device_type, int device_id, TVMStreamHandle stream)</argsstring>
        <name>TVMStreamFree</name>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Free a created stream handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to be freed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ac414ed248ddb1bfb561685bba3de5e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMSetStream</definition>
        <argsstring>(int device_type, int device_id, TVMStreamHandle handle)</argsstring>
        <name>TVMSetStream</name>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Set the runtime stream of current thread to be stream. The subsequent calls to the same device_type will use the setted stream handle. The specific type of stream is runtime device dependent. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a386d7efd946bc750af8bf109f93f6ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMSynchronize</definition>
        <argsstring>(int device_type, int device_id, TVMStreamHandle stream)</argsstring>
        <name>TVMSynchronize</name>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Wait until all computations on stream completes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to be synchronized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1aa91f776ed41a36790409f78725f81419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMStreamStreamSynchronize</definition>
        <argsstring>(int device_type, int device_id, TVMStreamHandle src, TVMStreamHandle dst)</argsstring>
        <name>TVMStreamStreamSynchronize</name>
        <param>
          <type>int</type>
          <declname>device_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Synchronize two streams of execution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The device type of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The device id of context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source stream to synchronize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination stream to synchronize. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1ab9ddee6cf53918337cd4ca68d8bfc8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMObjectGetTypeIndex</definition>
        <argsstring>(TVMObjectHandle obj, unsigned *out_tindex)</argsstring>
        <name>TVMObjectGetTypeIndex</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1aff795d001e3761c75b2b8f422465d5a0" kindref="member">TVMObjectHandle</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>out_tindex</declname>
        </param>
        <briefdescription>
<para>Get the type_index from an object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object handle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_tindex</parametername>
</parameternamelist>
<parameterdescription>
<para>the output type index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a77d84581b6d0d78c77d88139c6adbf81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMObjectTypeKey2Index</definition>
        <argsstring>(const char *type_key, unsigned *out_tindex)</argsstring>
        <name>TVMObjectTypeKey2Index</name>
        <param>
          <type>const char *</type>
          <declname>type_key</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>out_tindex</declname>
        </param>
        <briefdescription>
<para>Convert type key to type index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_tindex</parametername>
</parameternamelist>
<parameterdescription>
<para>the corresponding type index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__runtime__api_8h_1a660b709e0d509be7909fc31e3690d3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TVMObjectFree</definition>
        <argsstring>(TVMObjectHandle obj)</argsstring>
        <name>TVMObjectFree</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1aff795d001e3761c75b2b8f422465d5a0" kindref="member">TVMObjectHandle</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Free the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object handle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Internally we decrease the reference counter of the object. The object will be freed when every reference to the object are removed. </para></simplesect>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/c_runtime_api.h" line="549" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>\file<sp/>tvm/runtime/c_runtime_api.h</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>\brief<sp/>TVM<sp/>runtime<sp/>library.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>philosophy<sp/>of<sp/>TVM<sp/>project<sp/>is<sp/>to<sp/>customize<sp/>the<sp/>compilation</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>stage<sp/>to<sp/>generate<sp/>code<sp/>that<sp/>can<sp/>used<sp/>by<sp/>other<sp/>projects<sp/>transparently.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>So<sp/>this<sp/>is<sp/>a<sp/>minimum<sp/>runtime<sp/>code<sp/>gluing,<sp/>and<sp/>some<sp/>limited</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>memory<sp/>management<sp/>code<sp/>to<sp/>enable<sp/>quick<sp/>testing.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>runtime<sp/>API<sp/>is<sp/>independent<sp/>from<sp/>TVM<sp/>compilation<sp/>stack<sp/>and<sp/>can</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>linked<sp/>via<sp/>libtvm_runtime.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>common<sp/>flow<sp/>is:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>Use<sp/>TVMFuncListGlobalNames<sp/>to<sp/>get<sp/>global<sp/>function<sp/>name</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>Use<sp/>TVMFuncCall<sp/>to<sp/>call<sp/>these<sp/>functions.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TVM_RUNTIME_C_RUNTIME_API_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_RUNTIME_C_RUNTIME_API_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>to<sp/>do<sp/>weak<sp/>linking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_WEAK<sp/>__declspec(selectany)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="c__runtime__api_8h_1a4d6bcd569c115f7ae4ddc455b14ca395" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_WEAK<sp/>__attribute__((weak))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EMSCRIPTEN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten/emscripten.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DLL<sp/>EMSCRIPTEN_KEEPALIVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TVM_DLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TVM_EXPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DLL<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DLL<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_DLL<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TVM<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="c__runtime__api_8h_1a429515e9851601ec44c8ed421521ab6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_VERSION<sp/>&quot;0.7.dev1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TVM<sp/>Runtime<sp/>is<sp/>DLPack<sp/>compatible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlpack/dlpack.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="c__runtime__api_8h_1ace8007daffd9f2c6d954c24d870bfcc4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="c__runtime__api_8h_1ace8007daffd9f2c6d954c24d870bfcc4" kindref="member">tvm_index_t</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcef" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81" refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefad77aa5af5411ed9f3719f48af1f04b02" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefad77aa5af5411ed9f3719f48af1f04b02" kindref="member">kDLAOCL</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="82" refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefacdc33f5efa9ddabe89e886c28d1ff65b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefacdc33f5efa9ddabe89e886c28d1ff65b" kindref="member">kDLSDAccel</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="83" refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa72361be679c1aca1c1be5f9b500a3315" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa72361be679c1aca1c1be5f9b500a3315" kindref="member">kOpenGL</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="84" refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa3357ff71d095bc9bdbe5116599bade5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcefa3357ff71d095bc9bdbe5116599bade5f" kindref="member">kDLMicroDev</ref><sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AddExtraTVMType<sp/>which<sp/>is<sp/>not<sp/>in<sp/>DLPack<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="c__runtime__api_8h_1a57cbccb14c35a0e62dbc1b911188fcef" kindref="member">TVMDeviceExtType</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>code<sp/>of<sp/>other<sp/>types<sp/>are<sp/>compatible<sp/>with<sp/>DLPack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>few<sp/>fields<sp/>are<sp/>extension<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>used<sp/>by<sp/>TVM<sp/>API<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a9387f774bc8453afe4aa4cd17789a405" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a9387f774bc8453afe4aa4cd17789a405" kindref="member">kTVMOpaqueHandle</ref><sp/>=<sp/>3U,</highlight></codeline>
<codeline lineno="96" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ada22c3d9c62fa8f40d46e80ce83b96a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ada22c3d9c62fa8f40d46e80ce83b96a1" kindref="member">kTVMNullptr</ref><sp/>=<sp/>4U,</highlight></codeline>
<codeline lineno="97" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6ee930a6be374837d4d85dbe1abeb842" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6ee930a6be374837d4d85dbe1abeb842" kindref="member">kTVMDataType</ref><sp/>=<sp/>5U,</highlight></codeline>
<codeline lineno="98" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a5f6f9decf7207118e282b20a874e84e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a5f6f9decf7207118e282b20a874e84e7" kindref="member">kTVMContext</ref><sp/>=<sp/>6U,</highlight></codeline>
<codeline lineno="99" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a8bd637c4caa55b04490fe26b250e3d86" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a8bd637c4caa55b04490fe26b250e3d86" kindref="member">kTVMDLTensorHandle</ref><sp/>=<sp/>7U,</highlight></codeline>
<codeline lineno="100" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33abe76912731a3c65bd7cdd9ab9a462c66" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33abe76912731a3c65bd7cdd9ab9a462c66" kindref="member">kTVMObjectHandle</ref><sp/>=<sp/>8U,</highlight></codeline>
<codeline lineno="101" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a41343a05e42d08053d9fa1da85f70af6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a41343a05e42d08053d9fa1da85f70af6" kindref="member">kTVMModuleHandle</ref><sp/>=<sp/>9U,</highlight></codeline>
<codeline lineno="102" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a396e8ab64a9b33d46bcbedb84819f194" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a396e8ab64a9b33d46bcbedb84819f194" kindref="member">kTVMPackedFuncHandle</ref><sp/>=<sp/>10U,</highlight></codeline>
<codeline lineno="103" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33af2b95de1a09ed39055edfe8ef5ea484d" kindref="member">kTVMStr</ref><sp/>=<sp/>11U,</highlight></codeline>
<codeline lineno="104" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a4b2f3688d719f6e7c20ab00659e2383e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a4b2f3688d719f6e7c20ab00659e2383e" kindref="member">kTVMBytes</ref><sp/>=<sp/>12U,</highlight></codeline>
<codeline lineno="105" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3bab8c80e57b1ab2d7ab95962be4d2ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3bab8c80e57b1ab2d7ab95962be4d2ec" kindref="member">kTVMNDArrayHandle</ref><sp/>=<sp/>13U,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extension<sp/>codes<sp/>for<sp/>other<sp/>frameworks<sp/>to<sp/>integrate<sp/>TVM<sp/>PackedFunc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>make<sp/>sure<sp/>each<sp/>framework&apos;s<sp/>id<sp/>do<sp/>not<sp/>conflict,<sp/>use<sp/>first<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>sections<sp/>to<sp/>mark<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>an<sp/>issue<sp/>at<sp/>the<sp/>repo<sp/>if<sp/>you<sp/>need<sp/>a<sp/>section<sp/>of<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2bea0a5b50b0e24384610059bf1cbdc9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2bea0a5b50b0e24384610059bf1cbdc9" kindref="member">kTVMExtBegin</ref><sp/>=<sp/>15U,</highlight></codeline>
<codeline lineno="111" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6aa6b0afb212bea097b2c71eb366214c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a6aa6b0afb212bea097b2c71eb366214c" kindref="member">kTVMNNVMFirst</ref><sp/>=<sp/>16U,</highlight></codeline>
<codeline lineno="112" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3b2e1234b4f579630a5a936e042912b6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a3b2e1234b4f579630a5a936e042912b6" kindref="member">kTVMNNVMLast</ref><sp/>=<sp/>20U,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>section<sp/>of<sp/>code<sp/>is<sp/>used<sp/>for<sp/>non-reserved<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2a80307d3075829e12d14ba6ec52a6ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a2a80307d3075829e12d14ba6ec52a6ee" kindref="member">kTVMExtReserveEnd</ref><sp/>=<sp/>64U,</highlight></codeline>
<codeline lineno="115" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a463445886242b0357db59f74241ce028" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33a463445886242b0357db59f74241ce028" kindref="member">kTVMExtEnd</ref><sp/>=<sp/>128U,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rest<sp/>of<sp/>the<sp/>space<sp/>is<sp/>used<sp/>for<sp/>custom,<sp/>user-supplied<sp/>datatypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ab568bfefd0ad6b172868caeb964b038a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33ab568bfefd0ad6b172868caeb964b038a" kindref="member">kTVMCustomBegin</ref><sp/>=<sp/>129U,</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><ref refid="c__runtime__api_8h_1ad3cce90e23260e30424e9878d9798d33" kindref="member">TVMTypeCode</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DLContext<sp/><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DLTensor*<sp/><ref refid="c__runtime__api_8h_1a73ca58cb32f4a4adf71d274dc1e27be4" kindref="member">TVMArrayHandle</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="unionTVMValue" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133" refid="unionTVMValue_1aa1c40fa9e74fbf97541fd9735062c4cc" refkind="member"><highlight class="normal"><sp/><sp/>int64_t<sp/><ref refid="unionTVMValue_1aa1c40fa9e74fbf97541fd9735062c4cc" kindref="member">v_int64</ref>;</highlight></codeline>
<codeline lineno="134" refid="unionTVMValue_1abefae93ebafe8818c0060df2bf31e6e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="unionTVMValue_1abefae93ebafe8818c0060df2bf31e6e5" kindref="member">v_float64</ref>;</highlight></codeline>
<codeline lineno="135" refid="unionTVMValue_1a3b172297f9f7bf2f5391f7d87309cd44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="unionTVMValue_1a3b172297f9f7bf2f5391f7d87309cd44" kindref="member">v_handle</ref>;</highlight></codeline>
<codeline lineno="136" refid="unionTVMValue_1ab0e4dea6ca370fe7a7d22f4fc23a4f47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unionTVMValue_1ab0e4dea6ca370fe7a7d22f4fc23a4f47" kindref="member">v_str</ref>;</highlight></codeline>
<codeline lineno="137" refid="unionTVMValue_1a75af73d1e39bc5de7073a008d44b0d16" refkind="member"><highlight class="normal"><sp/><sp/>DLDataType<sp/><ref refid="unionTVMValue_1a75af73d1e39bc5de7073a008d44b0d16" kindref="member">v_type</ref>;</highlight></codeline>
<codeline lineno="138" refid="unionTVMValue_1a93e4b1809f77d08e5fb68384cd4c9088" refkind="member"><highlight class="normal"><sp/><sp/>TVMContext<sp/><ref refid="unionTVMValue_1a93e4b1809f77d08e5fb68384cd4c9088" kindref="member">v_ctx</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/><ref refid="unionTVMValue" kindref="compound">TVMValue</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structTVMByteArray" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146" refid="structTVMByteArray_1ab124e3227a75e0e4d55452f675f4fde1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structTVMByteArray_1ab124e3227a75e0e4d55452f675f4fde1" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="147" refid="structTVMByteArray_1a86d8e8341ce407b7d9374d887143e476" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structTVMByteArray_1a86d8e8341ce407b7d9374d887143e476" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/><ref refid="structTVMByteArray" kindref="compound">TVMByteArray</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__runtime__api_8h_1ac4b0321c489287dcf4637e15328298ce" kindref="member">TVMModuleHandle</ref>;</highlight></codeline>
<codeline lineno="153" refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__runtime__api_8h_1acf57d257a6e0841d84ebbd2a339d183e" kindref="member">TVMFunctionHandle</ref>;</highlight></codeline>
<codeline lineno="155" refid="c__runtime__api_8h_1a6cd1076476117e74454f67931c2da1d4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__runtime__api_8h_1a6cd1076476117e74454f67931c2da1d4" kindref="member">TVMRetValueHandle</ref>;</highlight></codeline>
<codeline lineno="160" refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref>;</highlight></codeline>
<codeline lineno="162" refid="c__runtime__api_8h_1aff795d001e3761c75b2b8f422465d5a0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__runtime__api_8h_1aff795d001e3761c75b2b8f422465d5a0" kindref="member">TVMObjectHandle</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a477111f9accd70633dc5f2e7139b6cf4" kindref="member">TVMAPISetLastError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c__runtime__api_8h_1a775383bcd8c0237e36bdf0c9654d62c3" kindref="member">TVMGetLastError</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a47f79bb2004573a8e36a175d1b73fc64" kindref="member">TVMModLoadFromFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_name,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMModuleHandle*<sp/>out);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1aaeb0d67f6d7e90e671dd5a53b1d6b81a" kindref="member">TVMModImport</ref>(TVMModuleHandle<sp/><ref refid="namespacetopi_1ab32a7a76e3a94a1edba52436a1337cb6" kindref="member">mod</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMModuleHandle<sp/>dep);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a5a19a18084c94396a673efa309405a6c" kindref="member">TVMModGetFunction</ref>(TVMModuleHandle<sp/><ref refid="namespacetopi_1ab32a7a76e3a94a1edba52436a1337cb6" kindref="member">mod</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>query_imports,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMFunctionHandle<sp/>*out);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ac16764609b45ac911a5c9971e195e377" kindref="member">TVMModFree</ref>(TVMModuleHandle<sp/><ref refid="namespacetopi_1ab32a7a76e3a94a1edba52436a1337cb6" kindref="member">mod</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1af420f0d74004615c03bb40270ad5d489" kindref="member">TVMFuncFree</ref>(TVMFunctionHandle<sp/>func);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a8a01e20ffd5784465df0759c950154b5" kindref="member">TVMFuncCall</ref>(TVMFunctionHandle<sp/>func,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionTVMValue" kindref="compound">TVMValue</ref>*<sp/>arg_values,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>type_codes,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_args,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionTVMValue" kindref="compound">TVMValue</ref>*<sp/>ret_val,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ret_type_code);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ad0c98ff469bd844546a71f61d2e164f3" kindref="member">TVMCFuncSetReturn</ref>(TVMRetValueHandle<sp/>ret,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionTVMValue" kindref="compound">TVMValue</ref>*<sp/>value,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>type_code,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ret);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a9ed74b4237a8cb8438bd621d028250e2" kindref="member">TVMCbArgToReturn</ref>(<ref refid="unionTVMValue" kindref="compound">TVMValue</ref>*<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="c__runtime__api_8h_1a07954203342f2787acf988c4c351d9c3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="c__runtime__api_8h_1a07954203342f2787acf988c4c351d9c3" kindref="member">TVMPackedCFunc</ref>)(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionTVMValue" kindref="compound">TVMValue</ref>*<sp/>args,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>type_codes,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_args,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>TVMRetValueHandle<sp/>ret,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>resource_handle);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="c__runtime__api_8h_1ac035a1354f2e5d7f8613af73cc735742" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="c__runtime__api_8h_1ac035a1354f2e5d7f8613af73cc735742" kindref="member">TVMPackedCFuncFinalizer</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>resource_handle);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="c__runtime__api_8h_1a3980ab80477e57fc6045c12ea8b9e48d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="c__runtime__api_8h_1a3980ab80477e57fc6045c12ea8b9e48d" kindref="member">TVMExtensionFuncDeclarer</ref>)(TVMFunctionHandle<sp/>register_func_handle);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1adfd8d1f9e7229625d4acd7da3b10287c" kindref="member">TVMFuncCreateFromCFunc</ref>(<ref refid="c__runtime__api_8h_1a07954203342f2787acf988c4c351d9c3" kindref="member">TVMPackedCFunc</ref><sp/>func,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>resource_handle,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c__runtime__api_8h_1ac035a1354f2e5d7f8613af73cc735742" kindref="member">TVMPackedCFuncFinalizer</ref><sp/>fin,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMFunctionHandle<sp/>*out);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a9642167d9a76bfe7e81174e8776d504b" kindref="member">TVMFuncRegisterGlobal</ref>(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>TVMFunctionHandle<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ad3bd42da244a0e32ac82d7428e01a010" kindref="member">TVMFuncGetGlobal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>TVMFunctionHandle*<sp/>out);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a392740d028710fcd356b2b63ab90fd01" kindref="member">TVMFuncListGlobalNames</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>out_size,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>out_array);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Array<sp/>related<sp/>apis<sp/>for<sp/>quick<sp/>proptyping</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a014b89c1a3b17473d82cb3973eeedba7" kindref="member">TVMArrayAlloc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tvm_index_t*<sp/><ref refid="namespacetopi_1a649c66231bc50f3ed98ac8bb6b6e2518" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dtype_code,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dtype_bits,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dtype_lanes,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMArrayHandle*<sp/>out);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a591e48e52098965e235657dab56bc096" kindref="member">TVMArrayFree</ref>(TVMArrayHandle<sp/>handle);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a50e9b3dfdc1f4228bf52a26da14456a1" kindref="member">TVMArrayCopyFromBytes</ref>(TVMArrayHandle<sp/>handle,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ae246eaa00342c042f3f194605ad9bc7a" kindref="member">TVMArrayCopyToBytes</ref>(TVMArrayHandle<sp/>handle,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a120628b5226af6deee4010c5a512f618" kindref="member">TVMArrayCopyFromTo</ref>(TVMArrayHandle<sp/>from,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMArrayHandle<sp/>to,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMStreamHandle<sp/>stream);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ad67b8f8766fce6b62c82a458e3c9b053" kindref="member">TVMArrayFromDLPack</ref>(DLManagedTensor*<sp/>from,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMArrayHandle*<sp/>out);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ae690840d1af9c7b0fe5b9b457456f60d" kindref="member">TVMArrayToDLPack</ref>(TVMArrayHandle<sp/>from,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DLManagedTensor**<sp/>out);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a6483791fc218022e690b6e0d81a095b0" kindref="member">TVMDLManagedTensorCallDeleter</ref>(DLManagedTensor*<sp/>dltensor);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a71d0c47cca9068b17cf0a1f4c58d8ca9" kindref="member">TVMStreamCreate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,<sp/>TVMStreamHandle*<sp/>out);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a9dd0545318bfee4e2f4ccce7d7008e01" kindref="member">TVMStreamFree</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,<sp/>TVMStreamHandle<sp/>stream);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ac414ed248ddb1bfb561685bba3de5e89" kindref="member">TVMSetStream</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,<sp/>TVMStreamHandle<sp/>handle);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a386d7efd946bc750af8bf109f93f6ce2" kindref="member">TVMSynchronize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,<sp/>TVMStreamHandle<sp/>stream);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1aa91f776ed41a36790409f78725f81419" kindref="member">TVMStreamStreamSynchronize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_type,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMStreamHandle<sp/>src,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVMStreamHandle<sp/>dst);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1ab9ddee6cf53918337cd4ca68d8bfc8b1" kindref="member">TVMObjectGetTypeIndex</ref>(TVMObjectHandle<sp/>obj,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>out_tindex);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a77d84581b6d0d78c77d88139c6adbf81" kindref="member">TVMObjectTypeKey2Index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_key,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>out_tindex);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">TVM_DLL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c__runtime__api_8h_1a660b709e0d509be7909fc31e3690d3f9" kindref="member">TVMObjectFree</ref>(TVMObjectHandle<sp/>obj);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>TVM_EXTERN_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_RUNTIME_C_RUNTIME_API_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/runtime/c_runtime_api.h"/>
  </compounddef>
</doxygen>
