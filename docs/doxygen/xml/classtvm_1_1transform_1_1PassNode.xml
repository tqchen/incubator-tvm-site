<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1transform_1_1PassNode" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tvm::transform::PassNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Object</basecompoundref>
    <includes refid="include_2tvm_2ir_2transform_8h" local="no">transform.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1transform_1_1PassNode_1a4e95f892a77bfa9173892e88b032a4a8" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::transform::PassNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;transform.Pass&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="270" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1ad8fd84de45a9445aacea6273ae2eb7f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tvm::transform::PassNode::~PassNode</definition>
        <argsstring>()</argsstring>
        <name>~PassNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="241" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1ab602b215ed172c9f09cf0fa2862858af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classtvm_1_1transform_1_1PassInfo" kindref="compound">PassInfo</ref></type>
        <definition>virtual PassInfo tvm::transform::PassNode::Info</definition>
        <argsstring>() const =0</argsstring>
        <name>Info</name>
        <briefdescription>
<para>Get the pass information/meta data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1a3fa3ffce313008085951ac8dccdf28d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref></type>
        <definition>IRModule tvm::transform::PassNode::operator()</definition>
        <argsstring>(const IRModule &amp;mod) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Transform mod using the default <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> in the current scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module that an optimization pass runs on.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed module. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="253" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1acc3c5938c9ba37ada87eb6ac35539b2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref></type>
        <definition>virtual IRModule tvm::transform::PassNode::operator()</definition>
        <argsstring>(const IRModule &amp;mod, const PassContext &amp;pass_ctx) const =0</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> &amp;</type>
          <declname>pass_ctx</declname>
        </param>
        <briefdescription>
<para>Transform mod using a functor under a given pass context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The module that an optimization pass runs on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pass_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass context that can provide information for the optimization.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transformed module. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1af04aed6a576c3a4b9c2969d6f190cd37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::transform::PassNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="268" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassNode_1a8e93e7451cad3c7d5d39c49bc51d748b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::transform::PassNode::TVM_DECLARE_BASE_OBJECT_INFO</definition>
        <argsstring>(PassNode, Object)</argsstring>
        <name>TVM_DECLARE_BASE_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1transform_1_1PassNode" kindref="compound">PassNode</ref></type>
        </param>
        <param>
          <type>Object</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="271" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1transform_1_1PassNode" kindref="compound">PassNode</ref> is the base type of differnt types of optimization passes. It is designed as a pure class and implemented by different pass subclasses at different granularity of Relay nodes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6056">
        <label>Object</label>
      </node>
      <node id="6055">
        <label>tvm::transform::PassNode</label>
        <link refid="classtvm_1_1transform_1_1PassNode"/>
        <childnode refid="6056" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6058">
        <label>Object</label>
      </node>
      <node id="6057">
        <label>tvm::transform::PassNode</label>
        <link refid="classtvm_1_1transform_1_1PassNode"/>
        <childnode refid="6058" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/transform.h" line="239" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="239" bodyend="272"/>
    <listofallmembers>
      <member refid="classtvm_1_1transform_1_1PassNode_1a4e95f892a77bfa9173892e88b032a4a8" prot="public" virt="non-virtual"><scope>tvm::transform::PassNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1ab602b215ed172c9f09cf0fa2862858af" prot="public" virt="pure-virtual"><scope>tvm::transform::PassNode</scope><name>Info</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1a3fa3ffce313008085951ac8dccdf28d4" prot="public" virt="non-virtual"><scope>tvm::transform::PassNode</scope><name>operator()</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1acc3c5938c9ba37ada87eb6ac35539b2f" prot="public" virt="pure-virtual"><scope>tvm::transform::PassNode</scope><name>operator()</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1a8e93e7451cad3c7d5d39c49bc51d748b" prot="public" virt="non-virtual"><scope>tvm::transform::PassNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1af04aed6a576c3a4b9c2969d6f190cd37" prot="public" virt="non-virtual"><scope>tvm::transform::PassNode</scope><name>VisitAttrs</name></member>
      <member refid="classtvm_1_1transform_1_1PassNode_1ad8fd84de45a9445aacea6273ae2eb7f6" prot="public" virt="virtual"><scope>tvm::transform::PassNode</scope><name>~PassNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
