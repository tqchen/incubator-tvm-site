<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="operation_8h" kind="file" language="C++">
    <compoundname>operation.h</compoundname>
    <includes refid="analyzer_8h" local="no">tvm/arith/analyzer.h</includes>
    <includes refid="tensor_8h" local="no">tvm/te/tensor.h</includes>
    <includes refid="schedule_8h" local="no">tvm/te/schedule.h</includes>
    <includes refid="tir_2expr_8h" local="no">tvm/tir/expr.h</includes>
    <includes refid="tir_2op_8h" local="no">tvm/tir/op.h</includes>
    <includes refid="buffer_8h" local="no">tvm/tir/buffer.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="cublas_8h" local="no">topi/include/topi/contrib/cublas.h</includedby>
    <includedby refid="rocblas_8h" local="no">topi/include/topi/contrib/rocblas.h</includedby>
    <includedby refid="cuda_2dense_8h" local="no">topi/include/topi/cuda/dense.h</includedby>
    <includedby refid="cuda_2injective_8h" local="no">topi/include/topi/cuda/injective.h</includedby>
    <includedby refid="cuda_2normalization_8h" local="no">topi/include/topi/cuda/normalization.h</includedby>
    <includedby refid="cuda_2pooling_8h" local="no">topi/include/topi/cuda/pooling.h</includedby>
    <includedby refid="cuda_2reduction_8h" local="no">topi/include/topi/cuda/reduction.h</includedby>
    <includedby refid="cuda_2softmax_8h" local="no">topi/include/topi/cuda/softmax.h</includedby>
    <includedby refid="array__utils_8h" local="no">topi/include/topi/detail/array_utils.h</includedby>
    <includedby refid="detail_2broadcast_8h" local="no">topi/include/topi/detail/broadcast.h</includedby>
    <includedby refid="detail_2extern_8h" local="no">topi/include/topi/detail/extern.h</includedby>
    <includedby refid="fuse_8h" local="no">topi/include/topi/detail/fuse.h</includedby>
    <includedby refid="ravel__unravel_8h" local="no">topi/include/topi/detail/ravel_unravel.h</includedby>
    <includedby refid="tensor__utils_8h" local="no">topi/include/topi/detail/tensor_utils.h</includedby>
    <includedby refid="generic_2default_8h" local="no">topi/include/topi/generic/default.h</includedby>
    <includedby refid="generic_2extern_8h" local="no">topi/include/topi/generic/extern.h</includedby>
    <includedby refid="generic_2injective_8h" local="no">topi/include/topi/generic/injective.h</includedby>
    <includedby refid="batch__matmul_8h" local="no">topi/include/topi/nn/batch_matmul.h</includedby>
    <includedby refid="bias__add_8h" local="no">topi/include/topi/nn/bias_add.h</includedby>
    <includedby refid="nn_2bnn_8h" local="no">topi/include/topi/nn/bnn.h</includedby>
    <includedby refid="nn_2dense_8h" local="no">topi/include/topi/nn/dense.h</includedby>
    <includedby refid="dilate_8h" local="no">topi/include/topi/nn/dilate.h</includedby>
    <includedby refid="flatten_8h" local="no">topi/include/topi/nn/flatten.h</includedby>
    <includedby refid="local__response__norm_8h" local="no">topi/include/topi/nn/local_response_norm.h</includedby>
    <includedby refid="mapping_8h" local="no">topi/include/topi/nn/mapping.h</includedby>
    <includedby refid="nn_2softmax_8h" local="no">topi/include/topi/nn/softmax.h</includedby>
    <includedby refid="topi_2include_2topi_2nn_8h" local="no">topi/include/topi/nn.h</includedby>
    <includedby refid="reduction_8h" local="no">topi/include/topi/reduction.h</includedby>
    <includedby refid="rocm_2dense_8h" local="no">topi/include/topi/rocm/dense.h</includedby>
    <includedby refid="rocm_2injective_8h" local="no">topi/include/topi/rocm/injective.h</includedby>
    <includedby refid="rocm_2normalization_8h" local="no">topi/include/topi/rocm/normalization.h</includedby>
    <includedby refid="rocm_2pooling_8h" local="no">topi/include/topi/rocm/pooling.h</includedby>
    <includedby refid="rocm_2reduction_8h" local="no">topi/include/topi/rocm/reduction.h</includedby>
    <includedby refid="rocm_2softmax_8h" local="no">topi/include/topi/rocm/softmax.h</includedby>
    <includedby refid="topi_2include_2topi_2transform_8h" local="no">topi/include/topi/transform.h</includedby>
    <includedby refid="reorg_8h" local="no">topi/include/topi/vision/reorg.h</includedby>
    <includedby refid="x86_2bnn_8h" local="no">topi/include/topi/x86/bnn.h</includedby>
    <includedby refid="x86_2default_8h" local="no">topi/include/topi/x86/default.h</includedby>
    <includedby refid="x86_2injective_8h" local="no">topi/include/topi/x86/injective.h</includedby>
    <incdepgraph>
      <node id="15602">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="15566" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
      </node>
      <node id="15599">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15575" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15574">
        <label>atomic</label>
      </node>
      <node id="15610">
        <label>tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15607" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15604">
        <label>tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15605" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15607" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15589">
        <label>functional</label>
      </node>
      <node id="15591">
        <label>limits</label>
      </node>
      <node id="15580">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="15581" relation="include">
        </childnode>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15576" relation="include">
        </childnode>
        <childnode refid="15582" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
        <childnode refid="15579" relation="include">
        </childnode>
      </node>
      <node id="15579">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="15564" relation="include">
        </childnode>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15580" relation="include">
        </childnode>
        <childnode refid="15585" relation="include">
        </childnode>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15589" relation="include">
        </childnode>
        <childnode refid="15590" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15591" relation="include">
        </childnode>
        <childnode refid="15582" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15593">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="15564" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
      </node>
      <node id="15609">
        <label>tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="15604" relation="include">
        </childnode>
        <childnode refid="15610" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15567">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="15564" relation="include">
        </childnode>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15574" relation="include">
        </childnode>
      </node>
      <node id="15570">
        <label>stdint.h</label>
      </node>
      <node id="15585">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15586" relation="include">
        </childnode>
        <childnode refid="15574" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
      </node>
      <node id="15596">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15593" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15589" relation="include">
        </childnode>
      </node>
      <node id="15562">
        <label>tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="15563" relation="include">
        </childnode>
        <childnode refid="15566" relation="include">
        </childnode>
        <childnode refid="15602" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
        <childnode refid="15582" relation="include">
        </childnode>
        <childnode refid="15591" relation="include">
        </childnode>
      </node>
      <node id="15603">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="15575" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15593" relation="include">
        </childnode>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15566" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15601" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
        <childnode refid="15598" relation="include">
        </childnode>
        <childnode refid="15591" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
      </node>
      <node id="15573">
        <label>string</label>
      </node>
      <node id="15597">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="15593" relation="include">
        </childnode>
        <childnode refid="15598" relation="include">
        </childnode>
      </node>
      <node id="15594">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15576" relation="include">
        </childnode>
        <childnode refid="15579" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15595" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15561">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation.h"/>
        <childnode refid="15562" relation="include">
        </childnode>
        <childnode refid="15604" relation="include">
        </childnode>
        <childnode refid="15608" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15607" relation="include">
        </childnode>
        <childnode refid="15610" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
      </node>
      <node id="15571">
        <label>stddef.h</label>
      </node>
      <node id="15605">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15566" relation="include">
        </childnode>
        <childnode refid="15602" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15606" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
      </node>
      <node id="15607">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="15600" relation="include">
        </childnode>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15606" relation="include">
        </childnode>
        <childnode refid="15601" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
        <childnode refid="15591" relation="include">
        </childnode>
      </node>
      <node id="15566">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15575" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15599" relation="include">
        </childnode>
        <childnode refid="15600" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15601" relation="include">
        </childnode>
        <childnode refid="15591" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15590">
        <label>tuple</label>
      </node>
      <node id="15564">
        <label>dmlc/logging.h</label>
      </node>
      <node id="15606">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
      </node>
      <node id="15583">
        <label>vector</label>
      </node>
      <node id="15592">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15593" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15581">
        <label>dmlc/io.h</label>
      </node>
      <node id="15568">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="15569" relation="include">
        </childnode>
        <childnode refid="15570" relation="include">
        </childnode>
        <childnode refid="15571" relation="include">
        </childnode>
      </node>
      <node id="15600">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15575" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15599" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
      </node>
      <node id="15565">
        <label>utility</label>
      </node>
      <node id="15575">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15576" relation="include">
        </childnode>
        <childnode refid="15578" relation="include">
        </childnode>
        <childnode refid="15597" relation="include">
        </childnode>
        <childnode refid="15594" relation="include">
        </childnode>
        <childnode refid="15592" relation="include">
        </childnode>
        <childnode refid="15596" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15587">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="15577">
        <label>cstdlib</label>
      </node>
      <node id="15598">
        <label>iostream</label>
      </node>
      <node id="15586">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="15581" relation="include">
        </childnode>
        <childnode refid="15587" relation="include">
        </childnode>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15585" relation="include">
        </childnode>
      </node>
      <node id="15584">
        <label>unordered_map</label>
      </node>
      <node id="15578">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15576" relation="include">
        </childnode>
        <childnode refid="15579" relation="include">
        </childnode>
        <childnode refid="15585" relation="include">
        </childnode>
        <childnode refid="15588" relation="include">
        </childnode>
        <childnode refid="15592" relation="include">
        </childnode>
        <childnode refid="15596" relation="include">
        </childnode>
        <childnode refid="15583" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15576">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="15567" relation="include">
        </childnode>
        <childnode refid="15577" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15588">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="15568" relation="include">
        </childnode>
        <childnode refid="15564" relation="include">
        </childnode>
        <childnode refid="15572" relation="include">
        </childnode>
      </node>
      <node id="15563">
        <label>tvm/support/with.h</label>
        <link refid="with_8h"/>
        <childnode refid="15564" relation="include">
        </childnode>
        <childnode refid="15565" relation="include">
        </childnode>
      </node>
      <node id="15572">
        <label>type_traits</label>
      </node>
      <node id="15601">
        <label>algorithm</label>
      </node>
      <node id="15569">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="15608">
        <label>tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="15603" relation="include">
        </childnode>
        <childnode refid="15604" relation="include">
        </childnode>
        <childnode refid="15609" relation="include">
        </childnode>
        <childnode refid="15563" relation="include">
        </childnode>
        <childnode refid="15573" relation="include">
        </childnode>
        <childnode refid="15584" relation="include">
        </childnode>
      </node>
      <node id="15582">
        <label>memory</label>
      </node>
      <node id="15595">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15645">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="15635">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="15616" relation="include">
        </childnode>
        <childnode refid="15619" relation="include">
        </childnode>
        <childnode refid="15621" relation="include">
        </childnode>
        <childnode refid="15623" relation="include">
        </childnode>
        <childnode refid="15636" relation="include">
        </childnode>
        <childnode refid="15637" relation="include">
        </childnode>
        <childnode refid="15638" relation="include">
        </childnode>
        <childnode refid="15617" relation="include">
        </childnode>
        <childnode refid="15620" relation="include">
        </childnode>
        <childnode refid="15622" relation="include">
        </childnode>
        <childnode refid="15624" relation="include">
        </childnode>
        <childnode refid="15639" relation="include">
        </childnode>
        <childnode refid="15640" relation="include">
        </childnode>
        <childnode refid="15641" relation="include">
        </childnode>
      </node>
      <node id="15617">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="15644">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="15643" relation="include">
        </childnode>
      </node>
      <node id="15624">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="15622">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="15632">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="15641">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="15649">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="15647">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="15613" relation="include">
        </childnode>
        <childnode refid="15614" relation="include">
        </childnode>
      </node>
      <node id="15621">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="15622" relation="include">
        </childnode>
      </node>
      <node id="15648">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="15633">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="15643">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="15633" relation="include">
        </childnode>
        <childnode refid="15629" relation="include">
        </childnode>
        <childnode refid="15632" relation="include">
        </childnode>
      </node>
      <node id="15652">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="15630" relation="include">
        </childnode>
      </node>
      <node id="15619">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="15620" relation="include">
        </childnode>
      </node>
      <node id="15631">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="15625">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="15613" relation="include">
        </childnode>
        <childnode refid="15619" relation="include">
        </childnode>
        <childnode refid="15614" relation="include">
        </childnode>
        <childnode refid="15620" relation="include">
        </childnode>
      </node>
      <node id="15629">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="15630" relation="include">
        </childnode>
        <childnode refid="15631" relation="include">
        </childnode>
        <childnode refid="15632" relation="include">
        </childnode>
      </node>
      <node id="15611">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation.h"/>
        <childnode refid="15612" relation="include">
        </childnode>
        <childnode refid="15615" relation="include">
        </childnode>
        <childnode refid="15613" relation="include">
        </childnode>
        <childnode refid="15616" relation="include">
        </childnode>
        <childnode refid="15618" relation="include">
        </childnode>
        <childnode refid="15619" relation="include">
        </childnode>
        <childnode refid="15621" relation="include">
        </childnode>
        <childnode refid="15623" relation="include">
        </childnode>
        <childnode refid="15625" relation="include">
        </childnode>
        <childnode refid="15626" relation="include">
        </childnode>
        <childnode refid="15634" relation="include">
        </childnode>
        <childnode refid="15635" relation="include">
        </childnode>
        <childnode refid="15642" relation="include">
        </childnode>
        <childnode refid="15644" relation="include">
        </childnode>
        <childnode refid="15636" relation="include">
        </childnode>
        <childnode refid="15637" relation="include">
        </childnode>
        <childnode refid="15638" relation="include">
        </childnode>
        <childnode refid="15645" relation="include">
        </childnode>
        <childnode refid="15633" relation="include">
        </childnode>
        <childnode refid="15646" relation="include">
        </childnode>
        <childnode refid="15647" relation="include">
        </childnode>
        <childnode refid="15648" relation="include">
        </childnode>
        <childnode refid="15649" relation="include">
        </childnode>
        <childnode refid="15650" relation="include">
        </childnode>
        <childnode refid="15651" relation="include">
        </childnode>
        <childnode refid="15631" relation="include">
        </childnode>
        <childnode refid="15652" relation="include">
        </childnode>
        <childnode refid="15629" relation="include">
        </childnode>
        <childnode refid="15614" relation="include">
        </childnode>
        <childnode refid="15617" relation="include">
        </childnode>
        <childnode refid="15653" relation="include">
        </childnode>
        <childnode refid="15620" relation="include">
        </childnode>
        <childnode refid="15622" relation="include">
        </childnode>
        <childnode refid="15624" relation="include">
        </childnode>
        <childnode refid="15643" relation="include">
        </childnode>
        <childnode refid="15632" relation="include">
        </childnode>
        <childnode refid="15639" relation="include">
        </childnode>
        <childnode refid="15640" relation="include">
        </childnode>
        <childnode refid="15641" relation="include">
        </childnode>
      </node>
      <node id="15650">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="15646">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="15618">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="15623">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="15624" relation="include">
        </childnode>
      </node>
      <node id="15634">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="15612" relation="include">
        </childnode>
        <childnode refid="15615" relation="include">
        </childnode>
      </node>
      <node id="15640">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="15620">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="15626">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="15627" relation="include">
        </childnode>
      </node>
      <node id="15612">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="15613" relation="include">
        </childnode>
      </node>
      <node id="15614">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="15616">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="15617" relation="include">
        </childnode>
      </node>
      <node id="15639">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="15630">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="15636">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="15627">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="15628" relation="include">
        </childnode>
        <childnode refid="15633" relation="include">
        </childnode>
        <childnode refid="15629" relation="include">
        </childnode>
      </node>
      <node id="15651">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="15653">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="15615">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="15614" relation="include">
        </childnode>
      </node>
      <node id="15642">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="15629" relation="include">
        </childnode>
        <childnode refid="15643" relation="include">
        </childnode>
      </node>
      <node id="15637">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="15613" relation="include">
        </childnode>
        <childnode refid="15614" relation="include">
        </childnode>
      </node>
      <node id="15613">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="15614" relation="include">
        </childnode>
      </node>
      <node id="15638">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="15637" relation="include">
        </childnode>
      </node>
      <node id="15628">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="15629" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtvm_1_1te_1_1TensorDom" prot="public">tvm::te::TensorDom</innerclass>
    <innerclass refid="classtvm_1_1te_1_1OperationNode" prot="public">tvm::te::OperationNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1PlaceholderOpNode" prot="public">tvm::te::PlaceholderOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1BaseComputeOpNode" prot="public">tvm::te::BaseComputeOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1ComputeOpNode" prot="public">tvm::te::ComputeOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1TensorComputeOpNode" prot="public">tvm::te::TensorComputeOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1ScanOpNode" prot="public">tvm::te::ScanOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1ExternOpNode" prot="public">tvm::te::ExternOpNode</innerclass>
    <innerclass refid="classtvm_1_1te_1_1HybridOpNode" prot="public">tvm::te::HybridOpNode</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1te">tvm::te</innernamespace>
    <briefdescription>
<para>Operation node can generate one or multiple Tensors. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TVM_TE_OPERATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_TE_OPERATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="analyzer_8h" kindref="compound">tvm/arith/analyzer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor_8h" kindref="compound">tvm/te/tensor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="schedule_8h" kindref="compound">tvm/te/schedule.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2expr_8h" kindref="compound">tvm/tir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2op_8h" kindref="compound">tvm/tir/op.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="buffer_8h" kindref="compound">tvm/tir/buffer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">te<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structtvm_1_1te_1_1TensorDom" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1te_1_1TensorDom" kindref="compound">TensorDom</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structtvm_1_1te_1_1TensorDom_1a1c1c057115d9dbeec11ff717bf18430b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1te_1_1TensorDom_1a1c1c057115d9dbeec11ff717bf18430b" kindref="member">TensorDom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtvm_1_1te_1_1TensorDom_1a9f2a41beaf5db1710238e4753ef17b85" kindref="member">data</ref>(ndim)<sp/>{}</highlight></codeline>
<codeline lineno="52" refid="structtvm_1_1te_1_1TensorDom_1a9f2a41beaf5db1710238e4753ef17b85" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;IntSet&gt;<sp/>&gt;<sp/><ref refid="structtvm_1_1te_1_1TensorDom_1a9f2a41beaf5db1710238e4753ef17b85" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classtvm_1_1te_1_1OperationNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1FunctionBaseNode" kindref="compound">tir::FunctionBaseNode</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classtvm_1_1te_1_1OperationNode_1ad2fd6f140257f7b3c311f88374fa74d2" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1te_1_1OperationNode_1ad2fd6f140257f7b3c311f88374fa74d2" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="63" refid="classtvm_1_1te_1_1OperationNode_1ae6ac4336e7dc2df84f128fc97a6cdb9b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classtvm_1_1te_1_1OperationNode_1ae6ac4336e7dc2df84f128fc97a6cdb9b" kindref="member">tag</ref>;</highlight></codeline>
<codeline lineno="65" refid="classtvm_1_1te_1_1OperationNode_1a009ebd67a59953ec9a587f9724afd538" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1OperationNode_1a009ebd67a59953ec9a587f9724afd538" kindref="member">attrs</ref>;</highlight></codeline>
<codeline lineno="67" refid="classtvm_1_1te_1_1OperationNode_1a03b4cec709aed13088b1127a5f90c382" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classtvm_1_1te_1_1OperationNode_1a03b4cec709aed13088b1127a5f90c382" kindref="member">func_name</ref>()<sp/>const<sp/>final<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>root_iter_vars()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classtvm_1_1te_1_1OperationNode_1a934232055f50cbd8df33f06f990229c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Operation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" kindref="member">TVM_DECLARE_BASE_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classtvm_1_1te_1_1PlaceholderOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1PlaceholderOpNode" kindref="compound">PlaceholderOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163" refid="classtvm_1_1te_1_1PlaceholderOpNode_1a301fb989a618e248d69120f6c7b33c3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1PlaceholderOpNode_1a301fb989a618e248d69120f6c7b33c3f" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="165" refid="classtvm_1_1te_1_1PlaceholderOpNode_1a4c0ad4ece5214f3638a101c3f4aef38b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/><ref refid="classtvm_1_1te_1_1PlaceholderOpNode_1a4c0ad4ece5214f3638a101c3f4aef38b" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt;<ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref>&gt;<sp/>root_iter_vars()<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&gt;<sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt;<ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>&gt;<sp/>InputTensors()<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>self,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;<ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>self,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arith::Analyzer*<sp/>analyzer,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;const<sp/><ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref>*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;Tensor,<sp/><ref refid="structtvm_1_1te_1_1TensorDom" kindref="compound">TensorDom</ref>&gt;*<sp/>out_dom_map)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>self,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;Tensor,<sp/><ref refid="structtvm_1_1te_1_1TensorDom" kindref="compound">TensorDom</ref>&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;<ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref>,<sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>&gt;*<sp/>out_dom_map)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;IterVar,<sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;IterVar,<sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classtvm_1_1te_1_1PlaceholderOpNode_1a5bf09a2782cf05e19d0912ec3fbba9e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitAttrs(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;attrs&quot;</highlight><highlight class="normal">,<sp/>&amp;attrs);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;shape&quot;</highlight><highlight class="normal">,<sp/>&amp;shape);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;dtype&quot;</highlight><highlight class="normal">,<sp/>&amp;dtype);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>dtype);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classtvm_1_1te_1_1PlaceholderOpNode_1a516d9ad8c441fc3eb93d1a0d112bacd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PlaceholderOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1PlaceholderOpNode" kindref="compound">PlaceholderOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classtvm_1_1te_1_1BaseComputeOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1te_1_1BaseComputeOpNode" kindref="compound">BaseComputeOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216" refid="classtvm_1_1te_1_1BaseComputeOpNode_1a21617a643897727c51ded2b7260df4c3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1BaseComputeOpNode_1a21617a643897727c51ded2b7260df4c3" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="218" refid="classtvm_1_1te_1_1BaseComputeOpNode_1ad0df643468fc148d80afd7116abdd2ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1BaseComputeOpNode_1ad0df643468fc148d80afd7116abdd2ac" kindref="member">reduce_axis</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>root_iter_vars()<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>&gt;<sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/>self,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;<ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>,<sp/><ref refid="structtvm_1_1te_1_1TensorDom" kindref="compound">TensorDom</ref>&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;<ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref>,<sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>&gt;*<sp/>out_dom_map)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacestd" kindref="compound">std</ref>::unordered_map&lt;IterVar,<sp/><ref refid="classtvm_1_1Range" kindref="compound">Range</ref>&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/>const<sp/>final;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_schedulable_dims()<sp/>const<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classtvm_1_1te_1_1BaseComputeOpNode_1aba03c3b6818ea897ce4f0e544532534a" refkind="member"><highlight class="normal"><sp/><sp/>static<sp/>constexpr<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/>&quot;BaseComputeOp&quot;;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1ac2b7418e9549512b5db0126cf2a716f1" kindref="member">TVM_DECLARE_BASE_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1BaseComputeOpNode" kindref="compound">BaseComputeOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classtvm_1_1te_1_1ComputeOpNode" refkind="compound"><highlight class="normal">class<sp/>TVM_DLL<sp/><ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref><sp/>:<sp/>public<sp/>BaseComputeOpNode<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243" refid="classtvm_1_1te_1_1ComputeOpNode_1a1486068943f10fbf785ede621c15ed74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ComputeOpNode_1a1486068943f10fbf785ede621c15ed74" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="245" refid="classtvm_1_1te_1_1ComputeOpNode_1a45e42c63bd2ba62b6f85b9b79e0b9361" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1ComputeOpNode_1a45e42c63bd2ba62b6f85b9b79e0b9361" kindref="member">ComputeOpNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_schedulable_dims()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classtvm_1_1te_1_1ComputeOpNode_1a76272ae11403d194fb01121f26680fd0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1ComputeOpNode_1a76272ae11403d194fb01121f26680fd0" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;attrs&quot;</highlight><highlight class="normal">,<sp/>&amp;attrs);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;axis&quot;</highlight><highlight class="normal">,<sp/>&amp;axis);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;reduce_axis&quot;</highlight><highlight class="normal">,<sp/>&amp;reduce_axis);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;body&quot;</highlight><highlight class="normal">,<sp/>&amp;body);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>axis,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>body);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classtvm_1_1te_1_1ComputeOpNode_1a6191241d4f2f2838ec1dfed9a1a7b7f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ComputeOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1ComputeOpNode" kindref="compound">ComputeOpNode</ref>,<sp/>BaseComputeOpNode);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classtvm_1_1te_1_1TensorComputeOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1TensorComputeOpNode" kindref="compound">TensorComputeOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1BaseComputeOpNode" kindref="compound">BaseComputeOpNode</ref><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288" refid="classtvm_1_1te_1_1TensorComputeOpNode_1af9fbd1dbdccbfbef35a87137b6a1bee6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1af9fbd1dbdccbfbef35a87137b6a1bee6" kindref="member">schedulable_ndim</ref>;</highlight></codeline>
<codeline lineno="290" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a29ad49d26c788d93489e0398be6804fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1TensorIntrin" kindref="compound">TensorIntrin</ref><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1a29ad49d26c788d93489e0398be6804fd" kindref="member">intrin</ref>;</highlight></codeline>
<codeline lineno="292" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a81533c6957c82df59ef8d810ace1bed2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1a81533c6957c82df59ef8d810ace1bed2" kindref="member">inputs</ref>;</highlight></codeline>
<codeline lineno="294" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a0afdf35c3bb7d6affd303c467099667f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Region&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1a0afdf35c3bb7d6affd303c467099667f" kindref="member">input_regions</ref>;</highlight></codeline>
<codeline lineno="296" refid="classtvm_1_1te_1_1TensorComputeOpNode_1ae96efdee192da92765d2a64aff1f9999" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1ae96efdee192da92765d2a64aff1f9999" kindref="member">scalar_inputs</ref>;</highlight></codeline>
<codeline lineno="298" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a6448f522f6326aaed2d4137376c9fc78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1a6448f522f6326aaed2d4137376c9fc78" kindref="member">TensorComputeOpNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_schedulable_dims()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a55712c541cbbbeda5f8ea994a3eed680" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1TensorComputeOpNode_1a55712c541cbbbeda5f8ea994a3eed680" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;axis&quot;</highlight><highlight class="normal">,<sp/>&amp;axis);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;reduce_axis&quot;</highlight><highlight class="normal">,<sp/>&amp;reduce_axis);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;schedulable_ndim&quot;</highlight><highlight class="normal">,<sp/>&amp;schedulable_ndim);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;intrin&quot;</highlight><highlight class="normal">,<sp/>&amp;intrin);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">,<sp/>&amp;inputs);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;input_regions&quot;</highlight><highlight class="normal">,<sp/>&amp;input_regions);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;scalar_inputs&quot;</highlight><highlight class="normal">,<sp/>&amp;scalar_inputs);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>axis,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>reduce_axis,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>schedulable_ndim,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1te_1_1TensorIntrin" kindref="compound">TensorIntrin</ref><sp/>intrin,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>tensors,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Region&gt;</ref><sp/>regions,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>scalar_inputs);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classtvm_1_1te_1_1TensorComputeOpNode_1a56f1970ff8d8aed622587a68534335e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TensorComputeOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1TensorComputeOpNode" kindref="compound">TensorComputeOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1BaseComputeOpNode" kindref="compound">BaseComputeOpNode</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classtvm_1_1te_1_1ScanOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1ScanOpNode" kindref="compound">ScanOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348" refid="classtvm_1_1te_1_1ScanOpNode_1a9c67e6383696efbba8e1ff9bd7470c8a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1a9c67e6383696efbba8e1ff9bd7470c8a" kindref="member">scan_axis</ref>;</highlight></codeline>
<codeline lineno="350" refid="classtvm_1_1te_1_1ScanOpNode_1a729243cd385db2e3f74c3a92a44db935" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1a729243cd385db2e3f74c3a92a44db935" kindref="member">init</ref>;</highlight></codeline>
<codeline lineno="352" refid="classtvm_1_1te_1_1ScanOpNode_1ace2bf7e43cd4197324ec6363626fc60a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1ace2bf7e43cd4197324ec6363626fc60a" kindref="member">update</ref>;</highlight></codeline>
<codeline lineno="354" refid="classtvm_1_1te_1_1ScanOpNode_1a69105f6a84dd4fb912a16bfaa68aebf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1a69105f6a84dd4fb912a16bfaa68aebf6" kindref="member">state_placeholder</ref>;</highlight></codeline>
<codeline lineno="359" refid="classtvm_1_1te_1_1ScanOpNode_1abcc62af0d7da8d97d9065fd82230162b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1abcc62af0d7da8d97d9065fd82230162b" kindref="member">inputs</ref>;</highlight></codeline>
<codeline lineno="369" refid="classtvm_1_1te_1_1ScanOpNode_1ab52af0e689bd723c0a9c853c78a8bc78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1ab52af0e689bd723c0a9c853c78a8bc78" kindref="member">spatial_axis_</ref>;</highlight></codeline>
<codeline lineno="371" refid="classtvm_1_1te_1_1ScanOpNode_1a1b681295f74cb94732ef167a15a8488f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1a1b681295f74cb94732ef167a15a8488f" kindref="member">ScanOpNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>root_iter_vars()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classtvm_1_1te_1_1ScanOpNode_1a6a6b44111b5558c66399dd4408eccc69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1ScanOpNode_1a6a6b44111b5558c66399dd4408eccc69" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;attrs&quot;</highlight><highlight class="normal">,<sp/>&amp;attrs);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;scan_axis&quot;</highlight><highlight class="normal">,<sp/>&amp;scan_axis);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;init&quot;</highlight><highlight class="normal">,<sp/>&amp;init);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal">,<sp/>&amp;update);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;state_placeholder&quot;</highlight><highlight class="normal">,<sp/>&amp;state_placeholder);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">,<sp/>&amp;inputs);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;spatial_axis_&quot;</highlight><highlight class="normal">,<sp/>&amp;spatial_axis_);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/>axis,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>init,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>update,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>state_placeholder,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>input);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classtvm_1_1te_1_1ScanOpNode_1ae42d84d29ba756a6f9061ea13ad26b74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ScanOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1ScanOpNode" kindref="compound">ScanOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classtvm_1_1te_1_1ExternOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1ExternOpNode" kindref="compound">ExternOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="429" refid="classtvm_1_1te_1_1ExternOpNode_1a12bd3ed18f9735abe6850766132eeb4c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1a12bd3ed18f9735abe6850766132eeb4c" kindref="member">inputs</ref>;</highlight></codeline>
<codeline lineno="431" refid="classtvm_1_1te_1_1ExternOpNode_1ae5c3fa995ba59e0e001d6b8f92e39c7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Buffer&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1ae5c3fa995ba59e0e001d6b8f92e39c7a" kindref="member">input_placeholders</ref>;</highlight></codeline>
<codeline lineno="433" refid="classtvm_1_1te_1_1ExternOpNode_1a004d2ec4a439339a2067e4fe7b93dac8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Buffer&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1a004d2ec4a439339a2067e4fe7b93dac8" kindref="member">output_placeholders</ref>;</highlight></codeline>
<codeline lineno="435" refid="classtvm_1_1te_1_1ExternOpNode_1a962b2cfaa4a2141c1b9247ac634b7bf2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1a962b2cfaa4a2141c1b9247ac634b7bf2" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classtvm_1_1te_1_1ExternOpNode_1aa2781af3e0414490286d62ed05722e7c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1aa2781af3e0414490286d62ed05722e7c" kindref="member">ExternOpNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>root_iter_vars()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classtvm_1_1te_1_1ExternOpNode_1ab36bb6d49424620d6e25cb71dc5b6a2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1ExternOpNode_1ab36bb6d49424620d6e25cb71dc5b6a2a" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;attrs&quot;</highlight><highlight class="normal">,<sp/>&amp;attrs);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">,<sp/>&amp;inputs);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;input_placeholders&quot;</highlight><highlight class="normal">,<sp/>&amp;input_placeholders);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;output_placeholders&quot;</highlight><highlight class="normal">,<sp/>&amp;output_placeholders);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;body&quot;</highlight><highlight class="normal">,<sp/>&amp;body);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>inputs,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Buffer&gt;</ref><sp/>input_placeholders,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Buffer&gt;</ref><sp/>output_placeholders,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>body);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classtvm_1_1te_1_1ExternOpNode_1abed03a9c33cf6c1d526deae53bae55db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ExternOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1ExternOpNode" kindref="compound">ExternOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="classtvm_1_1te_1_1HybridOpNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1HybridOpNode" kindref="compound">HybridOpNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="493" refid="classtvm_1_1te_1_1HybridOpNode_1a45104e4a1d31714b9eac76510d33fda5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1a45104e4a1d31714b9eac76510d33fda5" kindref="member">inputs</ref>;</highlight></codeline>
<codeline lineno="495" refid="classtvm_1_1te_1_1HybridOpNode_1a6ff8e6faa8d01063e32a2c124721df29" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1a6ff8e6faa8d01063e32a2c124721df29" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="497" refid="classtvm_1_1te_1_1HybridOpNode_1ac4fae56982073412415765d9016c3dbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1ac4fae56982073412415765d9016c3dbd" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="503" refid="classtvm_1_1te_1_1HybridOpNode_1a77124ad0787c8325f9ba556acdb62feb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1a77124ad0787c8325f9ba556acdb62feb" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classtvm_1_1te_1_1HybridOpNode_1a27ebcb81f18ef107b2853efcfb035ad8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1a27ebcb81f18ef107b2853efcfb035ad8" kindref="member">HybridOpNode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_outputs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;IterVar&gt;</ref><sp/>root_iter_vars()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>output_dtype(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>output_shape(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>InputTensors()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>ReplaceInputs(</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>Tensor&gt;&amp;<sp/>rmap)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PropBoundToInputs(</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref>*<sp/>analyzer,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;const<sp/>VarNode*,<sp/>IntSet&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherBound(</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;Tensor,<sp/>TensorDom&gt;&amp;<sp/>tensor_dom,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;*<sp/>out_dom_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildRealize(</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>realize_map,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref>&amp;<sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>BuildProvide(</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref>&amp;<sp/>stage,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;IterVar,<sp/>Range&gt;&amp;<sp/>dom_map,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_keep_trivial_loop)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="classtvm_1_1te_1_1HybridOpNode_1a7d3899d1fae8ae3877e3361704b4d35e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1HybridOpNode_1a7d3899d1fae8ae3877e3361704b4d35e" kindref="member">VisitAttrs</ref>(<ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>&amp;tag);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;attrs&quot;</highlight><highlight class="normal">,<sp/>&amp;attrs);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">,<sp/>&amp;inputs);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal">,<sp/>&amp;outputs);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;axis&quot;</highlight><highlight class="normal">,<sp/>&amp;axis);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Visit(</highlight><highlight class="stringliteral">&quot;body&quot;</highlight><highlight class="normal">,<sp/>&amp;body);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>TVM_DLL<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref><sp/>make(std::string<sp/>name,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>inputs,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>outputs,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref><sp/>body);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="classtvm_1_1te_1_1HybridOpNode_1a6c61dae889fbe0d6d69f9f168e9271e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>_type_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HybridOp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="object_8h_1a3aea9b3f65aeb9150c0fa7800e5573c6" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1te_1_1HybridOpNode" kindref="compound">HybridOpNode</ref>,<sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref><sp/><ref refid="namespacetvm_1_1te_1ae0c71f84710b436cbe0b32289d0838f4" kindref="member">var</ref>(std::string<sp/>name_hint,<sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>t<sp/>=<sp/><ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">DataType::Int</ref>(32));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/><ref refid="namespacetvm_1_1te_1aacca360b75a7db1eb79785bff8c6e205" kindref="member">thread_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref><sp/>dom,<sp/>std::string<sp/>tag);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref><sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">Range</ref><sp/>dom,<sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>=<sp/>std::function&lt;PrimExpr<sp/>(const<sp/>Array&lt;Var&gt;&amp;<sp/>i)&gt;;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="namespacetvm_1_1te_1aabb227a4a0747faf17a2a8028f5430d5" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aabb227a4a0747faf17a2a8028f5430d5" kindref="member">FBatchCompute</ref><sp/>=<sp/>std::function&lt;Array&lt;PrimExpr&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>i)&gt;;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1a15a1cc6f7146730ec1f03210c81a8a3c" kindref="member">placeholder</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/><ref refid="namespacetopi_1a649c66231bc50f3ed98ac8bb6b6e2518" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref><sp/>dtype<sp/>=<sp/><ref refid="classtvm_1_1runtime_1_1DataType_1a237a714a6a16e14aa01fa4ac52426551" kindref="member">DataType::Float</ref>(32),</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>fcompute,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1te_1aabb227a4a0747faf17a2a8028f5430d5" kindref="member">FBatchCompute</ref><sp/>fcompute,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/><ref refid="namespacetvm_1_1te_1ad78173237a27f7145c6b198be85b1f0d" kindref="member">scan</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>init,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>update,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>state_placeholder,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref><sp/>inputs<sp/>=<sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Tensor&gt;</ref>(),</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scan&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>compute,<sp/>specialized<sp/>for<sp/>different<sp/>fcompute<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="namespacetvm_1_1te_1aa7dcf52a4277350f202a9103e6ad9d17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>(<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>)&gt;<sp/>f,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>fc<sp/>=<sp/>[f]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i[0]);<sp/>};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(shape,<sp/>fc,<sp/>name,<sp/>tag,<sp/>attrs);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652" refid="namespacetvm_1_1te_1a44dae0ad08627ceebe2d0d3f45daa388" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>(<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>)&gt;<sp/>f,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>fc<sp/>=<sp/>[f]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i[0],<sp/>i[1]);<sp/>};</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(shape,<sp/>fc,<sp/>name,<sp/>tag,<sp/>attrs);</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660" refid="namespacetvm_1_1te_1a37b573ec96a0c47ff16719bcd13d7531" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>(<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>)&gt;<sp/>f,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>fc<sp/>=<sp/>[f]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i[0],<sp/>i[1],<sp/>i[2]);<sp/>};</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(shape,<sp/>fc,<sp/>name,<sp/>tag,<sp/>attrs);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668" refid="namespacetvm_1_1te_1aaf04658c5295c3ccebaed3f7b824a841" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;PrimExpr&gt;</ref><sp/>shape,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;<ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>(<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref>)&gt;<sp/>f,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tensor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, ObjectRef&gt;</ref><sp/>attrs<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="namespacetvm_1_1te_1a234ec7f58c22878752d476bd7e99bcea" kindref="member">FCompute</ref><sp/>fc<sp/>=<sp/>[f]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Var&gt;</ref>&amp;<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i[0],<sp/>i[1],<sp/>i[2],<sp/>i[3]);<sp/>};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">compute</ref>(shape,<sp/>fc,<sp/>name,<sp/>tag,<sp/>attrs);</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inline<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="classtvm_1_1te_1_1Operation_1a1ea2201921213b60f6d5f0318abbb90d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>*<sp/><ref refid="classtvm_1_1te_1_1Operation_1a1ea2201921213b60f6d5f0318abbb90d" kindref="member">Operation::operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1te_1_1OperationNode" kindref="compound">OperationNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>te</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_TE_OPERATION_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/te/operation.h"/>
  </compounddef>
</doxygen>
