<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1runtime_1_1ObjectRef" kind="class" language="C++" prot="public">
    <compoundname>tvm::runtime::ObjectRef</compoundname>
    <derivedcompoundref refid="classtvm_1_1runtime_1_1ADT" prot="public" virt="non-virtual">tvm::runtime::ADT</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1runtime_1_1Module" prot="public" virt="non-virtual">tvm::runtime::Module</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1runtime_1_1NDArray" prot="public" virt="non-virtual">tvm::runtime::NDArray</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1runtime_1_1String" prot="public" virt="non-virtual">tvm::runtime::String</derivedcompoundref>
    <derivedcompoundref refid="classtvm_1_1runtime_1_1vm_1_1Closure" prot="public" virt="non-virtual">tvm::runtime::vm::Closure</derivedcompoundref>
    <includes refid="object_8h" local="no">object.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1runtime_1_1ObjectRef_1aa5c355fbb7d2f7402ee360dba8a52cdd" prot="public" static="no">
        <type><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref></type>
        <definition>using tvm::runtime::ObjectRef::ContainerType =  Object</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
<para>type indicate the container type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="568" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" prot="protected" static="no" mutable="no">
        <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> &gt;</type>
        <definition>ObjectPtr&lt;Object&gt; tvm::runtime::ObjectRef::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>Internal pointer that backs the reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="572" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectRef_1a7191cb82e9344bec1b5fd20f45b289f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct ObjectHash</definition>
        <argsstring></argsstring>
        <name>ObjectHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="606" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectRef_1ae0ea8b4adc6dab8c74086bceaef6b3e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMRetValue</definition>
        <argsstring></argsstring>
        <name>TVMRetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="607" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectRef_1a35ae555d4becf356b16aeacd353d41ee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMArgsSetter</definition>
        <argsstring></argsstring>
        <name>TVMArgsSetter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="608" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectRef_1a68c32a41efd1aa99afca70837565cced" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SubRef</type>
          </param>
          <param>
            <type>typename BaseRef</type>
          </param>
        </templateparamlist>
        <type>friend SubRef</type>
        <definition>SubRef Downcast</definition>
        <argsstring>(BaseRef ref)</argsstring>
        <name>Downcast</name>
        <param>
          <type>BaseRef</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Downcast a base reference type to a more specific type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The inptut reference </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding SubRef. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SubRef</parametername>
</parameternamelist>
<parameterdescription>
<para>The target specific reference type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BaseRef</parametername>
</parameternamelist>
<parameterdescription>
<para>the current reference type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="610" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="871" bodyend="876"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1aa07c1f6d66a438ea950637d13ed09471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectRef::ObjectRef</definition>
        <argsstring>()=default</argsstring>
        <name>ObjectRef</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a6a7dd7404edf1c26f8dbd9bd92d03a02" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectRef::ObjectRef</definition>
        <argsstring>(ObjectPtr&lt; Object &gt; data)</argsstring>
        <name>ObjectRef</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref> from existing object ptr. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="504" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="504" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a62014c9eba5cae2ab5a84963725d6a65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::same_as</definition>
        <argsstring>(const ObjectRef &amp;other) const </argsstring>
        <name>same_as</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another object ref. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the compare result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="510" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="510" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1ac8c2b78649a428e35e279d085d509e1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::operator==</definition>
        <argsstring>(const ObjectRef &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another object ref. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the compare result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="518" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a2ae377cc59f98b42339d76bded1c1711" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::operator!=</definition>
        <argsstring>(const ObjectRef &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another object ref. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the compare result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="526" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="526" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a17626209947c4a2f302422be451661c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::operator&lt;</definition>
        <argsstring>(const ObjectRef &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another object ref by address. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the compare result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="534" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="534" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a79d0ae0a887ed5cbfa67de7d43f0ef3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::defined</definition>
        <argsstring>() const </argsstring>
        <name>defined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether the expression is null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="538" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="538" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a11ad7a277c175ee33e1551bbb77a8694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> *</type>
        <definition>const Object* tvm::runtime::ObjectRef::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the internal object pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="542" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="542" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1ab9b1ac131656be45db88e69c04bb16af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> *</type>
        <definition>const Object* tvm::runtime::ObjectRef::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the internal object pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="546" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="546" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a4142990fd1959abc95aa0cccca4f6cda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectRef::unique</definition>
        <argsstring>() const </argsstring>
        <name>unique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether the reference is unique </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="550" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="550" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1ab51c99a3607ca95884d9efd978998ce8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjectType</type>
          </param>
        </templateparamlist>
        <type>const ObjectType *</type>
        <definition>const ObjectType * tvm::runtime::ObjectRef::as</definition>
        <argsstring>() const </argsstring>
        <name>as</name>
        <briefdescription>
<para>Try to downcast the internal <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> to a raw pointer of a corresponding type. </para>        </briefdescription>
        <detaileddescription>
<para>The function will return a nullptr if the cast failed.</para><para>if (const Add *add = node_ref.As&lt;Add&gt;()) { // This is an add node } <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ObjectType</parametername>
</parameternamelist>
<parameterdescription>
<para>the target type, must be a subtype of Object/ </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="565" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="847" bodyend="854"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1aa4604d96f4a77cc10cc1e0419758fb2c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> *</type>
        <definition>Object* tvm::runtime::ObjectRef::get_mutable</definition>
        <argsstring>() const </argsstring>
        <name>get_mutable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return a mutable internal ptr, can be used by sub-classes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="574" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="574" bodyend="576"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1acd04bb22a6861e9952c344ee8547411f" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T tvm::runtime::ObjectRef::DowncastNoCheck</definition>
        <argsstring>(ObjectRef ref)</argsstring>
        <name>DowncastNoCheck</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Internal helper function downcast a ref without check. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only used for internal dev purposes. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The target reference type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The casted result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="584" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="584" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1a22e5bb9d64dbc773bb9263b70882239e" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tvm::runtime::ObjectRef::FFIClearAfterMove</definition>
        <argsstring>(ObjectRef *ref)</argsstring>
        <name>FFIClearAfterMove</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Clear the object ref data field without DecRef after we successfully moved the field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="592" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectRef_1aed593996e4076632450de8fde776707c" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ObjectType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; ObjectType &gt;</type>
        <definition>static ObjectPtr&lt;ObjectType&gt; tvm::runtime::ObjectRef::GetDataPtr</definition>
        <argsstring>(const ObjectRef &amp;ref)</argsstring>
        <name>GetDataPtr</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectRef" kindref="compound">ObjectRef</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Internal helper function get data_ as <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref> of ObjectType. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>only used for internal dev purpose. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ObjectType</parametername>
</parameternamelist>
<parameterdescription>
<para>The corresponding object type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the corresponding type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="602" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="602" bodyend="604"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class of all object reference. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5896">
        <label>tvm::runtime::Module</label>
        <link refid="classtvm_1_1runtime_1_1Module"/>
        <childnode refid="5894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5900">
        <label>tvm::relay::InterpreterClosure</label>
        <link refid="classtvm_1_1relay_1_1InterpreterClosure"/>
        <childnode refid="5899" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5895">
        <label>tvm::runtime::ADT</label>
        <link refid="classtvm_1_1runtime_1_1ADT"/>
        <childnode refid="5894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5894">
        <label>tvm::runtime::ObjectRef</label>
        <link refid="classtvm_1_1runtime_1_1ObjectRef"/>
      </node>
      <node id="5897">
        <label>tvm::runtime::NDArray</label>
        <link refid="classtvm_1_1runtime_1_1NDArray"/>
        <childnode refid="5894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5901">
        <label>tvm::runtime::vm::VMClosure</label>
        <link refid="classtvm_1_1runtime_1_1vm_1_1VMClosure"/>
        <childnode refid="5899" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5899">
        <label>tvm::runtime::vm::Closure</label>
        <link refid="classtvm_1_1runtime_1_1vm_1_1Closure"/>
        <childnode refid="5894" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5898">
        <label>tvm::runtime::String</label>
        <link refid="classtvm_1_1runtime_1_1String"/>
        <childnode refid="5894" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5902">
        <label>tvm::runtime::ObjectRef</label>
        <link refid="classtvm_1_1runtime_1_1ObjectRef"/>
        <childnode refid="5903" relation="usage">
          <edgelabel>#data_</edgelabel>
        </childnode>
      </node>
      <node id="5903">
        <label>tvm::runtime::ObjectPtr&lt; tvm::runtime::Object &gt;</label>
        <link refid="classtvm_1_1runtime_1_1ObjectPtr"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/runtime/object.h" line="499" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="499" bodyend="611"/>
    <listofallmembers>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1ab51c99a3607ca95884d9efd978998ce8" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>as</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1aa5c355fbb7d2f7402ee360dba8a52cdd" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>ContainerType</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1ac261cdb80487fb29ac42b28678f8cbef" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>data_</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a79d0ae0a887ed5cbfa67de7d43f0ef3a" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>defined</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a68c32a41efd1aa99afca70837565cced" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>Downcast</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1acd04bb22a6861e9952c344ee8547411f" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>DowncastNoCheck</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a22e5bb9d64dbc773bb9263b70882239e" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>FFIClearAfterMove</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a11ad7a277c175ee33e1551bbb77a8694" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>get</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1aa4604d96f4a77cc10cc1e0419758fb2c" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>get_mutable</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1aed593996e4076632450de8fde776707c" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>GetDataPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a7191cb82e9344bec1b5fd20f45b289f1" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>ObjectHash</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1aa07c1f6d66a438ea950637d13ed09471" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>ObjectRef</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a6a7dd7404edf1c26f8dbd9bd92d03a02" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>ObjectRef</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a2ae377cc59f98b42339d76bded1c1711" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>operator!=</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1ab9b1ac131656be45db88e69c04bb16af" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a17626209947c4a2f302422be451661c5" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>operator&lt;</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1ac8c2b78649a428e35e279d085d509e1b" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>operator==</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a62014c9eba5cae2ab5a84963725d6a65" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>same_as</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a35ae555d4becf356b16aeacd353d41ee" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>TVMArgsSetter</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1ae0ea8b4adc6dab8c74086bceaef6b3e1" prot="protected" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>TVMRetValue</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectRef_1a4142990fd1959abc95aa0cccca4f6cda" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectRef</scope><name>unique</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
