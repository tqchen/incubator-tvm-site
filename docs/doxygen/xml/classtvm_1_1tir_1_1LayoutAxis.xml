<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1LayoutAxis" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::LayoutAxis</compoundname>
    <includes refid="data__layout_8h" local="no">data_layout.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LayoutAxis_1a46f607d0f70f61b283ed32246baa4699" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref></type>
        <definition>const LayoutAxis tvm::tir::LayoutAxis::UPPER_CASE[]</definition>
        <argsstring>[]</argsstring>
        <name>UPPER_CASE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="85" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LayoutAxis_1a84727ae03740a2bcd40cf23bac8b5d6a" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref></type>
        <definition>const LayoutAxis tvm::tir::LayoutAxis::LOWER_CASE[]</definition>
        <argsstring>[]</argsstring>
        <name>LOWER_CASE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="86" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LayoutAxis_1a1ecfb47a50e090ab3a3f0bf2f18f6e39" prot="private" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tvm::tir::LayoutAxis::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="91" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>static const LayoutAxis&amp; tvm::tir::LayoutAxis::Get</definition>
        <argsstring>(const char name)</argsstring>
        <name>Get</name>
        <param>
          <type>const char</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a4b5df87bf9971c025f4c3399a369fd99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>static const LayoutAxis&amp; tvm::tir::LayoutAxis::Get</definition>
        <argsstring>(const tir::IterVar &amp;itvar)</argsstring>
        <name>Get</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">tir::IterVar</ref> &amp;</type>
          <declname>itvar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1ab5b179ce478f9a1d01b3e44809040486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>static const LayoutAxis&amp; tvm::tir::LayoutAxis::make</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>make</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="50" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::LayoutAxis::IsPrimal</definition>
        <argsstring>() const </argsstring>
        <name>IsPrimal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="52" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tvm::tir::LayoutAxis::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="53" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>const LayoutAxis&amp; tvm::tir::LayoutAxis::ToDual</definition>
        <argsstring>() const </argsstring>
        <name>ToDual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="57" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1ada7181b764f93bdd1d4cedf476922364" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>const LayoutAxis&amp; tvm::tir::LayoutAxis::ToPrimal</definition>
        <argsstring>() const </argsstring>
        <name>ToPrimal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="66" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1aa58f0180c060e912d9e83cdd0922d152" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>const LayoutAxis&amp; tvm::tir::LayoutAxis::ToSubordinate</definition>
        <argsstring>() const </argsstring>
        <name>ToSubordinate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="71" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a0234c6380a757b4a36f4dcba25dc6b21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::LayoutAxis::operator==</definition>
        <argsstring>(const LayoutAxis &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="75" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="75" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1tir_1_1LayoutAxis_1a5f510601a3a63b5b192278a18347b6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const LayoutAxis &amp;l)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="79" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a6aa958e83254481c33ae79119a41d8f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::LayoutAxis::LayoutAxis</definition>
        <argsstring>(const LayoutAxis &amp;)</argsstring>
        <name>LayoutAxis</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a80b71c1eafd9d73dbcf23df0a2ab9b77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        <definition>LayoutAxis&amp; tvm::tir::LayoutAxis::operator=</definition>
        <argsstring>(const LayoutAxis &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LayoutAxis" kindref="compound">LayoutAxis</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LayoutAxis_1a9604c767ba74a0dfa1ab2e794ec0d690" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::LayoutAxis::LayoutAxis</definition>
        <argsstring>(const char name)</argsstring>
        <name>LayoutAxis</name>
        <param>
          <type>const char</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/data_layout.h" line="89" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="89" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5508">
        <label>tvm::tir::LayoutAxis</label>
        <link refid="classtvm_1_1tir_1_1LayoutAxis"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/data_layout.h" line="42" column="1" bodyfile="include/tvm/tir/data_layout.h" bodystart="42" bodyend="92"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a273d3cfc07193e551292450bc2b0e56f" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>Get</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a4b5df87bf9971c025f4c3399a369fd99" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>Get</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a13e11bef75e29b71977779124f72e1b9" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>IsPrimal</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a6aa958e83254481c33ae79119a41d8f9" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>LayoutAxis</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a9604c767ba74a0dfa1ab2e794ec0d690" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>LayoutAxis</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a84727ae03740a2bcd40cf23bac8b5d6a" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>LOWER_CASE</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1ab5b179ce478f9a1d01b3e44809040486" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>make</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a79346e18a79feccd955471d13212fa15" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>name</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a1ecfb47a50e090ab3a3f0bf2f18f6e39" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>name_</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a5f510601a3a63b5b192278a18347b6a7" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>operator&lt;&lt;</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a80b71c1eafd9d73dbcf23df0a2ab9b77" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>operator=</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a0234c6380a757b4a36f4dcba25dc6b21" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>operator==</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1ac30849455035a3b095198ad36f83f2eb" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>ToDual</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1ada7181b764f93bdd1d4cedf476922364" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>ToPrimal</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1aa58f0180c060e912d9e83cdd0922d152" prot="public" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>ToSubordinate</name></member>
      <member refid="classtvm_1_1tir_1_1LayoutAxis_1a46f607d0f70f61b283ed32246baa4699" prot="private" virt="non-virtual"><scope>tvm::tir::LayoutAxis</scope><name>UPPER_CASE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
