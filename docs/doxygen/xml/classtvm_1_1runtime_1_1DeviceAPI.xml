<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1runtime_1_1DeviceAPI" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>tvm::runtime::DeviceAPI</compoundname>
    <includes refid="device__api_8h" local="no">device_api.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1af3fe69d9823d7c67c86ecf247d894f27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tvm::runtime::DeviceAPI::~DeviceAPI</definition>
        <argsstring>()</argsstring>
        <name>~DeviceAPI</name>
        <briefdescription>
<para>virtual destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="65" column="1" bodyfile="include/tvm/runtime/device_api.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a507f3514110b06bb60cb1f2906f8dcf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::SetDevice</definition>
        <argsstring>(TVMContext ctx)=0</argsstring>
        <name>SetDevice</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Set the environment device id to ctx. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to be set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a2b9effd4264a7e68f12958738d5c676a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::GetAttr</definition>
        <argsstring>(TVMContext ctx, DeviceAttrKind kind, TVMRetValue *rv)=0</argsstring>
        <name>GetAttr</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="namespacetvm_1_1runtime_1a46fef1ca0ccc05473e9bb0a8c6b66619" kindref="member">DeviceAttrKind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">TVMRetValue</ref> *</type>
          <declname>rv</declname>
        </param>
        <briefdescription>
<para>Get attribute of specified device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The device context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The result kind </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rv</parametername>
</parameternamelist>
<parameterdescription>
<para>The return value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespacetvm_1_1runtime_1a46fef1ca0ccc05473e9bb0a8c6b66619" kindref="member">DeviceAttrKind</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1acb8898ee955260b6c4ba0e5bdc4ef124" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void* tvm::runtime::DeviceAPI::AllocDataSpace</definition>
        <argsstring>(TVMContext ctx, size_t nbytes, size_t alignment, DLDataType type_hint)=0</argsstring>
        <name>AllocDataSpace</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alignment</declname>
        </param>
        <param>
          <type>DLDataType</type>
          <declname>type_hint</declname>
        </param>
        <briefdescription>
<para>Allocate a data space on device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The device context to perform operation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes in memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>The alignment of the memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements. Only needed by certain backends such as OpenGL, as nbytes &amp; alignment are sufficient for most backends. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The allocated device pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1af547b5ab8be9b0f2616aed7e453e067f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::FreeDataSpace</definition>
        <argsstring>(TVMContext ctx, void *ptr)=0</argsstring>
        <name>FreeDataSpace</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Free a data space on device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The device context to perform operation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The data space. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a0cdbc58366129d3d6185bf7ae20a3226" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::CopyDataFromTo</definition>
        <argsstring>(const void *from, size_t from_offset, void *to, size_t to_offset, size_t num_bytes, TVMContext ctx_from, TVMContext ctx_to, DLDataType type_hint, TVMStreamHandle stream)=0</argsstring>
        <name>CopyDataFromTo</name>
        <param>
          <type>const void *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>from_offset</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>to_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bytes</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx_from</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx_to</declname>
        </param>
        <param>
          <type>DLDataType</type>
          <declname>type_hint</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>copy data from one place to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The source array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte offeset in the from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The target array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte offset in the to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the memory in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_from</parametername>
</parameternamelist>
<parameterdescription>
<para>The source context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_to</parametername>
</parameternamelist>
<parameterdescription>
<para>The target context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements, only neded by certain backends. can be useful for cross device endian converison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional stream object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a67cf0799e8c50432379769022adafe66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
        <definition>virtual TVMStreamHandle tvm::runtime::DeviceAPI::CreateStream</definition>
        <argsstring>(TVMContext ctx)</argsstring>
        <name>CreateStream</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Create a new stream of execution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context of allocation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a8a4d70bbe1db295e42126835bf7f19df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::FreeStream</definition>
        <argsstring>(TVMContext ctx, TVMStreamHandle stream)</argsstring>
        <name>FreeStream</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Free a stream of execution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context of the stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a359964ae5ad0fbdba18da1a0db1a7ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::StreamSync</definition>
        <argsstring>(TVMContext ctx, TVMStreamHandle stream)=0</argsstring>
        <name>StreamSync</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Synchronize the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to perform operation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to be sync. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a2bf972e88ccbb2f896b061730655cf46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::SetStream</definition>
        <argsstring>(TVMContext ctx, TVMStreamHandle stream)</argsstring>
        <name>SetStream</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Set the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to set stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to be set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="146" column="1" bodyfile="include/tvm/runtime/device_api.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1ac913e53e874729157e560efc7bc32420" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::SyncStreamFromTo</definition>
        <argsstring>(TVMContext ctx, TVMStreamHandle event_src, TVMStreamHandle event_dst)</argsstring>
        <name>SyncStreamFromTo</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>event_src</declname>
        </param>
        <param>
          <type><ref refid="c__runtime__api_8h_1ab1d5f6b7945e1410602a8a057fda5757" kindref="member">TVMStreamHandle</ref></type>
          <declname>event_dst</declname>
        </param>
        <briefdescription>
<para>Synchronize 2 streams of execution. </para>        </briefdescription>
        <detaileddescription>
<para>An event is created in event_src stream that the second then stream waits on. Neither event_src or event_dst need to be of the same device ID as the context, but they must be of the same device type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context of the streams. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source stream to synchronize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination stream to synchronize. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a1294018fb28de0f67754d8df98c1e0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void* tvm::runtime::DeviceAPI::AllocWorkspace</definition>
        <argsstring>(TVMContext ctx, size_t nbytes, DLDataType type_hint={})</argsstring>
        <name>AllocWorkspace</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>DLDataType</type>
          <declname>type_hint</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Allocate temporal workspace for backend execution. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>We have the following assumption about backend temporal workspace allocation, and backend will optimize for such assumption:</para></simplesect>
<itemizedlist>
<listitem><para>Only a few allocation will happen, and space will be released after use.</para></listitem><listitem><para>The release order is usually in reverse order of allocate (stack style).</para></listitem><listitem><para>Repeative pattern of same allocations over different runs.</para></listitem><listitem><para>Workspace should not overlap between different threads(i.e. be threadlocal)</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context of allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The size to be allocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of elements. Only needed by certain backends such as OpenGL, as nbytes is sufficient for most backends. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1af096fadcf68d2fad804fc8a00a4f4311" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void tvm::runtime::DeviceAPI::FreeWorkspace</definition>
        <argsstring>(TVMContext ctx, void *ptr)</argsstring>
        <name>FreeWorkspace</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Free temporal workspace in backend execution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context of allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DeviceAPI_1a50365326f6a7cd2f975f72d6503933d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DeviceAPI" kindref="compound">DeviceAPI</ref> *</type>
        <definition>static DeviceAPI* tvm::runtime::DeviceAPI::Get</definition>
        <argsstring>(TVMContext ctx, bool allow_missing=false)</argsstring>
        <name>Get</name>
        <param>
          <type><ref refid="c__runtime__api_8h_1a9363bb701f16ce5bbb381f2a013d25b4" kindref="member">TVMContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_missing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get device API base don context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_missing</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether allow missing </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding device API. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/device_api.h" line="195" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>TVM Runtime Device API, abstracts the device specific interface for memory management. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4866">
        <label>tvm::runtime::DeviceAPI</label>
        <link refid="classtvm_1_1runtime_1_1DeviceAPI"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/runtime/device_api.h" line="62" column="1" bodyfile="include/tvm/runtime/device_api.h" bodystart="62" bodyend="196"/>
    <listofallmembers>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1acb8898ee955260b6c4ba0e5bdc4ef124" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>AllocDataSpace</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a1294018fb28de0f67754d8df98c1e0bd" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>AllocWorkspace</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a0cdbc58366129d3d6185bf7ae20a3226" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>CopyDataFromTo</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a67cf0799e8c50432379769022adafe66" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>CreateStream</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1af547b5ab8be9b0f2616aed7e453e067f" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>FreeDataSpace</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a8a4d70bbe1db295e42126835bf7f19df" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>FreeStream</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1af096fadcf68d2fad804fc8a00a4f4311" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>FreeWorkspace</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a50365326f6a7cd2f975f72d6503933d8" prot="public" virt="non-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>Get</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a2b9effd4264a7e68f12958738d5c676a" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>GetAttr</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a507f3514110b06bb60cb1f2906f8dcf8" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>SetDevice</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a2bf972e88ccbb2f896b061730655cf46" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>SetStream</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1a359964ae5ad0fbdba18da1a0db1a7ad6" prot="public" virt="pure-virtual"><scope>tvm::runtime::DeviceAPI</scope><name>StreamSync</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1ac913e53e874729157e560efc7bc32420" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>SyncStreamFromTo</name></member>
      <member refid="classtvm_1_1runtime_1_1DeviceAPI_1af3fe69d9823d7c67c86ecf247d894f27" prot="public" virt="virtual"><scope>tvm::runtime::DeviceAPI</scope><name>~DeviceAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
