<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacetopi_1_1x86" kind="namespace" language="C++">
    <compoundname>topi::x86</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetopi_1_1x86_1ae4ec847b1ba76f9f16db977fd974f54b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::schedule_binarize_pack</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs)</argsstring>
        <name>schedule_binarize_pack</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <briefdescription>
<para>Create a generic schedule for binarize_pack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/bnn.h" line="45" column="1" bodyfile="topi/include/topi/x86/bnn.h" bodystart="45" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1afc0ee3b6ec048b80ed7dad2ac75a72e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::schedule_binary_dense</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs)</argsstring>
        <name>schedule_binary_dense</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <briefdescription>
<para>Create a generic schedule for binary_dense. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/bnn.h" line="77" column="1" bodyfile="topi/include/topi/x86/bnn.h" bodystart="77" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1a88069d3c8699c44463c94f436d7eb903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::MakeDefaultSchedule</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs, bool auto_inline)</argsstring>
        <name>MakeDefaultSchedule</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>auto_inline</declname>
        </param>
        <briefdescription>
<para>Helper to create a default <ref refid="namespacetopi_1_1x86" kindref="compound">x86</ref> schedule for the given ops. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auto_inline</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to apply the auto inline step.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/default.h" line="47" column="1" bodyfile="topi/include/topi/x86/default.h" bodystart="47" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1a3a708f59316d41d321b8076ad6ad8b29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::default_schedule</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs)</argsstring>
        <name>default_schedule</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <briefdescription>
<para>Create a default <ref refid="namespacetopi_1_1x86" kindref="compound">x86</ref> schedule for the given ops. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/default.h" line="86" column="1" bodyfile="topi/include/topi/x86/default.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1a699f4d04e5bb822785205e0d0f91063a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::default_schedule_auto_inline</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs)</argsstring>
        <name>default_schedule_auto_inline</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <briefdescription>
<para>Create a default <ref refid="namespacetopi_1_1x86" kindref="compound">x86</ref> schedule for the given ops, with auto inline. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/default.h" line="98" column="1" bodyfile="topi/include/topi/x86/default.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1a44cd9748bdc5bbd1e0b2a490cad7c159" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::schedule_injective_from_existing</definition>
        <argsstring>(Schedule sch, const Tensor &amp;out)</argsstring>
        <name>schedule_injective_from_existing</name>
        <param>
          <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
          <declname>sch</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Updates an existing schedule for the given injective ops. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sch</parametername>
</parameternamelist>
<parameterdescription>
<para>The schedule to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor representing the injective op.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The updated schedule. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/injective.h" line="46" column="1" bodyfile="topi/include/topi/x86/injective.h" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1x86_1a850239c0d6385aa8a5b42dfe786d9d4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule topi::x86::schedule_injective</definition>
        <argsstring>(const Target &amp;target, const Array&lt; Tensor &gt; &amp;outs)</argsstring>
        <name>schedule_injective</name>
        <param>
          <type>const <ref refid="classtvm_1_1Target" kindref="compound">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>outs</declname>
        </param>
        <briefdescription>
<para>Create an <ref refid="namespacetopi_1_1x86" kindref="compound">x86</ref> schedule for the given injective ops. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target to generate a schedule for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outs</parametername>
</parameternamelist>
<parameterdescription>
<para>The output tensors.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A schedule for the given ops. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/x86/injective.h" line="67" column="1" bodyfile="topi/include/topi/x86/injective.h" bodystart="67" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topi/include/topi/x86/bnn.h" line="36" column="1"/>
  </compounddef>
</doxygen>
