<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1FuncTypeNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::FuncTypeNode</compoundname>
    <basecompoundref refid="classtvm_1_1TypeNode" prot="public" virt="non-virtual">tvm::TypeNode</basecompoundref>
    <includes refid="ir_2type_8h" local="no">type.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1FuncTypeNode_1abffc654ce18e472ce19725dbaf5c7316" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1Type" kindref="compound">Type</ref> &gt;</type>
        <definition>Array&lt;Type&gt; tvm::FuncTypeNode::arg_types</definition>
        <argsstring></argsstring>
        <name>arg_types</name>
        <briefdescription>
<para>type type of arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="417" column="1" bodyfile="include/tvm/ir/type.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1FuncTypeNode_1a4d30bd05ee4751f963daf10f0c69036d" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type tvm::FuncTypeNode::ret_type</definition>
        <argsstring></argsstring>
        <name>ret_type</name>
        <briefdescription>
<para>The type of return value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="419" column="1" bodyfile="include/tvm/ir/type.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1FuncTypeNode_1acc1bb373c5851f6cec016a874f304d05" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref> &gt;</type>
        <definition>Array&lt;TypeVar&gt; tvm::FuncTypeNode::type_params</definition>
        <argsstring></argsstring>
        <name>type_params</name>
        <briefdescription>
<para>The type parameters of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="423" column="1" bodyfile="include/tvm/ir/type.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1FuncTypeNode_1a6dd6e8ed07019caa87943ec47d065499" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1TypeConstraint" kindref="compound">TypeConstraint</ref> &gt;</type>
        <definition>Array&lt;TypeConstraint&gt; tvm::FuncTypeNode::type_constraints</definition>
        <argsstring></argsstring>
        <name>type_constraints</name>
        <briefdescription>
<para>potential constraint the type need to obey </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this field is reserved for futher purposes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="428" column="1" bodyfile="include/tvm/ir/type.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1FuncTypeNode_1a1c1454430a69a07b9f32ca06db81f29e" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::FuncTypeNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;FuncType&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="454" column="1" bodyfile="include/tvm/ir/type.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1FuncTypeNode_1af24e0e62007ea125a1150e18d8b3009e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::FuncTypeNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="430" column="1" bodyfile="include/tvm/ir/type.h" bodystart="430" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1FuncTypeNode_1a948d4107485982ea371fae189f7f0d2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::FuncTypeNode::SEqualReduce</definition>
        <argsstring>(const FuncTypeNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="438" column="1" bodyfile="include/tvm/ir/type.h" bodystart="438" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1FuncTypeNode_1a854174cec06c0d4f3fdb5c621d533193" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::FuncTypeNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="447" column="1" bodyfile="include/tvm/ir/type.h" bodystart="447" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1FuncTypeNode_1a71a9ad8adac8816aa61c3c8851765d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::FuncTypeNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(FuncTypeNode, TypeNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1TypeNode" kindref="compound">TypeNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="455" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function type. </para>    </briefdescription>
    <detaileddescription>
<para>We support polymorphic function type. This can be roughly viewed as template function in C++.</para><para><simplesect kind="see"><para><ref refid="classtvm_1_1FuncType" kindref="compound">FuncType</ref>, <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref>, <ref refid="classtvm_1_1TypeConstraint" kindref="compound">TypeConstraint</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5159">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="5160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5160">
        <label>Object</label>
      </node>
      <node id="5158">
        <label>tvm::FuncTypeNode</label>
        <link refid="classtvm_1_1FuncTypeNode"/>
        <childnode refid="5159" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5165">
        <label>ObjectRef</label>
      </node>
      <node id="5164">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="5165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5162">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="5163" relation="public-inheritance">
        </childnode>
        <childnode refid="5164" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
      </node>
      <node id="5163">
        <label>Object</label>
      </node>
      <node id="5161">
        <label>tvm::FuncTypeNode</label>
        <link refid="classtvm_1_1FuncTypeNode"/>
        <childnode refid="5162" relation="public-inheritance">
        </childnode>
        <childnode refid="5166" relation="usage">
          <edgelabel>+type_constraints</edgelabel>
        </childnode>
        <childnode refid="5167" relation="usage">
          <edgelabel>+arg_types</edgelabel>
        </childnode>
        <childnode refid="5168" relation="usage">
          <edgelabel>+ret_type</edgelabel>
        </childnode>
        <childnode refid="5169" relation="usage">
          <edgelabel>+type_params</edgelabel>
        </childnode>
      </node>
      <node id="5166">
        <label>tvm::Array&lt; tvm::TypeConstraint &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="5165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5167">
        <label>tvm::Array&lt; tvm::Type &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="5165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5169">
        <label>tvm::Array&lt; tvm::TypeVar &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="5165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5168">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="5165" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/type.h" line="414" column="1" bodyfile="include/tvm/ir/type.h" bodystart="414" bodyend="456"/>
    <listofallmembers>
      <member refid="classtvm_1_1TypeNode_1ab02f7d165755f57689f986aca467a7e5" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a4179c7d7d55d1141cadfd19547fb1344" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a1c1454430a69a07b9f32ca06db81f29e" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1abffc654ce18e472ce19725dbaf5c7316" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>arg_types</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a4d30bd05ee4751f963daf10f0c69036d" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>ret_type</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a948d4107485982ea371fae189f7f0d2e" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a854174cec06c0d4f3fdb5c621d533193" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a7b06d502a5162d51bb205691bbb95bb5" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>span</name></member>
      <member refid="classtvm_1_1TypeNode_1abadff70e220806f889e81a0ad3bca0da" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a71a9ad8adac8816aa61c3c8851765d04" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1a6dd6e8ed07019caa87943ec47d065499" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>type_constraints</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1acc1bb373c5851f6cec016a874f304d05" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>type_params</name></member>
      <member refid="classtvm_1_1FuncTypeNode_1af24e0e62007ea125a1150e18d8b3009e" prot="public" virt="non-virtual"><scope>tvm::FuncTypeNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
