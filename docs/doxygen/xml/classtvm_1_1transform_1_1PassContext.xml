<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1transform_1_1PassContext" kind="class" language="C++" prot="public">
    <compoundname>tvm::transform::PassContext</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <includes refid="include_2tvm_2ir_2transform_8h" local="no">transform.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1transform_1_1PassContext_1aacc7ca51bec83db2784d871bb324ce93" prot="public" static="no">
        <type><ref refid="classtvm_1_1transform_1_1PassContextNode" kindref="compound">PassContextNode</ref></type>
        <definition>using tvm::transform::PassContext::ContainerType =  PassContextNode</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="173" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1transform_1_1PassContext_1a8bde6eb35df6b3a9f53810e0bc79fdfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Internal</definition>
        <argsstring></argsstring>
        <name>Internal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="183" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1transform_1_1PassContext_1a5f399608a6da56a5c91ea6ead8489f69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class With&lt; PassContext &gt;</definition>
        <argsstring></argsstring>
        <name>With&lt; PassContext &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="183" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a906dadb55586afece28d71d3436fdf1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::transform::PassContext::PassContext</definition>
        <argsstring>()</argsstring>
        <name>PassContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="135" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a8f5f511c2e29991eceff7b1f4883313e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::transform::PassContext::PassContext</definition>
        <argsstring>(ObjectPtr&lt; Object &gt; n)</argsstring>
        <name>PassContext</name>
        <param>
          <type>ObjectPtr&lt; Object &gt;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="136" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a69b8a7115988b2e8a77afc8e8f98aaa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1transform_1_1PassContextNode" kindref="compound">PassContextNode</ref> *</type>
        <definition>const PassContextNode* tvm::transform::PassContext::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>const accessor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const access pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="141" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1ab10baf6f7bcbd6e0e4b295399bc9f3a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1transform_1_1PassContextNode" kindref="compound">PassContextNode</ref> *</type>
        <definition>PassContextNode* tvm::transform::PassContext::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>mutable accessor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>mutable access pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="149" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a4cddf63528edf5b0554a13a1faa96f3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::transform::PassContext::Trace</definition>
        <argsstring>(const IRModule &amp;module, const PassInfo &amp;info, bool is_before) const </argsstring>
        <name>Trace</name>
        <param>
          <type>const <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> &amp;</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1transform_1_1PassInfo" kindref="compound">PassInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_before</declname>
        </param>
        <briefdescription>
<para>Apply the tracing functions of the context to the module, with the info. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classtvm_1_1IRModule" kindref="compound">IRModule</ref> to trace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>The pass information. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_before</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicated whether the tracing is before or after a pass. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="170" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1aabfad8965c2f4e7b6e4b0812652ddfd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref></type>
        <definition>static PassContext tvm::transform::PassContext::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
<para>Construct a <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> containing the default configurations. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The new <ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a4d21045965f6e5ea9338a1e8111af5fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref></type>
        <definition>static PassContext tvm::transform::PassContext::Current</definition>
        <argsstring>()</argsstring>
        <name>Current</name>
        <briefdescription>
<para>Get the default pass context in the current scope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pass context. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="162" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a26d07ec1df985c785cb76b589a9c6d5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::transform::PassContext::EnterWithScope</definition>
        <argsstring>()</argsstring>
        <name>EnterWithScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1transform_1_1PassContext_1a38377fb960826c4e95b677859caf959f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::transform::PassContext::ExitWithScope</definition>
        <argsstring>()</argsstring>
        <name>ExitWithScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/transform.h" line="180" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1transform_1_1PassContext" kindref="compound">PassContext</ref> that is used to configure the pass behavior. </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">auto<sp/>new_ctx<sp/>=<sp/>PassContext::Create();</highlight></codeline>
<codeline><highlight class="normal">ctx-&gt;opt_level<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal">ctx-&gt;fallback_device<sp/>=<sp/>kDLCPU;</highlight></codeline>
<codeline><highlight class="normal">With&lt;PassContext&gt;<sp/>scope(ctx);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>pass<sp/>context<sp/>in<sp/>effect.</highlight></codeline>
</programlisting> <simplesect kind="see"><para><ref refid="classtvm_1_1transform_1_1PassContextNode" kindref="compound">PassContextNode</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6034">
        <label>ObjectRef</label>
      </node>
      <node id="6033">
        <label>tvm::transform::PassContext</label>
        <link refid="classtvm_1_1transform_1_1PassContext"/>
        <childnode refid="6034" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6036">
        <label>ObjectRef</label>
      </node>
      <node id="6035">
        <label>tvm::transform::PassContext</label>
        <link refid="classtvm_1_1transform_1_1PassContext"/>
        <childnode refid="6036" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/transform.h" line="133" column="1" bodyfile="include/tvm/ir/transform.h" bodystart="133" bodyend="185"/>
    <listofallmembers>
      <member refid="classtvm_1_1transform_1_1PassContext_1aacc7ca51bec83db2784d871bb324ce93" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>ContainerType</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1aabfad8965c2f4e7b6e4b0812652ddfd2" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>Create</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a4d21045965f6e5ea9338a1e8111af5fc" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>Current</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a26d07ec1df985c785cb76b589a9c6d5e" prot="private" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>EnterWithScope</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a38377fb960826c4e95b677859caf959f" prot="private" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>ExitWithScope</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a8bde6eb35df6b3a9f53810e0bc79fdfd" prot="private" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>Internal</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a69b8a7115988b2e8a77afc8e8f98aaa3" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1ab10baf6f7bcbd6e0e4b295399bc9f3a9" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a906dadb55586afece28d71d3436fdf1d" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>PassContext</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a8f5f511c2e29991eceff7b1f4883313e" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>PassContext</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a4cddf63528edf5b0554a13a1faa96f3f" prot="public" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>Trace</name></member>
      <member refid="classtvm_1_1transform_1_1PassContext_1a5f399608a6da56a5c91ea6ead8489f69" prot="private" virt="non-virtual"><scope>tvm::transform::PassContext</scope><name>With&lt; PassContext &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
