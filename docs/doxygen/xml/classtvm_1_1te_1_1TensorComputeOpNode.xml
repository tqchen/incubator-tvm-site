<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1te_1_1TensorComputeOpNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::te::TensorComputeOpNode</compoundname>
    <basecompoundref refid="classtvm_1_1te_1_1BaseComputeOpNode" prot="public" virt="non-virtual">tvm::te::BaseComputeOpNode</basecompoundref>
    <includes refid="operation_8h" local="no">operation.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1af9fbd1dbdccbfbef35a87137b6a1bee6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tvm::te::TensorComputeOpNode::schedulable_ndim</definition>
        <argsstring></argsstring>
        <name>schedulable_ndim</name>
        <briefdescription>
<para>number of axes that can be scheduled </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="288" column="1" bodyfile="include/tvm/te/operation.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1a29ad49d26c788d93489e0398be6804fd" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1te_1_1TensorIntrin" kindref="compound">TensorIntrin</ref></type>
        <definition>TensorIntrin tvm::te::TensorComputeOpNode::intrin</definition>
        <argsstring></argsstring>
        <name>intrin</name>
        <briefdescription>
<para><ref refid="classtvm_1_1te_1_1TensorIntrin" kindref="compound">TensorIntrin</ref> used to compute. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="290" column="1" bodyfile="include/tvm/te/operation.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1a81533c6957c82df59ef8d810ace1bed2" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>Array&lt;Tensor&gt; tvm::te::TensorComputeOpNode::inputs</definition>
        <argsstring></argsstring>
        <name>inputs</name>
        <briefdescription>
<para>input tensors of intrin </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="292" column="1" bodyfile="include/tvm/te/operation.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1a0afdf35c3bb7d6affd303c467099667f" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="namespacetvm_1_1tir_1a8277e2a3d81a80a4776705673df51e0a" kindref="member">Region</ref> &gt;</type>
        <definition>Array&lt;Region&gt; tvm::te::TensorComputeOpNode::input_regions</definition>
        <argsstring></argsstring>
        <name>input_regions</name>
        <briefdescription>
<para>region of input tensors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="294" column="1" bodyfile="include/tvm/te/operation.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1ae96efdee192da92765d2a64aff1f9999" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
        <definition>Array&lt;PrimExpr&gt; tvm::te::TensorComputeOpNode::scalar_inputs</definition>
        <argsstring></argsstring>
        <name>scalar_inputs</name>
        <briefdescription>
<para>scalar expression inputs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="296" column="1" bodyfile="include/tvm/te/operation.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1te_1_1TensorComputeOpNode_1a56f1970ff8d8aed622587a68534335e2" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::te::TensorComputeOpNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;TensorComputeOp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="338" column="1" bodyfile="include/tvm/te/operation.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a6448f522f6326aaed2d4137376c9fc78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::te::TensorComputeOpNode::TensorComputeOpNode</definition>
        <argsstring>()</argsstring>
        <name>TensorComputeOpNode</name>
        <briefdescription>
<para>constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="298" column="1" bodyfile="include/tvm/te/operation.h" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1afccdc3ad7b735d87f93dfecfc6f4021b" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>int</type>
        <definition>int tvm::te::TensorComputeOpNode::num_outputs</definition>
        <argsstring>() const final</argsstring>
        <name>num_outputs</name>
        <reimplements refid="classtvm_1_1tir_1_1FunctionBaseNode_1a86d8a47eb472945b01ab508c1ff94930">num_outputs</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of outputs of this function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a36de23d9964e78fb0adc8c6e4c7efa7f" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="namespacetvm_1a41918af1a1dc386388639a9d3ad06c5d" kindref="member">DataType</ref></type>
        <definition>DataType tvm::te::TensorComputeOpNode::output_dtype</definition>
        <argsstring>(size_t i) const final</argsstring>
        <name>output_dtype</name>
        <reimplements refid="classtvm_1_1te_1_1OperationNode_1a6bcb7f0c177c642d82a5a200d13369f0">output_dtype</reimplements>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get data type. i-th output tensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The output index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type of i-th output. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1aa08974f313719690d7db3f0f89e8db2e" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>Array&lt;Tensor&gt; tvm::te::TensorComputeOpNode::InputTensors</definition>
        <argsstring>() const final</argsstring>
        <name>InputTensors</name>
        <reimplements refid="classtvm_1_1te_1_1OperationNode_1a9675fbb905d62de5b86624388acec4b1">InputTensors</reimplements>
        <briefdescription>
<para>List all the input Tensors. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>List of input tensors. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1ad71a45eb73a872cd38e865e4800816db" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref></type>
        <definition>Operation tvm::te::TensorComputeOpNode::ReplaceInputs</definition>
        <argsstring>(const Operation &amp;self, const std::unordered_map&lt; Tensor, Tensor &gt; &amp;rmap) const final</argsstring>
        <name>ReplaceInputs</name>
        <reimplements refid="classtvm_1_1te_1_1OperationNode_1a9a876a433cfbe32215c3802ef520016e">ReplaceInputs</reimplements>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>, <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt; &amp;</type>
          <declname>rmap</declname>
        </param>
        <briefdescription>
<para>Replace the input of the operation by pattern specified by rmap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to self. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rmap</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement map. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>self if nothing is replaced, otherwise return replaced op. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1ad24f571d7120ea926f77226b9773edcb" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void tvm::te::TensorComputeOpNode::PropBoundToInputs</definition>
        <argsstring>(const Operation &amp;self, arith::Analyzer *analyzer, const std::unordered_map&lt; const VarNode *, IntSet &gt; &amp;dom_map, std::unordered_map&lt; Tensor, TensorDom &gt; *out_dom_map) const final</argsstring>
        <name>PropBoundToInputs</name>
        <reimplements refid="classtvm_1_1te_1_1OperationNode_1a3c32a93264e0d627d8389b703edcaf49">PropBoundToInputs</reimplements>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1arith_1_1Analyzer" kindref="compound">arith::Analyzer</ref> *</type>
          <declname>analyzer</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; const <ref refid="classtvm_1_1tir_1_1VarNode" kindref="compound">VarNode</ref> *, IntSet &gt; &amp;</type>
          <declname>dom_map</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref>, <ref refid="structtvm_1_1te_1_1TensorDom" kindref="compound">TensorDom</ref> &gt; *</type>
          <declname>out_dom_map</declname>
        </param>
        <briefdescription>
<para>Propagate the bounds to inputs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to self. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>analyzer</parametername>
</parameternamelist>
<parameterdescription>
<para>The analyzer to be used in the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dom_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain map of Variables(corresponds to root_iter_vars) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dom_map</parametername>
</parameternamelist>
<parameterdescription>
<para>The output domain. The function is only asked to fill the bounds for Tensors that is already in the out_dom_map </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a003be01f4aded57625d0c347b0f6ac73" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>Stmt tvm::te::TensorComputeOpNode::BuildProvide</definition>
        <argsstring>(const Stage &amp;stage, const std::unordered_map&lt; IterVar, Range &gt; &amp;dom_map, bool debug_keep_trivial_loop) const final</argsstring>
        <name>BuildProvide</name>
        <reimplements refid="classtvm_1_1te_1_1OperationNode_1a0a4a33f450e0e0890f59af9464c9015f">BuildProvide</reimplements>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Stage" kindref="compound">Stage</ref> &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref>, <ref refid="classtvm_1_1Range" kindref="compound">Range</ref> &gt; &amp;</type>
          <declname>dom_map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug_keep_trivial_loop</declname>
        </param>
        <briefdescription>
<para>Build the statement that provide the output tensors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>The schedule stage of the op. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dom_map</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain map of all iteration domains. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debug_keep_trivial_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether keep trivial loops with extent of 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A statement that add production and wraps consumer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a028a9ae8d9d27abd972b85248c9e3160" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t tvm::te::TensorComputeOpNode::num_schedulable_dims</definition>
        <argsstring>() const final</argsstring>
        <name>num_schedulable_dims</name>
        <reimplements refid="classtvm_1_1te_1_1BaseComputeOpNode_1afff057b90df28567ab7b2ba19a05b17c">num_schedulable_dims</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a55712c541cbbbeda5f8ea994a3eed680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::te::TensorComputeOpNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="317" column="1" bodyfile="include/tvm/te/operation.h" bodystart="317" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a7f18d3b3c0c0f06b1cfddecf580e9276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::te::TensorComputeOpNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(TensorComputeOpNode, BaseComputeOpNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1te_1_1TensorComputeOpNode" kindref="compound">TensorComputeOpNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1te_1_1BaseComputeOpNode" kindref="compound">BaseComputeOpNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="339" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1te_1_1TensorComputeOpNode_1a423dcba2238dd8b674b146cbe854ffd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Operation" kindref="compound">Operation</ref></type>
        <definition>static Operation tvm::te::TensorComputeOpNode::make</definition>
        <argsstring>(std::string name, std::string tag, Array&lt; IterVar &gt; axis, Array&lt; IterVar &gt; reduce_axis, int schedulable_ndim, TensorIntrin intrin, Array&lt; Tensor &gt; tensors, Array&lt; Region &gt; regions, Array&lt; PrimExpr &gt; scalar_inputs)</argsstring>
        <name>make</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref> &gt;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1IterVar" kindref="compound">IterVar</ref> &gt;</type>
          <declname>reduce_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>schedulable_ndim</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1te_1_1TensorIntrin" kindref="compound">TensorIntrin</ref></type>
          <declname>intrin</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="namespacetvm_1_1tir_1a8277e2a3d81a80a4776705673df51e0a" kindref="member">Region</ref> &gt;</type>
          <declname>regions</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> &gt;</type>
          <declname>scalar_inputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/te/operation.h" line="328" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A TenorCompute op that compute a tensor with an tensor intrinsic. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7147">
        <label>tvm::te::BaseComputeOpNode</label>
        <link refid="classtvm_1_1te_1_1BaseComputeOpNode"/>
        <childnode refid="7148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7150">
        <label>Object</label>
      </node>
      <node id="7148">
        <label>tvm::te::OperationNode</label>
        <link refid="classtvm_1_1te_1_1OperationNode"/>
        <childnode refid="7149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7146">
        <label>tvm::te::TensorComputeOpNode</label>
        <link refid="classtvm_1_1te_1_1TensorComputeOpNode"/>
        <childnode refid="7147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7149">
        <label>tvm::tir::FunctionBaseNode</label>
        <link refid="classtvm_1_1tir_1_1FunctionBaseNode"/>
        <childnode refid="7150" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7157">
        <label>ObjectRef</label>
      </node>
      <node id="7162">
        <label>tvm::te::TensorIntrin</label>
        <link refid="classtvm_1_1te_1_1TensorIntrin"/>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7160">
        <label>tvm::Array&lt; tvm::te::Tensor &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7152">
        <label>tvm::te::BaseComputeOpNode</label>
        <link refid="classtvm_1_1te_1_1BaseComputeOpNode"/>
        <childnode refid="7153" relation="public-inheritance">
        </childnode>
        <childnode refid="7158" relation="usage">
          <edgelabel>+axis</edgelabel>
          <edgelabel>+reduce_axis</edgelabel>
        </childnode>
      </node>
      <node id="7156">
        <label>tvm::Map&lt; std::string, ObjectRef &gt;</label>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7158">
        <label>tvm::Array&lt; tvm::tir::IterVar &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7155">
        <label>Object</label>
      </node>
      <node id="7161">
        <label>tvm::Array&lt; Array&lt; Range &gt; &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7153">
        <label>tvm::te::OperationNode</label>
        <link refid="classtvm_1_1te_1_1OperationNode"/>
        <childnode refid="7154" relation="public-inheritance">
        </childnode>
        <childnode refid="7156" relation="usage">
          <edgelabel>+attrs</edgelabel>
        </childnode>
      </node>
      <node id="7151">
        <label>tvm::te::TensorComputeOpNode</label>
        <link refid="classtvm_1_1te_1_1TensorComputeOpNode"/>
        <childnode refid="7152" relation="public-inheritance">
        </childnode>
        <childnode refid="7159" relation="usage">
          <edgelabel>+scalar_inputs</edgelabel>
        </childnode>
        <childnode refid="7160" relation="usage">
          <edgelabel>+inputs</edgelabel>
        </childnode>
        <childnode refid="7161" relation="usage">
          <edgelabel>+input_regions</edgelabel>
        </childnode>
        <childnode refid="7162" relation="usage">
          <edgelabel>+intrin</edgelabel>
        </childnode>
      </node>
      <node id="7154">
        <label>tvm::tir::FunctionBaseNode</label>
        <link refid="classtvm_1_1tir_1_1FunctionBaseNode"/>
        <childnode refid="7155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7159">
        <label>tvm::Array&lt; tvm::PrimExpr &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="7157" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/te/operation.h" line="285" column="1" bodyfile="include/tvm/te/operation.h" bodystart="285" bodyend="340"/>
    <listofallmembers>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a56f1970ff8d8aed622587a68534335e2" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1te_1_1OperationNode_1a009ebd67a59953ec9a587f9724afd538" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>attrs</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1a21617a643897727c51ded2b7260df4c3" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>axis</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a003be01f4aded57625d0c347b0f6ac73" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>BuildProvide</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1a0bd84e898355eb941318af78245ca103" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>BuildRealize</name></member>
      <member refid="classtvm_1_1te_1_1OperationNode_1a03b4cec709aed13088b1127a5f90c382" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>func_name</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1ad8c5908da3677e4c628f22d3f50c6da1" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>GatherBound</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a0afdf35c3bb7d6affd303c467099667f" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>input_regions</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a81533c6957c82df59ef8d810ace1bed2" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>inputs</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1aa08974f313719690d7db3f0f89e8db2e" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>InputTensors</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a29ad49d26c788d93489e0398be6804fd" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>intrin</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a423dcba2238dd8b674b146cbe854ffd0" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>make</name></member>
      <member refid="classtvm_1_1te_1_1OperationNode_1ad2fd6f140257f7b3c311f88374fa74d2" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>name</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1afccdc3ad7b735d87f93dfecfc6f4021b" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>num_outputs</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a028a9ae8d9d27abd972b85248c9e3160" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>num_schedulable_dims</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a36de23d9964e78fb0adc8c6e4c7efa7f" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>output_dtype</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1acdd22cc7c737d4dc8b6bf86d2f11a0db" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>output_shape</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1ad24f571d7120ea926f77226b9773edcb" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>PropBoundToInputs</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1ad0df643468fc148d80afd7116abdd2ac" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>reduce_axis</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1ad71a45eb73a872cd38e865e4800816db" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>ReplaceInputs</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1aab7b5b43122ee14bb00640906267361a" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>root_iter_vars</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1ae96efdee192da92765d2a64aff1f9999" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>scalar_inputs</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1af9fbd1dbdccbfbef35a87137b6a1bee6" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>schedulable_ndim</name></member>
      <member refid="classtvm_1_1te_1_1OperationNode_1ae6ac4336e7dc2df84f128fc97a6cdb9b" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>tag</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a6448f522f6326aaed2d4137376c9fc78" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>TensorComputeOpNode</name></member>
      <member refid="classtvm_1_1te_1_1BaseComputeOpNode_1ae942fa18ddac490a8b5022143b14cf11" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1te_1_1OperationNode_1a281dd659ac061a77c5783bd0e42324df" prot="public" virt="non-virtual" ambiguityscope="tvm::te::OperationNode::"><scope>tvm::te::TensorComputeOpNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a7f18d3b3c0c0f06b1cfddecf580e9276" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1te_1_1TensorComputeOpNode_1a55712c541cbbbeda5f8ea994a3eed680" prot="public" virt="non-virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>VisitAttrs</name></member>
      <member refid="classtvm_1_1tir_1_1FunctionBaseNode_1a03b2f3fdfc5ae82ca081cf988dac22e4" prot="public" virt="virtual"><scope>tvm::te::TensorComputeOpNode</scope><name>~FunctionBaseNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
