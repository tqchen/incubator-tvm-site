<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1LetNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::LetNode</compoundname>
    <basecompoundref refid="classtvm_1_1PrimExprNode" prot="public" virt="non-virtual">tvm::PrimExprNode</basecompoundref>
    <includes refid="tir_2expr_8h" local="no">expr.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetNode_1a21fdb9beb794933ee1094774ddfd2ee2" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref></type>
        <definition>Var tvm::tir::LetNode::var</definition>
        <argsstring></argsstring>
        <name>var</name>
        <briefdescription>
<para>The variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="873" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetNode_1a6284cce4e601ca740b528f8f60aad0f9" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::LetNode::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The value to be binded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="875" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="875" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetNode_1af5149b73b3b94ec379fcf879cc149338" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::LetNode::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>The result expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="877" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="877" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetNode_1a2f99e4a1bdf0c7832e9184a0746298b7" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::tir::LetNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;Let&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="903" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="903" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetNode_1aa152cd4cc5251565371c0ee9330f128f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::LetNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="879" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="879" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetNode_1ab1c9d795031c735d4d6526044b6b7007" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::LetNode::SEqualReduce</definition>
        <argsstring>(const LetNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LetNode" kindref="compound">LetNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="886" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="886" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetNode_1a5c26fcf996aac689188c3075d1286bed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::LetNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="894" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="894" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetNode_1a815217c289fc4caaf0c8bbe52d65a11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::LetNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(LetNode, PrimExprNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1LetNode" kindref="compound">LetNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExprNode" kindref="compound">PrimExprNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="904" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetNode_1a8932026cb45fa9c4f6c299d7154d4651" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>static PrimExpr tvm::tir::LetNode::make</definition>
        <argsstring>(Var var, PrimExpr value, PrimExpr body)</argsstring>
        <name>make</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref></type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/expr.h" line="901" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Let binding. Bind var to value then evaluate body. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5570">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="5571" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5571">
        <label>Object</label>
      </node>
      <node id="5568">
        <label>tvm::tir::LetNode</label>
        <link refid="classtvm_1_1tir_1_1LetNode"/>
        <childnode refid="5569" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5569">
        <label>tvm::PrimExprNode</label>
        <link refid="classtvm_1_1PrimExprNode"/>
        <childnode refid="5570" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5580">
        <label>ObjectRef</label>
      </node>
      <node id="5574">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="5575" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5575">
        <label>Object</label>
      </node>
      <node id="5578">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="5579" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5576">
        <label>tvm::runtime::DataType</label>
        <link refid="classtvm_1_1runtime_1_1DataType"/>
      </node>
      <node id="5579">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="5580" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5577">
        <label>tvm::tir::Var</label>
        <link refid="classtvm_1_1tir_1_1Var"/>
        <childnode refid="5578" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5572">
        <label>tvm::tir::LetNode</label>
        <link refid="classtvm_1_1tir_1_1LetNode"/>
        <childnode refid="5573" relation="public-inheritance">
        </childnode>
        <childnode refid="5577" relation="usage">
          <edgelabel>+var</edgelabel>
        </childnode>
        <childnode refid="5578" relation="usage">
          <edgelabel>+value</edgelabel>
          <edgelabel>+body</edgelabel>
        </childnode>
      </node>
      <node id="5573">
        <label>tvm::PrimExprNode</label>
        <link refid="classtvm_1_1PrimExprNode"/>
        <childnode refid="5574" relation="public-inheritance">
        </childnode>
        <childnode refid="5576" relation="usage">
          <edgelabel>+dtype</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/expr.h" line="870" column="1" bodyfile="include/tvm/tir/expr.h" bodystart="870" bodyend="905"/>
    <listofallmembers>
      <member refid="classtvm_1_1BaseExprNode_1a905dcf65204e877b6ccb977cf375f2a0" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a13d7d1f1e6f790951caf200cd59c3620" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a2f99e4a1bdf0c7832e9184a0746298b7" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1af5149b73b3b94ec379fcf879cc149338" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>body</name></member>
      <member refid="classtvm_1_1PrimExprNode_1a95af9234514ec5f11355db41524be7f9" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>dtype</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a8932026cb45fa9c4f6c299d7154d4651" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>make</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1ab1c9d795031c735d4d6526044b6b7007" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a5c26fcf996aac689188c3075d1286bed" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1PrimExprNode_1afcf4654378d65e0200b33e43194d0490" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a831794c879d47c30cdd9cefd4f05d533" prot="public" virt="non-virtual" ambiguityscope="tvm::BaseExprNode::"><scope>tvm::tir::LetNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a815217c289fc4caaf0c8bbe52d65a11e" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a6284cce4e601ca740b528f8f60aad0f9" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>value</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1a21fdb9beb794933ee1094774ddfd2ee2" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>var</name></member>
      <member refid="classtvm_1_1tir_1_1LetNode_1aa152cd4cc5251565371c0ee9330f128f" prot="public" virt="non-virtual"><scope>tvm::tir::LetNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
