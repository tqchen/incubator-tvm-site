<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1TypeData" kind="class" language="C++" prot="public">
    <compoundname>tvm::TypeData</compoundname>
    <basecompoundref refid="classtvm_1_1Type" prot="public" virt="non-virtual">tvm::Type</basecompoundref>
    <includes refid="ir_2adt_8h" local="no">adt.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1TypeData_1a0a98fd1095812379d2bd1337db1511c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::TypeData::TypeData</definition>
        <argsstring>(GlobalTypeVar header, Array&lt; TypeVar &gt; type_vars, Array&lt; Constructor &gt; constructors)</argsstring>
        <name>TypeData</name>
        <param>
          <type><ref refid="classtvm_1_1GlobalTypeVar" kindref="compound">GlobalTypeVar</ref></type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref> &gt;</type>
          <declname>type_vars</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref> &gt;</type>
          <declname>constructors</declname>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of ADT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>type variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constructors</parametername>
</parameternamelist>
<parameterdescription>
<para>constructors field. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/adt.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1TypeData_1aad5f3e2c63355439338b08a806e9e448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::TypeData::TVM_DEFINE_OBJECT_REF_METHODS</definition>
        <argsstring>(TypeData, Type, TypeDataNode)</argsstring>
        <name>TVM_DEFINE_OBJECT_REF_METHODS</name>
        <param>
          <type><ref refid="classtvm_1_1TypeData" kindref="compound">TypeData</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1Type" kindref="compound">Type</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1TypeDataNode" kindref="compound">TypeDataNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/adt.h" line="164" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores all data for an Algebraic Data <ref refid="classtvm_1_1Type" kindref="compound">Type</ref> (ADT). </para>    </briefdescription>
    <detaileddescription>
<para>In particular, it stores the handle (global type var) for an ADT and the constructors used to build it and is kept in the module. Note that type parameters are also indicated in the type data: this means that for any instance of an ADT, the type parameters must be indicated. That is, an ADT definition is treated as a type-level function, so an ADT handle must be wrapped in a <ref refid="classtvm_1_1TypeCall" kindref="compound">TypeCall</ref> node that instantiates the type-level arguments. The kind checker enforces this. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7390">
        <label>ObjectRef</label>
      </node>
      <node id="7388">
        <label>tvm::TypeData</label>
        <link refid="classtvm_1_1TypeData"/>
        <childnode refid="7389" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7389">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="7390" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7393">
        <label>ObjectRef</label>
      </node>
      <node id="7391">
        <label>tvm::TypeData</label>
        <link refid="classtvm_1_1TypeData"/>
        <childnode refid="7392" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7392">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="7393" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/adt.h" line="152" column="1" bodyfile="include/tvm/ir/adt.h" bodystart="152" bodyend="165"/>
    <listofallmembers>
      <member refid="classtvm_1_1TypeData_1aad5f3e2c63355439338b08a806e9e448" prot="public" virt="non-virtual"><scope>tvm::TypeData</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
      <member refid="classtvm_1_1Type_1a1188605b5afd297c39e614872a608a35" prot="public" virt="non-virtual" ambiguityscope="tvm::Type::"><scope>tvm::TypeData</scope><name>TVM_DEFINE_OBJECT_REF_METHODS</name></member>
      <member refid="classtvm_1_1TypeData_1a0a98fd1095812379d2bd1337db1511c1" prot="public" virt="non-virtual"><scope>tvm::TypeData</scope><name>TypeData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
