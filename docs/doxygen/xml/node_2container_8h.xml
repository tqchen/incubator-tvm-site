<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="node_2container_8h" kind="file" language="C++">
    <compoundname>container.h</compoundname>
    <includes refid="object_8h" local="no">tvm/runtime/object.h</includes>
    <includes refid="runtime_2memory_8h" local="no">tvm/runtime/memory.h</includes>
    <includes refid="packed__func_8h" local="no">tvm/runtime/packed_func.h</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">vector</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">string</includes>
    <includedby refid="bound_8h" local="no">include/tvm/arith/bound.h</includedby>
    <includedby refid="pattern_8h" local="no">include/tvm/arith/pattern.h</includedby>
    <includedby refid="ir_2adt_8h" local="no">include/tvm/ir/adt.h</includedby>
    <includedby refid="ir_2expr_8h" local="no">include/tvm/ir/expr.h</includedby>
    <includedby refid="include_2tvm_2ir_2transform_8h" local="no">include/tvm/ir/transform.h</includedby>
    <includedby refid="ir_2type_8h" local="no">include/tvm/ir/type.h</includedby>
    <includedby refid="node_8h" local="no">include/tvm/node/node.h</includedby>
    <includedby refid="structural__equal_8h" local="no">include/tvm/node/structural_equal.h</includedby>
    <includedby refid="structural__hash_8h" local="no">include/tvm/node/structural_hash.h</includedby>
    <includedby refid="feature_8h" local="no">include/tvm/relay/feature.h</includedby>
    <includedby refid="target_8h" local="no">include/tvm/target/target.h</includedby>
    <includedby refid="tensor_8h" local="no">include/tvm/te/tensor.h</includedby>
    <includedby refid="buffer_8h" local="no">include/tvm/tir/buffer.h</includedby>
    <includedby refid="tir_2expr_8h" local="no">include/tvm/tir/expr.h</includedby>
    <includedby refid="lowered__func_8h" local="no">include/tvm/tir/lowered_func.h</includedby>
    <incdepgraph>
      <node id="12172">
        <label>atomic</label>
      </node>
      <node id="12185">
        <label>functional</label>
      </node>
      <node id="12187">
        <label>limits</label>
      </node>
      <node id="12176">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12178" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12180" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
      </node>
      <node id="12175">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12176" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
        <childnode refid="12184" relation="include">
        </childnode>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12185" relation="include">
        </childnode>
        <childnode refid="12186" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12187" relation="include">
        </childnode>
        <childnode refid="12178" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
      </node>
      <node id="12163">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12172" relation="include">
        </childnode>
      </node>
      <node id="12167">
        <label>stdint.h</label>
      </node>
      <node id="12181">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12182" relation="include">
        </childnode>
        <childnode refid="12172" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
      </node>
      <node id="12170">
        <label>string</label>
      </node>
      <node id="12162">
        <label>include/tvm/node/container.h</label>
        <link refid="node/container.h"/>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
        <childnode refid="12180" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
      </node>
      <node id="12168">
        <label>stddef.h</label>
      </node>
      <node id="12186">
        <label>tuple</label>
      </node>
      <node id="12164">
        <label>dmlc/logging.h</label>
      </node>
      <node id="12179">
        <label>vector</label>
      </node>
      <node id="12177">
        <label>dmlc/io.h</label>
      </node>
      <node id="12165">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="12166" relation="include">
        </childnode>
        <childnode refid="12167" relation="include">
        </childnode>
        <childnode refid="12168" relation="include">
        </childnode>
      </node>
      <node id="12171">
        <label>utility</label>
      </node>
      <node id="12183">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="12174">
        <label>cstdlib</label>
      </node>
      <node id="12182">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
      </node>
      <node id="12180">
        <label>unordered_map</label>
      </node>
      <node id="12173">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12174" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
      </node>
      <node id="12184">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
      </node>
      <node id="12169">
        <label>type_traits</label>
      </node>
      <node id="12166">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="12178">
        <label>memory</label>
      </node>
      <node id="12188">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12268">
        <label>include/tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="12267" relation="include">
        </childnode>
        <childnode refid="12190" relation="include">
        </childnode>
      </node>
      <node id="12230">
        <label>topi/include/topi/nn/batch_matmul.h</label>
        <link refid="batch__matmul_8h"/>
      </node>
      <node id="12263">
        <label>include/tvm/relay/interpreter.h</label>
        <link refid="interpreter_8h"/>
      </node>
      <node id="12299">
        <label>include/tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="12248" relation="include">
        </childnode>
        <childnode refid="12266" relation="include">
        </childnode>
        <childnode refid="12297" relation="include">
        </childnode>
        <childnode refid="12288" relation="include">
        </childnode>
      </node>
      <node id="12220">
        <label>topi/include/topi/detail/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="12201" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
        <childnode refid="12208" relation="include">
        </childnode>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12202" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
        <childnode refid="12207" relation="include">
        </childnode>
        <childnode refid="12209" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
        <childnode refid="12226" relation="include">
        </childnode>
      </node>
      <node id="12289">
        <label>include/tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12244" relation="include">
        </childnode>
        <childnode refid="12271" relation="include">
        </childnode>
        <childnode refid="12242" relation="include">
        </childnode>
      </node>
      <node id="12191">
        <label>include/tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12239" relation="include">
        </childnode>
        <childnode refid="12244" relation="include">
        </childnode>
      </node>
      <node id="12257">
        <label>include/tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="12256" relation="include">
        </childnode>
        <childnode refid="12258" relation="include">
        </childnode>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12252" relation="include">
        </childnode>
      </node>
      <node id="12202">
        <label>topi/include/topi/rocm/injective.h</label>
        <link refid="rocm_2injective_8h"/>
      </node>
      <node id="12229">
        <label>topi/include/topi/detail/tensor_utils.h</label>
        <link refid="tensor__utils_8h"/>
        <childnode refid="12228" relation="include">
        </childnode>
      </node>
      <node id="12270">
        <label>include/tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="12247" relation="include">
        </childnode>
        <childnode refid="12262" relation="include">
        </childnode>
        <childnode refid="12271" relation="include">
        </childnode>
      </node>
      <node id="12209">
        <label>topi/include/topi/rocm/softmax.h</label>
        <link refid="rocm_2softmax_8h"/>
      </node>
      <node id="12278">
        <label>include/tvm/relay/attrs/nn.h</label>
        <link refid="include_2tvm_2relay_2attrs_2nn_8h"/>
      </node>
      <node id="12207">
        <label>topi/include/topi/rocm/reduction.h</label>
        <link refid="rocm_2reduction_8h"/>
      </node>
      <node id="12271">
        <label>include/tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="12242" relation="include">
        </childnode>
        <childnode refid="12250" relation="include">
        </childnode>
      </node>
      <node id="12244">
        <label>include/tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="12239" relation="include">
        </childnode>
      </node>
      <node id="12217">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="12302">
        <label>include/tvm/ir/env_func.h</label>
        <link refid="env__func_8h"/>
        <childnode refid="12253" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
      </node>
      <node id="12253">
        <label>include/tvm/ir/type_relation.h</label>
        <link refid="type__relation_8h"/>
        <childnode refid="12254" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
      </node>
      <node id="12226">
        <label>topi/include/topi/x86/injective.h</label>
        <link refid="x86_2injective_8h"/>
      </node>
      <node id="12234">
        <label>topi/include/topi/nn/flatten.h</label>
        <link refid="flatten_8h"/>
      </node>
      <node id="12232">
        <label>topi/include/topi/nn/dense.h</label>
        <link refid="nn_2dense_8h"/>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
      </node>
      <node id="12303">
        <label>include/tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="12298" relation="include">
        </childnode>
        <childnode refid="12301" relation="include">
        </childnode>
      </node>
      <node id="12243">
        <label>topi/include/topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="12212" relation="include">
        </childnode>
        <childnode refid="12211" relation="include">
        </childnode>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
        <childnode refid="12214" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
        <childnode refid="12217" relation="include">
        </childnode>
      </node>
      <node id="12195">
        <label>include/tvm/relay/qnn/transform.h</label>
        <link refid="include_2tvm_2relay_2qnn_2transform_8h"/>
      </node>
      <node id="12206">
        <label>topi/include/topi/cuda/reduction.h</label>
        <link refid="cuda_2reduction_8h"/>
        <childnode refid="12207" relation="include">
        </childnode>
      </node>
      <node id="12255">
        <label>include/tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="12256" relation="include">
        </childnode>
        <childnode refid="12257" relation="include">
        </childnode>
        <childnode refid="12258" relation="include">
        </childnode>
        <childnode refid="12259" relation="include">
        </childnode>
        <childnode refid="12260" relation="include">
        </childnode>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12261" relation="include">
        </childnode>
        <childnode refid="12262" relation="include">
        </childnode>
        <childnode refid="12263" relation="include">
        </childnode>
        <childnode refid="12264" relation="include">
        </childnode>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12252" relation="include">
        </childnode>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12233">
        <label>topi/include/topi/nn/dilate.h</label>
        <link refid="dilate_8h"/>
      </node>
      <node id="12267">
        <label>include/tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="12196" relation="include">
        </childnode>
      </node>
      <node id="12218">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="12228">
        <label>topi/include/topi/transform.h</label>
        <link refid="topi_2include_2topi_2transform_8h"/>
        <childnode refid="12218" relation="include">
        </childnode>
        <childnode refid="12214" relation="include">
        </childnode>
        <childnode refid="12217" relation="include">
        </childnode>
      </node>
      <node id="12280">
        <label>include/tvm/relay/attrs/vision.h</label>
        <link refid="vision_8h"/>
      </node>
      <node id="12285">
        <label>include/tvm/target/generic_func.h</label>
        <link refid="generic__func_8h"/>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12201" relation="include">
        </childnode>
        <childnode refid="12203" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
        <childnode refid="12208" relation="include">
        </childnode>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
        <childnode refid="12202" relation="include">
        </childnode>
        <childnode refid="12238" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
        <childnode refid="12207" relation="include">
        </childnode>
        <childnode refid="12209" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
        <childnode refid="12226" relation="include">
        </childnode>
      </node>
      <node id="12237">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi_2include_2topi_2nn_8h"/>
        <childnode refid="12215" relation="include">
        </childnode>
      </node>
      <node id="12287">
        <label>include/tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12268" relation="include">
        </childnode>
        <childnode refid="12245" relation="include">
        </childnode>
        <childnode refid="12288" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
        <childnode refid="12284" relation="include">
        </childnode>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12239" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
        <childnode refid="12290" relation="include">
        </childnode>
        <childnode refid="12291" relation="include">
        </childnode>
        <childnode refid="12271" relation="include">
        </childnode>
        <childnode refid="12242" relation="include">
        </childnode>
        <childnode refid="12293" relation="include">
        </childnode>
        <childnode refid="12294" relation="include">
        </childnode>
        <childnode refid="12296" relation="include">
        </childnode>
        <childnode refid="12292" relation="include">
        </childnode>
        <childnode refid="12250" relation="include">
        </childnode>
        <childnode refid="12243" relation="include">
        </childnode>
        <childnode refid="12295" relation="include">
        </childnode>
        <childnode refid="12213" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
      </node>
      <node id="12277">
        <label>include/tvm/relay/attrs/image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="12256">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type__functor_8h"/>
      </node>
      <node id="12286">
        <label>include/tvm/target/target_info.h</label>
        <link refid="target__info_8h"/>
      </node>
      <node id="12204">
        <label>topi/include/topi/cuda/pooling.h</label>
        <link refid="cuda_2pooling_8h"/>
        <childnode refid="12205" relation="include">
        </childnode>
      </node>
      <node id="12189">
        <label>include/tvm/node/container.h</label>
        <link refid="node/container.h"/>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12245" relation="include">
        </childnode>
        <childnode refid="12246" relation="include">
        </childnode>
        <childnode refid="12266" relation="include">
        </childnode>
        <childnode refid="12249" relation="include">
        </childnode>
        <childnode refid="12297" relation="include">
        </childnode>
        <childnode refid="12298" relation="include">
        </childnode>
        <childnode refid="12300" relation="include">
        </childnode>
        <childnode refid="12303" relation="include">
        </childnode>
        <childnode refid="12261" relation="include">
        </childnode>
        <childnode refid="12283" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
        <childnode refid="12287" relation="include">
        </childnode>
        <childnode refid="12293" relation="include">
        </childnode>
      </node>
      <node id="12216">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="12210">
        <label>topi/include/topi/detail/array_utils.h</label>
        <link refid="array__utils_8h"/>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
      </node>
      <node id="12214">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="12215" relation="include">
        </childnode>
        <childnode refid="12216" relation="include">
        </childnode>
        <childnode refid="12217" relation="include">
        </childnode>
      </node>
      <node id="12196">
        <label>include/tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12200" relation="include">
        </childnode>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12201" relation="include">
        </childnode>
        <childnode refid="12203" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
        <childnode refid="12208" relation="include">
        </childnode>
        <childnode refid="12210" relation="include">
        </childnode>
        <childnode refid="12211" relation="include">
        </childnode>
        <childnode refid="12219" relation="include">
        </childnode>
        <childnode refid="12220" relation="include">
        </childnode>
        <childnode refid="12227" relation="include">
        </childnode>
        <childnode refid="12229" relation="include">
        </childnode>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12230" relation="include">
        </childnode>
        <childnode refid="12218" relation="include">
        </childnode>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12232" relation="include">
        </childnode>
        <childnode refid="12233" relation="include">
        </childnode>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12235" relation="include">
        </childnode>
        <childnode refid="12236" relation="include">
        </childnode>
        <childnode refid="12216" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
        <childnode refid="12214" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
        <childnode refid="12202" relation="include">
        </childnode>
        <childnode refid="12238" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
        <childnode refid="12207" relation="include">
        </childnode>
        <childnode refid="12209" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
        <childnode refid="12217" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
        <childnode refid="12226" relation="include">
        </childnode>
      </node>
      <node id="12260">
        <label>include/tvm/relay/attrs/transform.h</label>
        <link refid="include_2tvm_2relay_2attrs_2transform_8h"/>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12252">
        <label>include/tvm/relay/pattern_functor.h</label>
        <link refid="pattern__functor_8h"/>
      </node>
      <node id="12288">
        <label>include/tvm/relay/base.h</label>
        <link refid="base_8h"/>
        <childnode refid="12257" relation="include">
        </childnode>
        <childnode refid="12272" relation="include">
        </childnode>
        <childnode refid="12274" relation="include">
        </childnode>
        <childnode refid="12277" relation="include">
        </childnode>
        <childnode refid="12278" relation="include">
        </childnode>
        <childnode refid="12260" relation="include">
        </childnode>
        <childnode refid="12280" relation="include">
        </childnode>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
      </node>
      <node id="12283">
        <label>include/tvm/target/target.h</label>
        <link refid="target_8h"/>
        <childnode refid="12241" relation="include">
        </childnode>
        <childnode refid="12263" relation="include">
        </childnode>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12284" relation="include">
        </childnode>
        <childnode refid="12285" relation="include">
        </childnode>
      </node>
      <node id="12241">
        <label>include/tvm/driver/driver_api.h</label>
        <link refid="driver__api_8h"/>
      </node>
      <node id="12269">
        <label>include/tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="12270" relation="include">
        </childnode>
        <childnode refid="12254" relation="include">
        </childnode>
        <childnode refid="12253" relation="include">
        </childnode>
        <childnode refid="12257" relation="include">
        </childnode>
        <childnode refid="12272" relation="include">
        </childnode>
        <childnode refid="12273" relation="include">
        </childnode>
        <childnode refid="12274" relation="include">
        </childnode>
        <childnode refid="12275" relation="include">
        </childnode>
        <childnode refid="12276" relation="include">
        </childnode>
        <childnode refid="12277" relation="include">
        </childnode>
        <childnode refid="12259" relation="include">
        </childnode>
        <childnode refid="12278" relation="include">
        </childnode>
        <childnode refid="12279" relation="include">
        </childnode>
        <childnode refid="12260" relation="include">
        </childnode>
        <childnode refid="12280" relation="include">
        </childnode>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
        <childnode refid="12281" relation="include">
        </childnode>
      </node>
      <node id="12190">
        <label>include/tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="12191" relation="include">
        </childnode>
      </node>
      <node id="12235">
        <label>topi/include/topi/nn/local_response_norm.h</label>
        <link refid="local__response__norm_8h"/>
      </node>
      <node id="12293">
        <label>include/tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="12241" relation="include">
        </childnode>
        <childnode refid="12284" relation="include">
        </childnode>
        <childnode refid="12242" relation="include">
        </childnode>
      </node>
      <node id="12231">
        <label>topi/include/topi/nn/bnn.h</label>
        <link refid="nn_2bnn_8h"/>
      </node>
      <node id="12248">
        <label>include/tvm/ir/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="12249" relation="include">
        </childnode>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12252" relation="include">
        </childnode>
      </node>
      <node id="12292">
        <label>include/tvm/tir/stmt_functor.h</label>
        <link refid="stmt__functor_8h"/>
      </node>
      <node id="12294">
        <label>include/tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
        <childnode refid="12290" relation="include">
        </childnode>
        <childnode refid="12295" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
      </node>
      <node id="12266">
        <label>include/tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="12267" relation="include">
        </childnode>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12268" relation="include">
        </childnode>
        <childnode refid="12245" relation="include">
        </childnode>
        <childnode refid="12246" relation="include">
        </childnode>
        <childnode refid="12269" relation="include">
        </childnode>
        <childnode refid="12270" relation="include">
        </childnode>
        <childnode refid="12247" relation="include">
        </childnode>
        <childnode refid="12254" relation="include">
        </childnode>
        <childnode refid="12282" relation="include">
        </childnode>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12283" relation="include">
        </childnode>
        <childnode refid="12286" relation="include">
        </childnode>
        <childnode refid="12287" relation="include">
        </childnode>
      </node>
      <node id="12203">
        <label>topi/include/topi/cuda/normalization.h</label>
        <link refid="cuda_2normalization_8h"/>
      </node>
      <node id="12208">
        <label>topi/include/topi/cuda/softmax.h</label>
        <link refid="cuda_2softmax_8h"/>
        <childnode refid="12209" relation="include">
        </childnode>
      </node>
      <node id="12219">
        <label>topi/include/topi/detail/extern.h</label>
        <link refid="detail_2extern_8h"/>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12200" relation="include">
        </childnode>
      </node>
      <node id="12262">
        <label>include/tvm/relay/function.h</label>
        <link refid="relay_2function_8h"/>
        <childnode refid="12258" relation="include">
        </childnode>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12249">
        <label>include/tvm/ir/transform.h</label>
        <link refid="include_2tvm_2ir_2transform_8h"/>
        <childnode refid="12194" relation="include">
        </childnode>
        <childnode refid="12250" relation="include">
        </childnode>
      </node>
      <node id="12225">
        <label>topi/include/topi/x86/default.h</label>
        <link refid="x86_2default_8h"/>
      </node>
      <node id="12240">
        <label>include/tvm/te/schedule_pass.h</label>
        <link refid="schedule__pass_8h"/>
        <childnode refid="12241" relation="include">
        </childnode>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12201" relation="include">
        </childnode>
        <childnode refid="12203" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
        <childnode refid="12208" relation="include">
        </childnode>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
      </node>
      <node id="12250">
        <label>include/tvm/tir/transform.h</label>
        <link refid="include_2tvm_2tir_2transform_8h"/>
      </node>
      <node id="12246">
        <label>include/tvm/ir/adt.h</label>
        <link refid="ir_2adt_8h"/>
        <childnode refid="12247" relation="include">
        </childnode>
        <childnode refid="12257" relation="include">
        </childnode>
      </node>
      <node id="12205">
        <label>topi/include/topi/rocm/pooling.h</label>
        <link refid="rocm_2pooling_8h"/>
      </node>
      <node id="12211">
        <label>topi/include/topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="12212" relation="include">
        </childnode>
      </node>
      <node id="12276">
        <label>include/tvm/relay/attrs/device_copy.h</label>
        <link refid="device__copy_8h"/>
      </node>
      <node id="12197">
        <label>topi/include/topi/contrib/cublas.h</label>
        <link refid="cublas_8h"/>
        <childnode refid="12198" relation="include">
        </childnode>
      </node>
      <node id="12296">
        <label>include/tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12271" relation="include">
        </childnode>
        <childnode refid="12293" relation="include">
        </childnode>
        <childnode refid="12294" relation="include">
        </childnode>
        <childnode refid="12292" relation="include">
        </childnode>
      </node>
      <node id="12199">
        <label>topi/include/topi/rocm/dense.h</label>
        <link refid="rocm_2dense_8h"/>
      </node>
      <node id="12201">
        <label>topi/include/topi/cuda/injective.h</label>
        <link refid="cuda_2injective_8h"/>
        <childnode refid="12202" relation="include">
        </childnode>
      </node>
      <node id="12300">
        <label>include/tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="12298" relation="include">
        </childnode>
        <childnode refid="12301" relation="include">
        </childnode>
      </node>
      <node id="12224">
        <label>topi/include/topi/x86/bnn.h</label>
        <link refid="x86_2bnn_8h"/>
      </node>
      <node id="12245">
        <label>include/tvm/arith/pattern.h</label>
        <link refid="pattern_8h"/>
      </node>
      <node id="12297">
        <label>include/tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="12246" relation="include">
        </childnode>
        <childnode refid="12266" relation="include">
        </childnode>
        <childnode refid="12247" relation="include">
        </childnode>
        <childnode refid="12254" relation="include">
        </childnode>
        <childnode refid="12282" relation="include">
        </childnode>
        <childnode refid="12253" relation="include">
        </childnode>
        <childnode refid="12265" relation="include">
        </childnode>
        <childnode refid="12294" relation="include">
        </childnode>
      </node>
      <node id="12242">
        <label>include/tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="12243" relation="include">
        </childnode>
        <childnode refid="12213" relation="include">
        </childnode>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12233" relation="include">
        </childnode>
        <childnode refid="12215" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
      </node>
      <node id="12215">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="12247">
        <label>include/tvm/ir/module.h</label>
        <link refid="ir_2module_8h"/>
        <childnode refid="12248" relation="include">
        </childnode>
        <childnode refid="12249" relation="include">
        </childnode>
        <childnode refid="12253" relation="include">
        </childnode>
        <childnode refid="12258" relation="include">
        </childnode>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12261" relation="include">
        </childnode>
        <childnode refid="12263" relation="include">
        </childnode>
      </node>
      <node id="12298">
        <label>include/tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="12246" relation="include">
        </childnode>
        <childnode refid="12266" relation="include">
        </childnode>
        <childnode refid="12299" relation="include">
        </childnode>
        <childnode refid="12297" relation="include">
        </childnode>
        <childnode refid="12288" relation="include">
        </childnode>
        <childnode refid="12287" relation="include">
        </childnode>
      </node>
      <node id="12265">
        <label>include/tvm/relay/type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="12257" relation="include">
        </childnode>
        <childnode refid="12258" relation="include">
        </childnode>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12264" relation="include">
        </childnode>
        <childnode refid="12192" relation="include">
        </childnode>
      </node>
      <node id="12221">
        <label>topi/include/topi/generic/default.h</label>
        <link refid="generic_2default_8h"/>
      </node>
      <node id="12279">
        <label>include/tvm/relay/attrs/reduce.h</label>
        <link refid="reduce_8h"/>
      </node>
      <node id="12212">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast_8h"/>
        <childnode refid="12213" relation="include">
        </childnode>
        <childnode refid="12218" relation="include">
        </childnode>
        <childnode refid="12214" relation="include">
        </childnode>
      </node>
      <node id="12259">
        <label>include/tvm/relay/attrs/memory.h</label>
        <link refid="relay_2attrs_2memory_8h"/>
      </node>
      <node id="12261">
        <label>include/tvm/relay/feature.h</label>
        <link refid="feature_8h"/>
      </node>
      <node id="12194">
        <label>include/tvm/relay/transform.h</label>
        <link refid="include_2tvm_2relay_2transform_8h"/>
        <childnode refid="12195" relation="include">
        </childnode>
      </node>
      <node id="12236">
        <label>topi/include/topi/nn/mapping.h</label>
        <link refid="mapping_8h"/>
      </node>
      <node id="12238">
        <label>topi/include/topi/rocm/normalization.h</label>
        <link refid="rocm_2normalization_8h"/>
      </node>
      <node id="12251">
        <label>include/tvm/relay/expr_functor.h</label>
        <link refid="relay_2expr__functor_8h"/>
      </node>
      <node id="12200">
        <label>topi/include/topi/contrib/rocblas.h</label>
        <link refid="rocblas_8h"/>
        <childnode refid="12199" relation="include">
        </childnode>
      </node>
      <node id="12254">
        <label>include/tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="12255" relation="include">
        </childnode>
        <childnode refid="12264" relation="include">
        </childnode>
      </node>
      <node id="12227">
        <label>topi/include/topi/detail/ravel_unravel.h</label>
        <link refid="ravel__unravel_8h"/>
        <childnode refid="12214" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
      </node>
      <node id="12291">
        <label>include/tvm/tir/expr_functor.h</label>
        <link refid="tir_2expr__functor_8h"/>
        <childnode refid="12292" relation="include">
        </childnode>
      </node>
      <node id="12222">
        <label>topi/include/topi/generic/extern.h</label>
        <link refid="generic_2extern_8h"/>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
      </node>
      <node id="12301">
        <label>include/tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="12302" relation="include">
        </childnode>
        <childnode refid="12298" relation="include">
        </childnode>
      </node>
      <node id="12295">
        <label>topi/include/topi/detail/pad_utils.h</label>
        <link refid="pad__utils_8h"/>
        <childnode refid="12215" relation="include">
        </childnode>
      </node>
      <node id="12192">
        <label>include/tvm/relay/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12198">
        <label>topi/include/topi/cuda/dense.h</label>
        <link refid="cuda_2dense_8h"/>
        <childnode refid="12199" relation="include">
        </childnode>
      </node>
      <node id="12223">
        <label>topi/include/topi/generic/injective.h</label>
        <link refid="generic_2injective_8h"/>
        <childnode refid="12222" relation="include">
        </childnode>
      </node>
      <node id="12275">
        <label>include/tvm/relay/attrs/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="12272">
        <label>include/tvm/relay/attrs/algorithm.h</label>
        <link refid="algorithm_8h"/>
      </node>
      <node id="12274">
        <label>include/tvm/relay/attrs/bitserial.h</label>
        <link refid="bitserial_8h"/>
      </node>
      <node id="12282">
        <label>include/tvm/ir/tensor_type.h</label>
        <link refid="tensor__type_8h"/>
        <childnode refid="12265" relation="include">
        </childnode>
      </node>
      <node id="12281">
        <label>include/tvm/relay/qnn/attrs.h</label>
        <link refid="relay_2qnn_2attrs_8h"/>
      </node>
      <node id="12239">
        <label>include/tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12240" relation="include">
        </childnode>
        <childnode refid="12242" relation="include">
        </childnode>
      </node>
      <node id="12284">
        <label>include/tvm/target/codegen.h</label>
        <link refid="codegen_8h"/>
      </node>
      <node id="12258">
        <label>include/tvm/relay/analysis.h</label>
        <link refid="analysis_8h"/>
      </node>
      <node id="12213">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="12214" relation="include">
        </childnode>
      </node>
      <node id="12264">
        <label>include/tvm/relay/op.h</label>
        <link refid="relay_2op_8h"/>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12252" relation="include">
        </childnode>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12193">
        <label>include/tvm/relay/op_strategy.h</label>
        <link refid="op__strategy_8h"/>
      </node>
      <node id="12273">
        <label>include/tvm/relay/attrs/annotation.h</label>
        <link refid="annotation_8h"/>
      </node>
      <node id="12290">
        <label>include/tvm/tir/data_layout.h</label>
        <link refid="data__layout_8h"/>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtvm_1_1ArrayNode" prot="public">tvm::ArrayNode</innerclass>
    <innerclass refid="classtvm_1_1MapNode" prot="public">tvm::MapNode</innerclass>
    <innerclass refid="classtvm_1_1StrMapNode" prot="public">tvm::StrMapNode</innerclass>
    <innerclass refid="classtvm_1_1IterAdapter" prot="public">tvm::IterAdapter</innerclass>
    <innerclass refid="classtvm_1_1Array" prot="public">tvm::Array</innerclass>
    <innerclass refid="structtvm_1_1Array_1_1ValueConverter" prot="public">tvm::Array::ValueConverter</innerclass>
    <innerclass refid="classtvm_1_1Map" prot="public">tvm::Map</innerclass>
    <innerclass refid="structtvm_1_1Map_1_1ValueConverter" prot="public">tvm::Map::ValueConverter</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4" prot="public">tvm::runtime::ObjectTypeChecker&lt; Array&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4" prot="public">tvm::runtime::ObjectTypeChecker&lt; Map&lt; K, V &gt; &gt;</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
    <innernamespace refid="namespacetvm_1_1runtime">tvm::runtime</innernamespace>
    <briefdescription>
<para>Array/Map container in the DSL graph. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">#ifndef<sp/>TVM_NODE_CONTAINER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_NODE_CONTAINER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="object_8h" kindref="compound">tvm/runtime/object.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="runtime_2memory_8h" kindref="compound">tvm/runtime/memory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="packed__func_8h" kindref="compound">tvm/runtime/packed_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>runtime::Object;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>runtime::ObjectPtr;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>runtime::ObjectRef;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1runtime_1a93466f4543eedc3925c66ed0e7ef2671" kindref="member">runtime::make_object</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>runtime::ObjectHash;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>runtime::ObjectEqual;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classtvm_1_1ArrayNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ObjectRef&gt;<sp/><ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classtvm_1_1ArrayNode_1af9cb38fb40d44e3351abb28c4042c43c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1ArrayNode_1af9cb38fb40d44e3351abb28c4042c43c" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Array&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1ArrayNode_1a70f730ac25dc44057db0fec77b58b297" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classtvm_1_1MapNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1MapNode_1a0d54038e74462216ea11a3a64ff694cd" kindref="member">ContainerType</ref><sp/>=<sp/>std::unordered_map&lt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectRef,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectRef,</highlight></codeline>
<codeline lineno="63" refid="classtvm_1_1MapNode_1a0d54038e74462216ea11a3a64ff694cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectHash,<sp/>ObjectEqual&gt;;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classtvm_1_1MapNode_1a5fe08f7ea603500f5f7ccc7e69979c78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1MapNode_1a0d54038e74462216ea11a3a64ff694cd" kindref="member">ContainerType</ref><sp/><ref refid="classtvm_1_1MapNode_1a5fe08f7ea603500f5f7ccc7e69979c78" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classtvm_1_1MapNode_1a789b3b6435184c1e01e6cb7e97e5e37d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1ArrayNode_1af9cb38fb40d44e3351abb28c4042c43c" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1ArrayNode_1a70f730ac25dc44057db0fec77b58b297" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classtvm_1_1StrMapNode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classtvm_1_1StrMapNode_1aecbcb8cc7967c9f4734621e7e6959a77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1StrMapNode_1aecbcb8cc7967c9f4734621e7e6959a77" kindref="member">ContainerType</ref><sp/>=<sp/>std::unordered_map&lt;std::string,<sp/>ObjectRef&gt;;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classtvm_1_1StrMapNode_1a2e0d7690f35ec6f99f850724c81e841f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1StrMapNode_1aecbcb8cc7967c9f4734621e7e6959a77" kindref="member">ContainerType</ref><sp/><ref refid="classtvm_1_1StrMapNode_1a2e0d7690f35ec6f99f850724c81e841f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classtvm_1_1StrMapNode_1accfa1041faca61e5ef9d77bbf3d73acb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtvm_1_1ArrayNode_1af9cb38fb40d44e3351abb28c4042c43c" kindref="member">_type_key</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StrMap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1ArrayNode_1a70f730ac25dc44057db0fec77b58b297" kindref="member">TVM_DECLARE_FINAL_OBJECT_INFO</ref>(<ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>,<sp/>Object);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Converter,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TIter&gt;</highlight></codeline>
<codeline lineno="93" refid="classtvm_1_1IterAdapter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classtvm_1_1IterAdapter_1a6fcccf32d94242ce3b0613db5bcd53d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a6fcccf32d94242ce3b0613db5bcd53d5" kindref="member">difference_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;TIter&gt;::difference_type;</highlight></codeline>
<codeline lineno="96" refid="classtvm_1_1IterAdapter_1a920384d7073ed15812199181625d857e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a920384d7073ed15812199181625d857e" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Converter::ResultType;</highlight></codeline>
<codeline lineno="97" refid="classtvm_1_1IterAdapter_1acdd89c4869bbb96d00fafd85ff3a3492" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1acdd89c4869bbb96d00fafd85ff3a3492" kindref="member">pointer</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Converter::ResultType*;</highlight></codeline>
<codeline lineno="98" refid="classtvm_1_1IterAdapter_1a02187b2d7b029d2f27c4d999b84f958d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a02187b2d7b029d2f27c4d999b84f958d" kindref="member">reference</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Converter::ResultType&amp;;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classtvm_1_1IterAdapter_1a2fa322bdb58941c57c6f25ea53678ed7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a2fa322bdb58941c57c6f25ea53678ed7" kindref="member">iterator_category</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;TIter&gt;::iterator_category;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classtvm_1_1IterAdapter_1a5b0e7480919d0179691292f053e8b58a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a5b0e7480919d0179691292f053e8b58a" kindref="member">IterAdapter</ref>(TIter<sp/>iter)<sp/>:<sp/>iter_(iter)<sp/>{}</highlight></codeline>
<codeline lineno="102" refid="classtvm_1_1IterAdapter_1a26651fc29c5a8b7d3902cec7c68978c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&amp;<sp/><ref refid="classtvm_1_1IterAdapter_1a26651fc29c5a8b7d3902cec7c68978c3" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="classtvm_1_1IterAdapter_1a632448e530261af4f8d20cd1c7d6f604" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref><sp/><ref refid="classtvm_1_1IterAdapter_1a632448e530261af4f8d20cd1c7d6f604" kindref="member">operator+</ref>(<ref refid="classtvm_1_1IterAdapter_1a6fcccf32d94242ce3b0613db5bcd53d5" kindref="member">difference_type</ref><sp/>offset)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>(iter_<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>IterAdapter&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_same&lt;iterator_category,<sp/>std::random_access_iterator_tag&gt;::value,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::difference_type&gt;::type</highlight></codeline>
<codeline lineno="113" refid="classtvm_1_1IterAdapter_1a730c42eead8dc1ae5b0d5dd8b6c749a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a730c42eead8dc1ae5b0d5dd8b6c749a9" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_<sp/>-<sp/>rhs.iter_;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classtvm_1_1IterAdapter_1a8bb0653979acc063862d800adb846d64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a8bb0653979acc063862d800adb846d64" kindref="member">operator==</ref>(<ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter_<sp/>==<sp/>other.iter_;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120" refid="classtvm_1_1IterAdapter_1adddb09d93d6148a0bd9a7763b5d603f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1adddb09d93d6148a0bd9a7763b5d603f6" kindref="member">operator!=</ref>(<ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123" refid="classtvm_1_1IterAdapter_1a19d48c13586d042b39484bf8bae24aca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter_1a920384d7073ed15812199181625d857e" kindref="member">value_type</ref><sp/><ref refid="classtvm_1_1IterAdapter_1a19d48c13586d042b39484bf8bae24aca" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Converter::convert(*iter_);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>TIter<sp/>iter_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_base_of&lt;ObjectRef,<sp/>T&gt;::value&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="141" refid="classtvm_1_1Array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1Array" kindref="compound">Array</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146" refid="classtvm_1_1Array_1aab72ecf006512069d8f791e3cae3eee0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1aab72ecf006512069d8f791e3cae3eee0" kindref="member">Array</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>make_object&lt;ArrayNode&gt;();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153" refid="classtvm_1_1Array_1a42ad68bcaefafa48967fa815cdb1e9fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1a42ad68bcaefafa48967fa815cdb1e9fe" kindref="member">Array</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>:<sp/>ObjectRef()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160" refid="classtvm_1_1Array_1a48ecf47f2a0bc8dfaddc8da83300deed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1a48ecf47f2a0bc8dfaddc8da83300deed" kindref="member">Array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref><sp/>&amp;other)<sp/>:<sp/>ObjectRef()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167" refid="classtvm_1_1Array_1abda937076918f8123b1fc62303a940a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1abda937076918f8123b1fc62303a940a4" kindref="member">Array</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="175" refid="classtvm_1_1Array_1a8e465f5428bc1189dfd6eaf7075bb96f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1a8e465f5428bc1189dfd6eaf7075bb96f" kindref="member">Array</ref>(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(begin,<sp/>end);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182" refid="classtvm_1_1Array_1a9cd4b1d4c96884994152797a15df7343" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1a9cd4b1d4c96884994152797a15df7343" kindref="member">Array</ref>(std::initializer_list&lt;T&gt;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189" refid="classtvm_1_1Array_1a92ba9f4611201b6bad1fb46f5944922e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array_1a92ba9f4611201b6bad1fb46f5944922e" kindref="member">Array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197" refid="classtvm_1_1Array_1ae409fb0a54ed7fb8c34b7b0445f88802" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1ae409fb0a54ed7fb8c34b7b0445f88802" kindref="member">Array</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp_node<sp/>=<sp/>make_object&lt;ArrayNode&gt;();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp_node-&gt;data.push_back(val);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(tmp_node);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209" refid="classtvm_1_1Array_1acf66932043c572cb9fec8813dbe5d596" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1Array_1acf66932043c572cb9fec8813dbe5d596" kindref="member">operator=</ref>(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218" refid="classtvm_1_1Array_1a06969623060ee1bb0e82ba7a43513450" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1Array_1a06969623060ee1bb0e82ba7a43513450" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;T&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>other.data_;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="229" refid="classtvm_1_1Array_1a5eebc9ddbd2e257d0586443b6d493df3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1a5eebc9ddbd2e257d0586443b6d493df3" kindref="member">assign</ref>(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>make_object&lt;ArrayNode&gt;();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IterType<sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;data.push_back(T(*it));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(n);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241" refid="classtvm_1_1Array_1afed60e692eab1b2511b07a2b20751878" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classtvm_1_1Array_1afed60e692eab1b2511b07a2b20751878" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;T&gt;(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.size();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258" refid="classtvm_1_1Array_1a8ebe3653e2bcef7481ab6264f7c231c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/><ref refid="classtvm_1_1Array_1a8ebe3653e2bcef7481ab6264f7c231c8" kindref="member">CopyOnWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!data_.unique())<sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;ArrayNode&gt;<sp/>n<sp/>=<sp/>make_object&lt;ArrayNode&gt;();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;Object&gt;(std::move(n)).swap(data_);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270" refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>item)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/>n<sp/>=<sp/>this-&gt;CopyOnWrite();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.push_back(item);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278" refid="classtvm_1_1Array_1a8303345e666f9c72586721bc067e7fc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1a8303345e666f9c72586721bc067e7fc9" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/>n<sp/>=<sp/>this-&gt;CopyOnWrite();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.resize(size);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287" refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1ab3db968deb4be7a51767f22d267eb7af" kindref="member">Set</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/>n<sp/>=<sp/>this-&gt;CopyOnWrite();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292" refid="classtvm_1_1Array_1a531169863918d8464aa4b905d236674f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1a531169863918d8464aa4b905d236674f" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="302" refid="classtvm_1_1Array_1abb864921139827a886c8fec5b7796041" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array_1abb864921139827a886c8fec5b7796041" kindref="member">MutateByApply</ref>(F<sp/>fmutate)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.unique())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>on<sp/>write<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>inplace<sp/>update<sp/>because<sp/>this<sp/>is<sp/>an<sp/>unique<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>to<sp/>use<sp/>move<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>prevent<sp/>the<sp/>element&apos;s<sp/>ref<sp/>count<sp/>from<sp/>increasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>fmutate<sp/>itself<sp/>can<sp/>perform<sp/>copy-on-write<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>old_elem<sp/>=<sp/>DowncastNoCheck&lt;T&gt;(std::move(ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>new_elem<sp/>=<sp/>fmutate(std::move(old_elem));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]<sp/>=<sp/>std::move(new_elem);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lazily<sp/>trigger<sp/>copy<sp/>if<sp/>there<sp/>is<sp/>element<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;ArrayNode&gt;<sp/>copy;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>old_elem<sp/>=<sp/>DowncastNoCheck&lt;T&gt;(ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>new_elem<sp/>=<sp/>fmutate(old_elem);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_elem.same_as(ptr-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>[i]))<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>old<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>runtime::make_object&lt;ArrayNode&gt;(*ptr);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy-&gt;data[i]<sp/>=<sp/>std::move(new_elem);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>the<sp/>data<sp/>with<sp/>the<sp/>new<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(copy);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classtvm_1_1Array_1ab85f7f463f8a418f6b4dcffdf43b007c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="structtvm_1_1Array_1_1ValueConverter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1Array_1_1ValueConverter" kindref="compound">ValueConverter</ref><sp/>{</highlight></codeline>
<codeline lineno="341" refid="structtvm_1_1Array_1_1ValueConverter_1a27595671e0540369dd58f6a49622b3c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1Array_1_1ValueConverter_1a27595671e0540369dd58f6a49622b3c2" kindref="member">ResultType</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="342" refid="structtvm_1_1Array_1_1ValueConverter_1a0401a5aec9c7fa5f4d4388a835528434" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structtvm_1_1Array_1_1ValueConverter_1a0401a5aec9c7fa5f4d4388a835528434" kindref="member">convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectRef&amp;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;T&gt;(n);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&lt;<ref refid="structtvm_1_1Array_1_1ValueConverter" kindref="compound">ValueConverter</ref>,</highlight></codeline>
<codeline lineno="347" refid="classtvm_1_1Array_1a82550eb5257293ba5af8866aa8ff16e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ObjectRef&gt;::const_iterator&gt;;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">reverse_iterator</ref><sp/>=<sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&lt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueConverter,</highlight></codeline>
<codeline lineno="351" refid="classtvm_1_1Array_1a6b71ab5c7c8c2abffe81a0ea3842fd1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ObjectRef&gt;::const_reverse_iterator&gt;;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classtvm_1_1Array_1a5db0d3faad39ca865162e50d555a25fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/><ref refid="classtvm_1_1Array_1a5db0d3faad39ca865162e50d555a25fa" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>ArrayNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.begin());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358" refid="classtvm_1_1Array_1a6f05e6a14eca3ea865da0f293b4a5325" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/><ref refid="classtvm_1_1Array_1a6f05e6a14eca3ea865da0f293b4a5325" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>ArrayNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.end());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362" refid="classtvm_1_1Array_1ad9e24a3208ffabbc079db08804a6f602" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">reverse_iterator</ref><sp/><ref refid="classtvm_1_1Array_1ad9e24a3208ffabbc079db08804a6f602" kindref="member">rbegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">reverse_iterator</ref>(static_cast&lt;const<sp/>ArrayNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.rbegin());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366" refid="classtvm_1_1Array_1adc2c5ea9dacd9a1fae22c409a39007b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">reverse_iterator</ref><sp/><ref refid="classtvm_1_1Array_1adc2c5ea9dacd9a1fae22c409a39007b8" kindref="member">rend</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">reverse_iterator</ref>(static_cast&lt;const<sp/>ArrayNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.rend());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;ObjectRef,<sp/>K&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;std::string,<sp/>K&gt;::value<sp/>&gt;::type,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_base_of&lt;ObjectRef,<sp/>V&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="386" refid="classtvm_1_1Map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1Map" kindref="compound">Map</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="391" refid="classtvm_1_1Map_1a3c4b1ad987313584daca3c58724dddf5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1a3c4b1ad987313584daca3c58724dddf5" kindref="member">Map</ref>()<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>make_object&lt;MapNode&gt;();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398" refid="classtvm_1_1Map_1a58ada92864cf1d2cf8cb57444feaed9b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1a58ada92864cf1d2cf8cb57444feaed9b" kindref="member">Map</ref>(<ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405" refid="classtvm_1_1Map_1aa552c0ed42255384f95f341871458d7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1aa552c0ed42255384f95f341871458d7a" kindref="member">Map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref><sp/>&amp;other)<sp/>:<sp/>ObjectRef(other.data_)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411" refid="classtvm_1_1Map_1ad2f79c81a070cd75a1dc934bafd59916" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1ad2f79c81a070cd75a1dc934bafd59916" kindref="member">Map</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="419" refid="classtvm_1_1Map_1a37cda7c1e644cba140276d8b8690655e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1a37cda7c1e644cba140276d8b8690655e" kindref="member">Map</ref>(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(begin,<sp/>end);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426" refid="classtvm_1_1Map_1ae56d036579f1bc05367f511ecb1e95da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1ae56d036579f1bc05367f511ecb1e95da" kindref="member">Map</ref>(std::initializer_list&lt;std::pair&lt;K,<sp/>V&gt;<sp/>&gt;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Hash,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Equal&gt;</highlight></codeline>
<codeline lineno="434" refid="classtvm_1_1Map_1a13a270f095bad489247edf8e0d15f9c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map_1a13a270f095bad489247edf8e0d15f9c9" kindref="member">Map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;K,<sp/>V,<sp/>Hash,<sp/>Equal&gt;&amp;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442" refid="classtvm_1_1Map_1acf11920f50d9a6283cd2f1ed9985bfca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1Map_1acf11920f50d9a6283cd2f1ed9985bfca" kindref="member">operator=</ref>(<ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451" refid="classtvm_1_1Map_1a4572b0679e99399dc42e139d3d773349" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref>&amp;<sp/><ref refid="classtvm_1_1Map_1a4572b0679e99399dc42e139d3d773349" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;K, V&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>other.data_;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="462" refid="classtvm_1_1Map_1a7733c37bc18f3df529e3b2fdc01a072f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1a7733c37bc18f3df529e3b2fdc01a072f" kindref="member">assign</ref>(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>ObjectPtr&lt;MapNode&gt;<sp/>n<sp/>=<sp/>make_object&lt;MapNode&gt;();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IterType<sp/>i<sp/>=<sp/>begin;<sp/>i<sp/>!=<sp/>end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;data.emplace(std::make_pair(i-&gt;first,<sp/>i-&gt;second));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(n);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474" refid="classtvm_1_1Map_1ac12a408b9dad9e7309aa12002b217fce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/><ref refid="classtvm_1_1Map_1ac12a408b9dad9e7309aa12002b217fce" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;V&gt;(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.at(key));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483" refid="classtvm_1_1Map_1aa95a8fa173498e69eceba1aec8e49aba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/><ref refid="classtvm_1_1Map_1aa95a8fa173498e69eceba1aec8e49aba" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;V&gt;(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.at(key));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488" refid="classtvm_1_1Map_1aef62a3d36a718533366951bec5b64880" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1aef62a3d36a718533366951bec5b64880" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.size();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493" refid="classtvm_1_1Map_1a0e225214f7d7b360f2e73796abe7992a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1a0e225214f7d7b360f2e73796abe7992a" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.count(key);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505" refid="classtvm_1_1Map_1a0398bb9f0d33835a07f187d7e052b34d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*<sp/><ref refid="classtvm_1_1Map_1a0398bb9f0d33835a07f187d7e052b34d" kindref="member">CopyOnWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!data_.unique())<sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;MapNode&gt;<sp/>n<sp/>=<sp/>make_object&lt;MapNode&gt;();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1MapNode_1a5fe08f7ea603500f5f7ccc7e69979c78" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;Object&gt;(std::move(n)).swap(data_);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518" refid="classtvm_1_1Map_1a01b57ff1ef565738f8ab391a5e4d5f7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1a01b57ff1ef565738f8ab391a5e4d5f7d" kindref="member">Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*<sp/>n<sp/>=<sp/>this-&gt;CopyOnWrite();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1MapNode_1a5fe08f7ea603500f5f7ccc7e69979c78" kindref="member">data</ref>[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classtvm_1_1Map_1a7f5b744e65b40aca81a167cec715ec2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map_1a7f5b744e65b40aca81a167cec715ec2a" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528" refid="classtvm_1_1Map_1a032205a9ae4e6f2d945837e7185b3d1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1MapNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="structtvm_1_1Map_1_1ValueConverter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1Map_1_1ValueConverter" kindref="compound">ValueConverter</ref><sp/>{</highlight></codeline>
<codeline lineno="531" refid="structtvm_1_1Map_1_1ValueConverter_1afd4a4c5a243014ccfebb48fb18ad8588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1Map_1_1ValueConverter_1afd4a4c5a243014ccfebb48fb18ad8588" kindref="member">ResultType</ref><sp/>=<sp/>std::pair&lt;K,<sp/>V&gt;;</highlight></codeline>
<codeline lineno="532" refid="structtvm_1_1Map_1_1ValueConverter_1a82c6961ccf2b833396ff8742506bd32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1Map_1_1ValueConverter_1afd4a4c5a243014ccfebb48fb18ad8588" kindref="member">ResultType</ref><sp/><ref refid="structtvm_1_1Map_1_1ValueConverter_1a82c6961ccf2b833396ff8742506bd32a" kindref="member">convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectRef,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectRef&gt;&amp;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(DowncastNoCheck&lt;K&gt;(n.first),</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DowncastNoCheck&lt;V&gt;(n.second));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&lt;</highlight></codeline>
<codeline lineno="541" refid="classtvm_1_1Map_1ac692b6c03df9de0b1d49f719bf659ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueConverter,<sp/>MapNode::ContainerType::const_iterator&gt;;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="classtvm_1_1Map_1abd05e398b026981426bce7c45c51e0aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/><ref refid="classtvm_1_1Map_1abd05e398b026981426bce7c45c51e0aa" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>MapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.begin());</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="548" refid="classtvm_1_1Map_1a0b475776d062f8fc32842e054d5674bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/><ref refid="classtvm_1_1Map_1a0b475776d062f8fc32842e054d5674bd" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>MapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.end());</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552" refid="classtvm_1_1Map_1a73c0a4bda4da7adceebe743274a9d7a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/><ref refid="classtvm_1_1Map_1a73c0a4bda4da7adceebe743274a9d7a8" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;const<sp/>MapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.find(key));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specialize<sp/>of<sp/>string<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>&lt;std::string,<sp/>V,<sp/>T1,<sp/>T2&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ObjectRef<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>code<sp/>reuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>()<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>make_object&lt;StrMapNode&gt;();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(<ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref><sp/>&amp;other)<sp/>:<sp/>ObjectRef(other.data_)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(ObjectPtr&lt;Object&gt;<sp/>n)<sp/>:<sp/>ObjectRef(n)<sp/>{}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(begin,<sp/>end);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(std::initializer_list&lt;std::pair&lt;std::string,<sp/>V&gt;<sp/>&gt;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Hash,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Equal&gt;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>V,<sp/>Hash,<sp/>Equal&gt;&amp;<sp/>init)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(init.begin(),<sp/>init.end());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref>&amp;<sp/>operator=(<ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(other.data_);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;std::string, V&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>other.data_;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterType&gt;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(IterType<sp/>begin,<sp/>IterType<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>make_object&lt;StrMapNode&gt;();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IterType<sp/>i<sp/>=<sp/>begin;<sp/>i<sp/>!=<sp/>end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;data.emplace(std::make_pair(i-&gt;first,<sp/>i-&gt;second));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>std::move(n);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;V&gt;(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.at(key));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V<sp/>at(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DowncastNoCheck&lt;V&gt;(</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.at(key));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.size();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.count(key);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*<sp/>CopyOnWrite()<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!data_.unique())<sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;StrMapNode&gt;<sp/>n<sp/>=<sp/>make_object&lt;StrMapNode&gt;();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1StrMapNode_1a2e0d7690f35ec6f99f850724c81e841f" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ObjectPtr&lt;Object&gt;(std::move(n)).swap(data_);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.get());</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>V&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*<sp/>n<sp/>=<sp/>this-&gt;CopyOnWrite();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="classtvm_1_1StrMapNode_1a2e0d7690f35ec6f99f850724c81e841f" kindref="member">data</ref>[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1MapNode" kindref="compound">ContainerType</ref><sp/>=<sp/><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ValueConverter<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ResultType<sp/>=<sp/>std::pair&lt;std::string,<sp/>V&gt;;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ResultType<sp/>convert(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectRef&gt;&amp;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(n.first,<sp/>DowncastNoCheck&lt;V&gt;(n.second));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">IterAdapter</ref>&lt;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueConverter,<sp/>StrMapNode::ContainerType::const_iterator&gt;;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>StrMapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.begin());</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>StrMapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.end());</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref><sp/>find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IterAdapter" kindref="compound">iterator</ref>(static_cast&lt;const<sp/>StrMapNode*&gt;(data_.get())-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>.find(key));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal">};</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">runtime<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>overloads<sp/>for<sp/>PackedFunc<sp/>checking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="664" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker</ref>&lt;<ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt;T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="665" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4_1add60b83f5e77c1d9016b65898bcbfe69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4_1add60b83f5e77c1d9016b65898bcbfe69" kindref="member">Check</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" kindref="member">IsInstance</ref>&lt;<ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>&gt;())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*<sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1ArrayNode" kindref="compound">ArrayNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/>n-&gt;<ref refid="classtvm_1_1ArrayNode_1a4bb8934345a35142365c296caac04e8f" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;T&gt;::Check</ref>(p.get()))<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="676" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4_1aab22b555cfe16d040c204527c73a3287" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Array_3_01T_01_4_01_4_1aab22b555cfe16d040c204527c73a3287" kindref="member">TypeName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;List[&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;T&gt;::TypeName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">};</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker</ref>&lt;Map&lt;std::string,<sp/>V&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" kindref="member">IsInstance</ref>&lt;<ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>&gt;())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*<sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1StrMapNode" kindref="compound">StrMapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>n-&gt;<ref refid="classtvm_1_1StrMapNode_1a2e0d7690f35ec6f99f850724c81e841f" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;V&gt;::Check</ref>(kv.second.get()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>TypeName()<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Map[str,<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;V&gt;::TypeName</ref>()+<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal">};</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="699" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker</ref>&lt;Map&lt;K,<sp/>V&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="700" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4_1a66cc223f8e80086a6396540546b07eed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4_1a66cc223f8e80086a6396540546b07eed" kindref="member">Check</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr-&gt;<ref refid="classtvm_1_1runtime_1_1Object_1af1359ebff2c328ff0bb80083937c95dd" kindref="member">IsInstance</ref>&lt;<ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>&gt;())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*<sp/>n<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1MapNode" kindref="compound">MapNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>n-&gt;<ref refid="classtvm_1_1MapNode_1a5fe08f7ea603500f5f7ccc7e69979c78" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;K&gt;::Check</ref>(kv.first.get()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;V&gt;::Check</ref>(kv.second.get()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710" refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4_1a9cb994fc6604ad2c287d9e824e67d2e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker_3_01Map_3_01K_00_01V_01_4_01_4_1a9cb994fc6604ad2c287d9e824e67d2e2" kindref="member">TypeName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Map[&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;K&gt;::TypeName</ref>()<sp/>+</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtvm_1_1runtime_1_1ObjectTypeChecker" kindref="compound">ObjectTypeChecker&lt;V&gt;::TypeName</ref>()+<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">};</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_NODE_CONTAINER_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/node/container.h"/>
  </compounddef>
</doxygen>
