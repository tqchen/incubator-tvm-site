<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1relay_1_1ExprMutator" kind="class" language="C++" prot="public">
    <compoundname>tvm::relay::ExprMutator</compoundname>
    <basecompoundref refid="classtvm_1_1relay_1_1ExprFunctor" prot="public" virt="non-virtual">tvm::relay::ExprFunctor&lt; Expr(const Expr &amp;)&gt;</basecompoundref>
    <includes refid="relay_2expr__functor_8h" local="no">expr_functor.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtvm_1_1relay_1_1ExprMutator_1a68f3d44397b6070a2ed39f8425b36d3b" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref>, <ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref>, ObjectHash, ObjectEqual &gt;</type>
        <definition>std::unordered_map&lt;Expr, Expr, ObjectHash, ObjectEqual&gt; tvm::relay::ExprMutator::memo_</definition>
        <argsstring></argsstring>
        <name>memo_</name>
        <briefdescription>
<para>Internal map used for memoization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="232" column="1" bodyfile="include/tvm/relay/expr_functor.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ab8d4855c77e09d2274716ca2bbcf0a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::Mutate</definition>
        <argsstring>(const Expr &amp;expr)</argsstring>
        <name>Mutate</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Mutate is alias for VisitExpr. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>expr. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="199" column="1" bodyfile="include/tvm/relay/expr_functor.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1af64fcd37bf18a71a7a5f0eb58a9b9eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr</definition>
        <argsstring>(const Expr &amp;expr) override</argsstring>
        <name>VisitExpr</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ad84a1bcfeb97ec4816579d2363cd76a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const VarNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1VarNode" kindref="compound">VarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1aa7b993f25c157507d57b9c2718f2621e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const ConstantNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1ConstantNode" kindref="compound">ConstantNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1af5e80e31b1e5cc39176f7e9a14c623e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const GlobalVarNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1afe7144195dbbc914183189444ef6a347" kindref="member">GlobalVarNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a07acf48b6c03fdd45f6fee3595358646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const OpNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1ac9d4f2cf78a48659817a88d890e1d142" kindref="member">OpNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a568baaf4dd295369b950e7bcb248e32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const TupleNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1TupleNode" kindref="compound">TupleNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ad9e6cf40a15c931b4ad2891528c0e946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const FunctionNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1FunctionNode" kindref="compound">FunctionNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1affe6bbbc8d394c8a0f4c459c6ae09e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const CallNode *call_node) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1CallNode" kindref="compound">CallNode</ref> *</type>
          <declname>call_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ae8e1f8512f277d0e2f0390ccad48b565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const LetNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1LetNode" kindref="compound">LetNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a8db108ba710993fafaf4c116d17c83af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const IfNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1IfNode" kindref="compound">IfNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a0e70f362b6aeca9688344e5d135457d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const TupleGetItemNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1TupleGetItemNode" kindref="compound">TupleGetItemNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ac22fb8d0001bb57b4dd4a796f32d4517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const RefCreateNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1RefCreateNode" kindref="compound">RefCreateNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a139d2a36b9a3b4cb3c2d80ec09ff645b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const RefReadNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1RefReadNode" kindref="compound">RefReadNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a03a4b48a2cdcf642f4cf3b9d55064f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const RefWriteNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1RefWriteNode" kindref="compound">RefWriteNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ad696a60de733dcaa29fedb963853a510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const ConstructorNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a6b95f70a9b44cc1c96593201594d1345" kindref="member">ConstructorNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a927deef048b9b870193117c09567c767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetvm_1_1relay_1a5b84e3790f89bb3fad5c7911eeb99531" kindref="member">Expr</ref></type>
        <definition>Expr tvm::relay::ExprMutator::VisitExpr_</definition>
        <argsstring>(const MatchNode *op) override</argsstring>
        <name>VisitExpr_</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1MatchNode" kindref="compound">MatchNode</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ab4db31bc25fab94a92283b7291f1c178" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref></type>
        <definition>virtual Type tvm::relay::ExprMutator::VisitType</definition>
        <argsstring>(const Type &amp;t)</argsstring>
        <name>VisitType</name>
        <param>
          <type>const <ref refid="namespacetvm_1_1relay_1a661d95f170bca230773914caeef3fe52" kindref="member">Type</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Used to visit the types inside of expressions. </para>        </briefdescription>
        <detaileddescription>
<para>Can be overloaded to transform the types in arbitrary ways, one way would be to define a sub-class of type visitor for types which transform them appropriately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1ae24134355b0e8c77aaab58c28a94202a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classtvm_1_1relay_1_1Clause" kindref="compound">Clause</ref></type>
        <definition>virtual Clause tvm::relay::ExprMutator::VisitClause</definition>
        <argsstring>(const Clause &amp;c)</argsstring>
        <name>VisitClause</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1Clause" kindref="compound">Clause</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1relay_1_1ExprMutator_1a18cefc9bf699954cba7546f914779415" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classtvm_1_1relay_1_1Pattern" kindref="compound">Pattern</ref></type>
        <definition>virtual Pattern tvm::relay::ExprMutator::VisitPattern</definition>
        <argsstring>(const Pattern &amp;c)</argsstring>
        <name>VisitPattern</name>
        <param>
          <type>const <ref refid="classtvm_1_1relay_1_1Pattern" kindref="compound">Pattern</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/expr_functor.h" line="228" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A wrapper around <ref refid="classtvm_1_1relay_1_1ExprFunctor" kindref="compound">ExprFunctor</ref> which functionally updates the AST. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classtvm_1_1relay_1_1ExprMutator" kindref="compound">ExprMutator</ref> treats Expr as dataflow graph, and only Mutate each Expr once. The mutated results are memoized in a map and reused so that local transformation on the dataflow preserves the graph structure. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4989">
        <label>tvm::relay::ExprMutator</label>
        <link refid="classtvm_1_1relay_1_1ExprMutator"/>
        <childnode refid="4990" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4990">
        <label>tvm::relay::ExprFunctor&lt; Expr(const Expr &amp;)&gt;</label>
        <link refid="classtvm_1_1relay_1_1ExprFunctor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4991">
        <label>tvm::relay::ExprMutator</label>
        <link refid="classtvm_1_1relay_1_1ExprMutator"/>
        <childnode refid="4992" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4992">
        <label>tvm::relay::ExprFunctor&lt; Expr(const Expr &amp;)&gt;</label>
        <link refid="classtvm_1_1relay_1_1ExprFunctor"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/relay/expr_functor.h" line="193" column="1" bodyfile="include/tvm/relay/expr_functor.h" bodystart="192" bodyend="233"/>
    <listofallmembers>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a68f3d44397b6070a2ed39f8425b36d3b" prot="protected" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>memo_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ab8d4855c77e09d2274716ca2bbcf0a86" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>Mutate</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ae24134355b0e8c77aaab58c28a94202a" prot="public" virt="virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitClause</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1af64fcd37bf18a71a7a5f0eb58a9b9eba" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ad84a1bcfeb97ec4816579d2363cd76a1" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1aa7b993f25c157507d57b9c2718f2621e" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1af5e80e31b1e5cc39176f7e9a14c623e6" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a07acf48b6c03fdd45f6fee3595358646" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a568baaf4dd295369b950e7bcb248e32f" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ad9e6cf40a15c931b4ad2891528c0e946" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1affe6bbbc8d394c8a0f4c459c6ae09e8f" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ae8e1f8512f277d0e2f0390ccad48b565" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a8db108ba710993fafaf4c116d17c83af" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a0e70f362b6aeca9688344e5d135457d5" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ac22fb8d0001bb57b4dd4a796f32d4517" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a139d2a36b9a3b4cb3c2d80ec09ff645b" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a03a4b48a2cdcf642f4cf3b9d55064f53" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ad696a60de733dcaa29fedb963853a510" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a927deef048b9b870193117c09567c767" prot="public" virt="non-virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitExpr_</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1a18cefc9bf699954cba7546f914779415" prot="public" virt="virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitPattern</name></member>
      <member refid="classtvm_1_1relay_1_1ExprMutator_1ab4db31bc25fab94a92283b7291f1c178" prot="public" virt="virtual"><scope>tvm::relay::ExprMutator</scope><name>VisitType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
