<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1BaseValueHash" kind="class" language="C++" prot="public">
    <compoundname>tvm::BaseValueHash</compoundname>
    <derivedcompoundref refid="classtvm_1_1StructuralHash" prot="public" virt="non-virtual">tvm::StructuralHash</derivedcompoundref>
    <includes refid="structural__hash_8h" local="no">structural_hash.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1ae5264c45c41cfbb82d8944d6b7402f8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const double &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const double &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="39" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1a75e98fc026241cf33f36ec817e73f503" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const int64_t &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="43" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1a7e2db7c92be284347da2bc7736c2f0b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const uint64_t &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="47" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1af88eb7061b7d5db3ce7a045a331df9fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const int &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const int &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="51" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1a0878f3a6a7e9633e9b36c995a365e49d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const bool &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const bool &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="55" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1a5d95cf4c946c882342eb33133cf02c2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const std::string &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="59" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1ab695a0b7131118a9083229b18966d9e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tvm::BaseValueHash::operator()</definition>
        <argsstring>(const runtime::DataType &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">runtime::DataType</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="63" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1BaseValueHash_1a3e26f78c0d21151d09a84b625445e081" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ENum</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_enum&lt;ENum&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool tvm::BaseValueHash::operator()</definition>
        <argsstring>(const ENum &amp;key) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const ENum &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/node/structural_hash.h" line="72" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hash definition of base value classes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4381">
        <label>tvm::BaseValueHash</label>
        <link refid="classtvm_1_1BaseValueHash"/>
      </node>
      <node id="4382">
        <label>tvm::StructuralHash</label>
        <link refid="classtvm_1_1StructuralHash"/>
        <childnode refid="4381" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4383">
        <label>tvm::BaseValueHash</label>
        <link refid="classtvm_1_1BaseValueHash"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/node/structural_hash.h" line="37" column="1" bodyfile="include/tvm/node/structural_hash.h" bodystart="37" bodyend="75"/>
    <listofallmembers>
      <member refid="classtvm_1_1BaseValueHash_1ae5264c45c41cfbb82d8944d6b7402f8a" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1a75e98fc026241cf33f36ec817e73f503" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1a7e2db7c92be284347da2bc7736c2f0b4" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1af88eb7061b7d5db3ce7a045a331df9fc" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1a0878f3a6a7e9633e9b36c995a365e49d" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1a5d95cf4c946c882342eb33133cf02c2a" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1ab695a0b7131118a9083229b18966d9e7" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
      <member refid="classtvm_1_1BaseValueHash_1a3e26f78c0d21151d09a84b625445e081" prot="public" virt="non-virtual"><scope>tvm::BaseValueHash</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
