<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacetopi_1_1contrib" kind="namespace" language="C++">
    <compoundname>topi::contrib</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetopi_1_1contrib_1ac8dd65fd0460aa0e6045940fd22849df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor topi::contrib::cublas_matmul</definition>
        <argsstring>(const Tensor &amp;lhs, const Tensor &amp;rhs, bool transa, bool transb)</argsstring>
        <name>cublas_matmul</name>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transa</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transb</declname>
        </param>
        <briefdescription>
<para>Create an op that multiplies lhs and rhs with cuBLAS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The left matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transa</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose lhs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transb</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose rhs</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output tensor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/contrib/cublas.h" line="45" column="1" bodyfile="topi/include/topi/contrib/cublas.h" bodystart="45" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1contrib_1ae4f4c081cd2c1efa544752edcad0a3a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor topi::contrib::cublas_batch_matmul</definition>
        <argsstring>(const Tensor &amp;lhs, const Tensor &amp;rhs, bool transa, bool transb)</argsstring>
        <name>cublas_batch_matmul</name>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transa</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transb</declname>
        </param>
        <briefdescription>
<para>Create an op that multiplies batch matrices lhs and rhs with cuBLAS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The left matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transa</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose lhs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transb</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose rhs</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output tensor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/contrib/cublas.h" line="76" column="1" bodyfile="topi/include/topi/contrib/cublas.h" bodystart="76" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacetopi_1_1contrib_1aa120dd31a4165d9f554da02fdf419d78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor topi::contrib::rocblas_matmul</definition>
        <argsstring>(const Tensor &amp;lhs, const Tensor &amp;rhs, bool transa, bool transb)</argsstring>
        <name>rocblas_matmul</name>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transa</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transb</declname>
        </param>
        <briefdescription>
<para>Create an op that multiplies lhs and rhs with rocBLAS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The left matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right matrix operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transa</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose lhs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transb</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to transpose rhs</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output tensor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/contrib/rocblas.h" line="44" column="1" bodyfile="topi/include/topi/contrib/rocblas.h" bodystart="44" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topi/include/topi/contrib/cublas.h" line="31" column="1"/>
  </compounddef>
</doxygen>
