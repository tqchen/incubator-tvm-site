<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="topi_2include_2topi_2nn_8h" kind="file" language="C++">
    <compoundname>nn.h</compoundname>
    <includes refid="tags_8h" local="no">topi/tags.h</includes>
    <includes refid="constant__utils_8h" local="no">topi/detail/constant_utils.h</includes>
    <includes refid="tir_2expr_8h" local="no">tvm/tir/expr.h</includes>
    <includes refid="ir__pass_8h" local="no">tvm/tir/ir_pass.h</includes>
    <includes refid="tir_2op_8h" local="no">tvm/tir/op.h</includes>
    <includes refid="operation_8h" local="no">tvm/te/operation.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includedby refid="nn_2pooling_8h" local="no">topi/include/topi/nn/pooling.h</includedby>
    <incdepgraph>
      <node id="13754">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
      </node>
      <node id="13747">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13713" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13722">
        <label>atomic</label>
      </node>
      <node id="13758">
        <label>tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13756" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13752">
        <label>tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13753" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13756" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13736">
        <label>functional</label>
      </node>
      <node id="13738">
        <label>limits</label>
      </node>
      <node id="13761">
        <label>tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13762" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13727">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="13728" relation="include">
        </childnode>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13723" relation="include">
        </childnode>
        <childnode refid="13729" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13726" relation="include">
        </childnode>
      </node>
      <node id="13726">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="13719" relation="include">
        </childnode>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13727" relation="include">
        </childnode>
        <childnode refid="13732" relation="include">
        </childnode>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13736" relation="include">
        </childnode>
        <childnode refid="13737" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13738" relation="include">
        </childnode>
        <childnode refid="13729" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13740">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="13719" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13760">
        <label>tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="13761" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13758" relation="include">
        </childnode>
        <childnode refid="13755" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13757">
        <label>tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="13752" relation="include">
        </childnode>
        <childnode refid="13758" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13718">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="13719" relation="include">
        </childnode>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13722" relation="include">
        </childnode>
      </node>
      <node id="13716">
        <label>stdint.h</label>
      </node>
      <node id="13732">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13733" relation="include">
        </childnode>
        <childnode refid="13722" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13743">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13740" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13736" relation="include">
        </childnode>
      </node>
      <node id="13711">
        <label>topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13750" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
      </node>
      <node id="13767">
        <label>tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="13759" relation="include">
        </childnode>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13754" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13729" relation="include">
        </childnode>
        <childnode refid="13738" relation="include">
        </childnode>
      </node>
      <node id="13708">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi/include/topi/nn.h"/>
        <childnode refid="13709" relation="include">
        </childnode>
        <childnode refid="13711" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13750" relation="include">
        </childnode>
        <childnode refid="13756" relation="include">
        </childnode>
        <childnode refid="13766" relation="include">
        </childnode>
        <childnode refid="13749" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13712">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="13713" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13740" relation="include">
        </childnode>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13749" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13745" relation="include">
        </childnode>
        <childnode refid="13738" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13710">
        <label>string</label>
      </node>
      <node id="13763">
        <label>dmlc/common.h</label>
      </node>
      <node id="13744">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="13740" relation="include">
        </childnode>
        <childnode refid="13745" relation="include">
        </childnode>
      </node>
      <node id="13741">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13723" relation="include">
        </childnode>
        <childnode refid="13726" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13742" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13765">
        <label>unordered_set</label>
      </node>
      <node id="13766">
        <label>tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="13767" relation="include">
        </childnode>
        <childnode refid="13752" relation="include">
        </childnode>
        <childnode refid="13751" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13756" relation="include">
        </childnode>
        <childnode refid="13758" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
      </node>
      <node id="13717">
        <label>stddef.h</label>
      </node>
      <node id="13762">
        <label>tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="13763" relation="include">
        </childnode>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13726" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13736" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13753">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13746" relation="include">
        </childnode>
        <childnode refid="13754" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13755" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
      </node>
      <node id="13764">
        <label>tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13755" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13756">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="13748" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13755" relation="include">
        </childnode>
        <childnode refid="13749" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13738" relation="include">
        </childnode>
      </node>
      <node id="13746">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13713" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13747" relation="include">
        </childnode>
        <childnode refid="13748" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13749" relation="include">
        </childnode>
        <childnode refid="13738" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13737">
        <label>tuple</label>
      </node>
      <node id="13719">
        <label>dmlc/logging.h</label>
      </node>
      <node id="13755">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13730">
        <label>vector</label>
      </node>
      <node id="13739">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13740" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13728">
        <label>dmlc/io.h</label>
      </node>
      <node id="13714">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="13715" relation="include">
        </childnode>
        <childnode refid="13716" relation="include">
        </childnode>
        <childnode refid="13717" relation="include">
        </childnode>
      </node>
      <node id="13748">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13713" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13747" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13750">
        <label>tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="13751" relation="include">
        </childnode>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13758" relation="include">
        </childnode>
        <childnode refid="13760" relation="include">
        </childnode>
        <childnode refid="13764" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
        <childnode refid="13765" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13721">
        <label>utility</label>
      </node>
      <node id="13713">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13723" relation="include">
        </childnode>
        <childnode refid="13725" relation="include">
        </childnode>
        <childnode refid="13744" relation="include">
        </childnode>
        <childnode refid="13741" relation="include">
        </childnode>
        <childnode refid="13739" relation="include">
        </childnode>
        <childnode refid="13743" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13734">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="13724">
        <label>cstdlib</label>
      </node>
      <node id="13745">
        <label>iostream</label>
      </node>
      <node id="13733">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="13728" relation="include">
        </childnode>
        <childnode refid="13734" relation="include">
        </childnode>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13732" relation="include">
        </childnode>
      </node>
      <node id="13731">
        <label>unordered_map</label>
      </node>
      <node id="13725">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13723" relation="include">
        </childnode>
        <childnode refid="13726" relation="include">
        </childnode>
        <childnode refid="13732" relation="include">
        </childnode>
        <childnode refid="13735" relation="include">
        </childnode>
        <childnode refid="13739" relation="include">
        </childnode>
        <childnode refid="13743" relation="include">
        </childnode>
        <childnode refid="13730" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13723">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="13718" relation="include">
        </childnode>
        <childnode refid="13724" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13735">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="13714" relation="include">
        </childnode>
        <childnode refid="13719" relation="include">
        </childnode>
        <childnode refid="13720" relation="include">
        </childnode>
      </node>
      <node id="13759">
        <label>tvm/support/with.h</label>
        <link refid="with_8h"/>
        <childnode refid="13719" relation="include">
        </childnode>
        <childnode refid="13721" relation="include">
        </childnode>
      </node>
      <node id="13720">
        <label>type_traits</label>
      </node>
      <node id="13749">
        <label>algorithm</label>
      </node>
      <node id="13709">
        <label>topi/tags.h</label>
        <link refid="tags_8h"/>
        <childnode refid="13710" relation="include">
        </childnode>
      </node>
      <node id="13715">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="13751">
        <label>tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="13712" relation="include">
        </childnode>
        <childnode refid="13752" relation="include">
        </childnode>
        <childnode refid="13757" relation="include">
        </childnode>
        <childnode refid="13759" relation="include">
        </childnode>
        <childnode refid="13710" relation="include">
        </childnode>
        <childnode refid="13731" relation="include">
        </childnode>
      </node>
      <node id="13729">
        <label>memory</label>
      </node>
      <node id="13742">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13768">
        <label>topi/include/topi/nn.h</label>
        <link refid="topi/include/topi/nn.h"/>
        <childnode refid="13769" relation="include">
        </childnode>
      </node>
      <node id="13769">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetopi">topi</innernamespace>
    <briefdescription>
<para>NN op constructions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TOPI_NN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_NN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tags_8h" kindref="compound">topi/tags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="constant__utils_8h" kindref="compound">topi/detail/constant_utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2expr_8h" kindref="compound">tvm/tir/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ir__pass_8h" kindref="compound">tvm/tir/ir_pass.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tir_2op_8h" kindref="compound">tvm/tir/op.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="operation_8h" kindref="compound">tvm/te/operation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetopi" kindref="compound">topi</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm_1_1te" kindref="compound">tvm::te</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref>&amp;<sp/>exprs,<sp/>T<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>CHECK_GE(exprs.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref><sp/>res<sp/>=<sp/>exprs[0];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>exprs.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>op(res,<sp/>exprs[i]);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65" refid="namespacetopi_1a10d042035b5084fc91bff8ae4f1b0d86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a10d042035b5084fc91bff8ae4f1b0d86" kindref="member">relu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>threshold<sp/>=<sp/>static_cast&lt;T&gt;(0),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_relu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref>&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>threshold_const<sp/>=<sp/>tvm::tir::make_const(t-&gt;dtype,<sp/>threshold);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tvm::max(t(i),<sp/>threshold_const);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespacetopi_1a21006707a9f93d8b2771b5a10668419f" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a21006707a9f93d8b2771b5a10668419f" kindref="member">leaky_relu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_leaky_relu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref>&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>value<sp/>=<sp/>t(i);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>calpha<sp/>=<sp/>tvm::tir::make_const(value.dtype(),<sp/>alpha);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tvm::tir::SelectNode::make(value<sp/>&gt;<sp/>0,<sp/>value,<sp/>value<sp/>*<sp/>calpha);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="namespacetopi_1ab86aad9c64d4739dc541d87ee3904f9b" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1ab86aad9c64d4739dc541d87ee3904f9b" kindref="member">prelu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/>&amp;x,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/>&amp;slope,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_prelu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a794b9155e9ba9d1c9c42a1cff1fb645f" kindref="member">kBroadcast</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>CHECK((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)axis<sp/>&lt;<sp/>x-&gt;<ref refid="namespacetopi_1a649c66231bc50f3ed98ac8bb6b6e2518" kindref="member">shape</ref>.size())<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>axis<sp/>(&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>axis<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)value.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>CHECK(topi::detail::GetConstInt(slope-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0])<sp/>==</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topi::detail::GetConstInt(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[axis]))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>slope<sp/>shape<sp/>received.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(x-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref><sp/>&amp;indices)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>xval<sp/>=<sp/>x(indices);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tvm::tir::SelectNode::make(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xval<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xval,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xval<sp/>*<sp/>slope(indices[axis]));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref>&amp;<sp/>pad_before,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>pad_after<sp/>=<sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref>(),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref><sp/>pad_value<sp/>=<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref>(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_pad&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1ac1b34ed59d38a5f5338bee6b2cad42be" kindref="member">kElementWise</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pad_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;constant&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pad_after.size()<sp/>&lt;<sp/>pad_before.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>pad_after.size();<sp/>i<sp/>&lt;<sp/>pad_before.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad_after.push_back(pad_before[i]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>CHECK_GE(pad_before.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>CHECK_EQ(pad_before.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>pad_after.size());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>pad_before_int32;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>pad_after_int32;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ele<sp/>:<sp/>pad_before)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_before_int32.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1aa058caeda9deceda3d6ffeda347be442" kindref="member">tvm::cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">tvm::DataType::Int</ref>(32),<sp/>ele));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ele<sp/>:<sp/>pad_after)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_after_int32.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1aa058caeda9deceda3d6ffeda347be442" kindref="member">tvm::cast</ref>(<ref refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" kindref="member">tvm::DataType::Int</ref>(32),<sp/>ele));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>pad_before.size())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_shape.push_back(t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_shape.push_back(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>(t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i]<sp/>+<sp/>pad_before_int32[i]<sp/>+<sp/>pad_after_int32[i]));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pad_value.defined())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>pad_value<sp/>=<sp/><ref refid="namespacetvm_1_1tir_1a4ea566597880d04bd62fbec687e338b5" kindref="member">tvm::tir::make_const</ref>(t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a4c0b6e32a09ab6ea6b869de45394294d" kindref="member">dtype</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref><sp/>ovars)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>indices;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>sel;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>pad_idx;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>pad_before_int32.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(ovars[i]);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!topi::detail::EqualCheck(pad_before_int32[i],<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(ovars[i]<sp/>&gt;=<sp/>pad_before_int32[i]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(ovars[i]<sp/>-<sp/>pad_before_int32[i]);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(ovars[i]);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!topi::detail::EqualCheck(pad_after_int32[i],<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1_1tir_1a923d1bb833c984008772782e90cda37a" kindref="member">tvm::tir::Simplify</ref>(ovars[i]<sp/>&lt;<sp/>pad_before_int32[i]<sp/>+<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i]));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pad_mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_idx.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovars[i]<sp/>&lt;<sp/>pad_before[i],</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(ovars[i]<sp/>&gt;=<sp/>pad_before[i]<sp/>+<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i],</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i]<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovars[i]<sp/>-<sp/>pad_before[i])));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pad_mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;reflect&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_idx.<ref refid="classtvm_1_1Array_1a24d5ac1f6730d46cb1a6d16729f0a7bb" kindref="member">push_back</ref>(<ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovars[i]<sp/>&lt;<sp/>pad_before[i],</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_before[i]<sp/>-<sp/>ovars[i],</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(ovars[i]<sp/>&gt;=<sp/>pad_before[i]<sp/>+<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i],</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[i]<sp/>*<sp/>2<sp/>-<sp/>ovars[i]<sp/>+<sp/>pad_before[i]<sp/>-<sp/>2,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovars[i]<sp/>-<sp/>pad_before[i])));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sel.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pad_mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;constant&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">detail::Map</ref>(sel,<sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tvm::tir::AndNode::make</ref>),<sp/>t(indices),<sp/>pad_value);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pad_mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal"><sp/>||<sp/>pad_mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;reflect&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ad400409d87dc337f8b5fe13e18d363f9" kindref="member">tvm::if_then_else</ref>(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Map" kindref="compound">detail::Map</ref>(sel,<sp/><ref refid="classtvm_1_1tir_1_1AndNode_1aeb51390ed2566af9393d94d915e56d50" kindref="member">tvm::tir::AndNode::make</ref>),<sp/>t(indices),<sp/>t(pad_idx));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t(indices);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="namespacetopi_1a8a735444c0de6d147a021755033b64dd" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a8a735444c0de6d147a021755033b64dd" kindref="member">conv2d_nchw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>I,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_h<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_w<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_h<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_w<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_conv2d_nchw&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a8e842c3723b0ad6b2fb82ecb98b8a1c2" kindref="member">kConv2dNCHW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pH<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pW<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>+<sp/>2<sp/>*<sp/>pad_h,<sp/>stride_h)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>+<sp/>2<sp/>*<sp/>pad_w,<sp/>stride_w)<sp/>+<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]},<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]},<sp/></highlight><highlight class="stringliteral">&quot;kh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]},<sp/></highlight><highlight class="stringliteral">&quot;kw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(pad_h<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pad_w<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>I</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(I,<sp/>{<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/>pad_h,<sp/>pad_w});</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>b,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>o,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>h,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T(b,<sp/>i,<sp/>stride_h<sp/>*<sp/>h<sp/>+<sp/>kh,<sp/>stride_w<sp/>*<sp/>w<sp/>+<sp/>kw)<sp/>*<sp/>W(o,<sp/>i,<sp/>kh,<sp/>kw),</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i,<sp/>kh,<sp/>kw});</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="namespacetopi_1a727438671ef6d05e50edb4b01d556da8" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a727438671ef6d05e50edb4b01d556da8" kindref="member">conv2d_hwcn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>I,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_h<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_w<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_h<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_w<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_conv2d_hwcn&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a0a63c3748ea82acd5eef2b608c83e165" kindref="member">kConv2dHWCN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pH<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pW<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>+<sp/>2<sp/>*<sp/>pad_h,<sp/>stride_h)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>+<sp/>2<sp/>*<sp/>pad_w,<sp/>stride_w)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]},<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0]},<sp/></highlight><highlight class="stringliteral">&quot;kh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]},<sp/></highlight><highlight class="stringliteral">&quot;kw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(pad_h<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pad_w<sp/>==<sp/>0)<sp/>?<sp/>I<sp/>:<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(I,<sp/>{pad_h,<sp/>pad_w});</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>b,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>o,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>h,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T(stride_h<sp/>*<sp/>h<sp/>+<sp/>kh,<sp/>stride_w<sp/>*<sp/>w<sp/>+<sp/>kw,<sp/>i,<sp/>b)<sp/>*<sp/>W(kh,<sp/>kw,<sp/>i,<sp/>o),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i,<sp/>kh,<sp/>kw});</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="namespacetopi_1a8f9fd494ac9bbb4d174d758b447037d3" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a8f9fd494ac9bbb4d174d758b447037d3" kindref="member">depthwise_conv2d_nchw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>I,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_h<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_w<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_h<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_w<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_depthwise_conv2d_nchw&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a12dcb067885b89c536ae094569e8e3fb" kindref="member">kDepthwiseConv2dNCHW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pH<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pW<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pCM<sp/>=<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1];<sp/><sp/></highlight><highlight class="comment">//<sp/>channel_multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>+<sp/>2<sp/>*<sp/>pad_h,<sp/>stride_h)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>+<sp/>2<sp/>*<sp/>pad_w,<sp/>stride_w)<sp/>+<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]},<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]},<sp/></highlight><highlight class="stringliteral">&quot;kh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]},<sp/></highlight><highlight class="stringliteral">&quot;kw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(pad_h<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pad_w<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>I</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(I,<sp/>{<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/>pad_h,<sp/>pad_w});</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>b,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>o,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>h,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(T(b,<sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(i,<sp/>pCM),<sp/>stride_h<sp/>*<sp/>h<sp/>+<sp/>kh,<sp/>stride_w<sp/>*<sp/>w<sp/>+<sp/>kw)<sp/>*</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(<ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(i,<sp/>pCM),<sp/><ref refid="namespacetvm_1a857781b7243b2f90018f7fe6baf9c30e" kindref="member">indexmod</ref>(o,<sp/>pCM),<sp/>kh,<sp/>kw),</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i,<sp/>kh,<sp/>kw});</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="namespacetopi_1a3bc090c96d064609982d155da4c7a9d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1a3bc090c96d064609982d155da4c7a9d9" kindref="member">depthwise_conv2d_nhwc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>I,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_h<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_w<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_h<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_w<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_depthwise_conv2d_nhwc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a00fa259c7a4c72504f9ac906062e9ebc" kindref="member">kDepthwiseConv2dNHWC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>CHECK_EQ(4,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pH<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pW<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pCM<sp/>=<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1];<sp/><sp/></highlight><highlight class="comment">//<sp/>channel_multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]<sp/>+<sp/>2<sp/>*<sp/>pad_h,<sp/>stride_h)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]<sp/>+<sp/>2<sp/>*<sp/>pad_w,<sp/>stride_w)<sp/>+<sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]},<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0]},<sp/></highlight><highlight class="stringliteral">&quot;kh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1]},<sp/></highlight><highlight class="stringliteral">&quot;kw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(pad_h<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pad_w<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>I</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(I,<sp/>{<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/>pad_h,<sp/>pad_w,<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0)});</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>b,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>h,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>w,<sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(T(b,<sp/>stride_h<sp/>*<sp/>h<sp/>+<sp/>kh,<sp/>stride_w<sp/>*<sp/>w<sp/>+<sp/>kw,<sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(i,<sp/>pCM))<sp/>*</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(kh,<sp/>kw,<sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(i,<sp/>pCM),<sp/><ref refid="namespacetvm_1a857781b7243b2f90018f7fe6baf9c30e" kindref="member">indexmod</ref>(o,<sp/>pCM)),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{kh,<sp/>kw,<sp/>i});</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="namespacetopi_1aa6c2cdf56a7e63a41e964e91df6a01bd" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1aa6c2cdf56a7e63a41e964e91df6a01bd" kindref="member">group_conv2d_ngchw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>I,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_h<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_w<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_h<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_w<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_group_conv2d_ngchw&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a4147e63b5ce67e3340ed5096bf6b9455" kindref="member">kGroupConv2d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>CHECK_EQ(5,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>CHECK_EQ(5,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pH<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pW<sp/>=<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref><sp/>output_shape{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[0],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[1],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]<sp/>+<sp/>2<sp/>*<sp/>pad_h,<sp/>stride_h)<sp/>+<sp/>1,<sp/><sp/></highlight><highlight class="comment">//<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetvm_1a8203d70a5ebf3532370264b000d0d276" kindref="member">indexdiv</ref>(I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[4]<sp/>-<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[4]<sp/>+<sp/>2<sp/>*<sp/>pad_w,<sp/>stride_w)<sp/>+<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>I-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[2]},<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[3]},<sp/></highlight><highlight class="stringliteral">&quot;kh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/><ref refid="namespacetvm_1_1te_1aae384e9b73c2271905486e4a74b69265" kindref="member">tvm::te::reduce_axis</ref>(<ref refid="classtvm_1_1Range" kindref="compound">tvm::Range</ref>{0,<sp/>W-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>[4]},<sp/></highlight><highlight class="stringliteral">&quot;kw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>(pad_h<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pad_w<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>I</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacetopi_1a7d9e2d0f526ff451b6df91c6a673f440" kindref="member">pad</ref>(I,<sp/>{<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/><ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>(0),<sp/>pad_h,<sp/>pad_w});</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref><sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>b<sp/>=<sp/>args[0];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>g<sp/>=<sp/>args[1];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>o<sp/>=<sp/>args[2];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>h<sp/>=<sp/>args[3];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref><sp/>w<sp/>=<sp/>args[4];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a5cea5eb708bfbfa08e285092e5afdc33" kindref="member">tvm::sum</ref>(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I(b,<sp/>g,<sp/>i,<sp/>stride_h<sp/>*<sp/>h<sp/>+<sp/>kh,<sp/>stride_w<sp/>*<sp/>w<sp/>+<sp/>kw)<sp/>*<sp/>W(g,<sp/>i,<sp/>o,<sp/>kh,<sp/>kw),</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i,<sp/>kh,<sp/>kw});</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(output_shape,<sp/>l,<sp/>name,<sp/>tag);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>topi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TOPI_NN_H_</highlight></codeline>
    </programlisting>
    <location file="topi/include/topi/nn.h"/>
  </compounddef>
</doxygen>
