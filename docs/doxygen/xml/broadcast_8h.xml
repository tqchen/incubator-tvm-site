<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="broadcast_8h" kind="file" language="C++">
    <compoundname>broadcast.h</compoundname>
    <includes refid="detail_2broadcast_8h" local="no">topi/detail/broadcast.h</includes>
    <includes refid="constant__utils_8h" local="no">topi/detail/constant_utils.h</includes>
    <includes refid="tags_8h" local="no">topi/tags.h</includes>
    <includes local="no">string</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="elemwise_8h" local="yes">topi/include/topi/elemwise.h</includedby>
    <includedby refid="bias__add_8h" local="no">topi/include/topi/nn/bias_add.h</includedby>
    <includedby refid="reduction_8h" local="no">topi/include/topi/reduction.h</includedby>
    <incdepgraph>
      <node id="16489">
        <label>tvm/arith/int_set.h</label>
        <link refid="int__set_8h"/>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16486">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16461">
        <label>atomic</label>
      </node>
      <node id="16497">
        <label>tvm/tir/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16491">
        <label>tvm/te/tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16492" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16476">
        <label>functional</label>
      </node>
      <node id="16478">
        <label>limits</label>
      </node>
      <node id="16501">
        <label>tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16502" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16467">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="16468" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
      </node>
      <node id="16466">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16467" relation="include">
        </childnode>
        <childnode refid="16472" relation="include">
        </childnode>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16476" relation="include">
        </childnode>
        <childnode refid="16477" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16480">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16500">
        <label>tvm/tir/function.h</label>
        <link refid="tir_2function_8h"/>
        <childnode refid="16501" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16496">
        <label>tvm/te/tensor_intrin.h</label>
        <link refid="tensor__intrin_8h"/>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16454">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16461" relation="include">
        </childnode>
      </node>
      <node id="16457">
        <label>stdint.h</label>
      </node>
      <node id="16472">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16473" relation="include">
        </childnode>
        <childnode refid="16461" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16483">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16476" relation="include">
        </childnode>
      </node>
      <node id="16498">
        <label>topi/detail/constant_utils.h</label>
        <link refid="constant__utils_8h"/>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16499" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
      </node>
      <node id="16449">
        <label>tvm/arith/analyzer.h</label>
        <link refid="analyzer_8h"/>
        <childnode refid="16450" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16489" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
      </node>
      <node id="16490">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16485" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16460">
        <label>string</label>
      </node>
      <node id="16503">
        <label>dmlc/common.h</label>
      </node>
      <node id="16484">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16485" relation="include">
        </childnode>
      </node>
      <node id="16481">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16482" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16505">
        <label>unordered_set</label>
      </node>
      <node id="16448">
        <label>tvm/te/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="16449" relation="include">
        </childnode>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16458">
        <label>stddef.h</label>
      </node>
      <node id="16502">
        <label>tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="16503" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16476" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16492">
        <label>tvm/arith/bound.h</label>
        <link refid="bound_8h"/>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16489" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16504">
        <label>tvm/tir/lowered_func.h</label>
        <link refid="lowered__func_8h"/>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16494">
        <label>tvm/tir/op.h</label>
        <link refid="tir_2op_8h"/>
        <childnode refid="16487" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
      </node>
      <node id="16453">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16487" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16447">
        <label>topi/detail/broadcast.h</label>
        <link refid="detail_2broadcast_8h"/>
        <childnode refid="16448" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16477">
        <label>tuple</label>
      </node>
      <node id="16451">
        <label>dmlc/logging.h</label>
      </node>
      <node id="16493">
        <label>tvm/tir/stmt.h</label>
        <link refid="stmt_8h"/>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16470">
        <label>vector</label>
      </node>
      <node id="16479">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16468">
        <label>dmlc/io.h</label>
      </node>
      <node id="16455">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="16456" relation="include">
        </childnode>
        <childnode refid="16457" relation="include">
        </childnode>
        <childnode refid="16458" relation="include">
        </childnode>
      </node>
      <node id="16487">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16499">
        <label>tvm/tir/ir_pass.h</label>
        <link refid="ir__pass_8h"/>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
        <childnode refid="16500" relation="include">
        </childnode>
        <childnode refid="16504" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16505" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16452">
        <label>utility</label>
      </node>
      <node id="16462">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16465" relation="include">
        </childnode>
        <childnode refid="16484" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16479" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16446">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast.h"/>
        <childnode refid="16447" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16507" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
      </node>
      <node id="16474">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="16464">
        <label>cstdlib</label>
      </node>
      <node id="16485">
        <label>iostream</label>
      </node>
      <node id="16473">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="16468" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16472" relation="include">
        </childnode>
      </node>
      <node id="16506">
        <label>deque</label>
      </node>
      <node id="16471">
        <label>unordered_map</label>
      </node>
      <node id="16465">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
        <childnode refid="16472" relation="include">
        </childnode>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16479" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16463">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16464" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16475">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16450">
        <label>tvm/support/with.h</label>
        <link refid="with_8h"/>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
      </node>
      <node id="16459">
        <label>type_traits</label>
      </node>
      <node id="16488">
        <label>algorithm</label>
      </node>
      <node id="16507">
        <label>topi/tags.h</label>
        <link refid="tags_8h"/>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16456">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="16495">
        <label>tvm/te/schedule.h</label>
        <link refid="schedule_8h"/>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16496" relation="include">
        </childnode>
        <childnode refid="16450" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16469">
        <label>memory</label>
      </node>
      <node id="16482">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16513">
        <label>topi/include/topi/vision/reorg.h</label>
        <link refid="reorg_8h"/>
      </node>
      <node id="16514">
        <label>topi/include/topi/nn/bias_add.h</label>
        <link refid="bias__add_8h"/>
      </node>
      <node id="16512">
        <label>topi/include/topi/nn/softmax.h</label>
        <link refid="nn_2softmax_8h"/>
      </node>
      <node id="16510">
        <label>topi/include/topi/reduction.h</label>
        <link refid="reduction_8h"/>
        <childnode refid="16511" relation="include">
        </childnode>
        <childnode refid="16512" relation="include">
        </childnode>
        <childnode refid="16513" relation="include">
        </childnode>
      </node>
      <node id="16511">
        <label>topi/include/topi/nn/pooling.h</label>
        <link refid="nn_2pooling_8h"/>
      </node>
      <node id="16508">
        <label>topi/include/topi/broadcast.h</label>
        <link refid="broadcast.h"/>
        <childnode refid="16509" relation="include">
        </childnode>
        <childnode refid="16514" relation="include">
        </childnode>
        <childnode refid="16510" relation="include">
        </childnode>
      </node>
      <node id="16509">
        <label>topi/include/topi/elemwise.h</label>
        <link refid="elemwise_8h"/>
        <childnode refid="16510" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetopi">topi</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" prot="public" static="no">
        <name>TOPI_DEFINE_BCAST_OP</name>
        <param><defname>Name</defname></param>
        <param><defname>ComputeRule</defname></param>
        <initializer>inline <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> Name(const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; a,                   \
                            const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; b) {                 \
    ComputeRule;                                                      \
  }                                                                   \
  inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; A,               \
                              const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; B,               \
                              std::string name = &quot;T_&quot; #Name,          \
                              std::string tag = kBroadcast) {         \
    auto l = [](<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> a, <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> b) { ComputeRule; };   \
    return detail::WithBroadcast(l, A, B, name, tag);                 \
  }                                                                   \
  inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; A,               \
                              const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; B,                 \
                              std::string name = &quot;T_&quot; #Name,          \
                              std::string tag = kElementWise) {       \
    auto l = [](<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> a, <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> b) { ComputeRule; };   \
    return <ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(A-&gt;shape, [&amp;](const ::<ref refid="classtvm_1_1Array" kindref="compound">tvm::Array</ref>&lt;::<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref>&gt;&amp; i) { \
        return l(A(i), B);                                            \
      }, name, tag);                                                  \
  }                                                                   \
  inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; A,                 \
                              const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; B,               \
                              std::string name = &quot;T_&quot; #Name,          \
                              std::string tag = kElementWise) {       \
    auto l = [&amp;](<ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> a, <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref> b) { ComputeRule; };  \
    return <ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(B-&gt;shape, [&amp;](const ::<ref refid="classtvm_1_1Array" kindref="compound">tvm::Array</ref>&lt;::<ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tvm::tir::Var</ref>&gt;&amp; i) { \
        return l(A, B(i));                                            \
      }, name, tag);                                                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/broadcast.h" line="69" column="9" bodyfile="topi/include/topi/broadcast.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" prot="public" static="no">
        <name>TOPI_DEFINE_OP_OVERLOAD</name>
        <param><defname>Name</defname></param>
        <param><defname>OpName</defname></param>
        <initializer>inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; A,             \
                              const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; B) {           \
    return topi::OpName(A, B);                                      \
  }                                                                 \
  inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; A,               \
                              const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; B) {           \
    return topi::OpName(A, B);                                      \
  }                                                                 \
  inline <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref> Name(const <ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp; A,             \
                              const <ref refid="classtvm_1_1PrimExpr" kindref="compound">tvm::PrimExpr</ref>&amp; B) {             \
    return topi::OpName(A, B);                                      \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topi/include/topi/broadcast.h" line="101" column="9" bodyfile="topi/include/topi/broadcast.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Broadcast op constructions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TOPI_BROADCAST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_BROADCAST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="detail_2broadcast_8h" kindref="compound">topi/detail/broadcast.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="constant__utils_8h" kindref="compound">topi/detail/constant_utils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tags_8h" kindref="compound">topi/tags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespacetopi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetopi" kindref="compound">topi</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespacetopi_1abab02d4352666a313c80a1cf73bdec26" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref><sp/><ref refid="namespacetopi_1abab02d4352666a313c80a1cf73bdec26" kindref="member">broadcast_to</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1te_1_1Tensor" kindref="compound">tvm::te::Tensor</ref>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref>&amp;<sp/>output_shape,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T_broadcast_to&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/><ref refid="namespacetopi_1a794b9155e9ba9d1c9c42a1cff1fb645f" kindref="member">kBroadcast</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>CHECK_GE(output_shape.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>.size())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>broadcast,<sp/>output<sp/>dimensionality<sp/>smaller<sp/>than<sp/>input.\noutput:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>output_shape<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nvs\ninput:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bh<sp/>=<sp/>detail::BroadcastShape(output_shape,<sp/>t-&gt;<ref refid="classtvm_1_1te_1_1TensorNode_1a0ba732bc2def0d467854585752911351" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>CHECK_EQ(output_shape.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>(),<sp/>bh.common_shape.size());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output_shape.<ref refid="classtvm_1_1Array_1a6c150ee7d3e46117b099d2052b19aec5" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(topi::detail::EqualCheck(output_shape[i],<sp/>bh.common_shape[i]));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>[&amp;](<ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::tir::Var&gt;</ref><sp/>ovars)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t(detail::InputIndexFromBroadcast(ovars,<sp/>t,<sp/>bh.vars2,<sp/>bh.all_vars));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1_1te_1aeacae1afc9dd1267cbb5779f9daa4671" kindref="member">tvm::te::compute</ref>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">tvm::Array&lt;tvm::PrimExpr&gt;</ref>(bh.common_shape.begin(),<sp/>bh.common_shape.end()),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tag);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_DEFINE_BCAST_OP(Name,<sp/>ComputeRule)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::PrimExpr<sp/>Name(const<sp/>tvm::PrimExpr&amp;<sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::PrimExpr&amp;<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ComputeRule;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::te::Tensor&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::te::Tensor&amp;<sp/>B,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>&quot;T_&quot;<sp/>#Name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/>kBroadcast)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>l<sp/>=<sp/>[](tvm::PrimExpr<sp/>a,<sp/>tvm::PrimExpr<sp/>b)<sp/>{<sp/>ComputeRule;<sp/>};<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>detail::WithBroadcast(l,<sp/>A,<sp/>B,<sp/>name,<sp/>tag);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::te::Tensor&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::PrimExpr&amp;<sp/>B,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>&quot;T_&quot;<sp/>#Name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/>kElementWise)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>l<sp/>=<sp/>[](tvm::PrimExpr<sp/>a,<sp/>tvm::PrimExpr<sp/>b)<sp/>{<sp/>ComputeRule;<sp/>};<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>tvm::te::compute(A-&gt;shape,<sp/>[&amp;](const<sp/>::tvm::Array&lt;::tvm::tir::Var&gt;&amp;<sp/>i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>l(A(i),<sp/>B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>name,<sp/>tag);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::PrimExpr&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::te::Tensor&amp;<sp/>B,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>&quot;T_&quot;<sp/>#Name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tag<sp/>=<sp/>kElementWise)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>l<sp/>=<sp/>[&amp;](tvm::PrimExpr<sp/>a,<sp/>tvm::PrimExpr<sp/>b)<sp/>{<sp/>ComputeRule;<sp/>};<sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>tvm::te::compute(B-&gt;shape,<sp/>[&amp;](const<sp/>::tvm::Array&lt;::tvm::tir::Var&gt;&amp;<sp/>i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>l(A,<sp/>B(i));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>name,<sp/>tag);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPI_DEFINE_OP_OVERLOAD(Name,<sp/>OpName)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::te::Tensor&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::te::Tensor&amp;<sp/>B)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>topi::OpName(A,<sp/>B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::PrimExpr&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::te::Tensor&amp;<sp/>B)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>topi::OpName(A,<sp/>B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/>inline<sp/>tvm::te::Tensor<sp/>Name(const<sp/>tvm::te::Tensor&amp;<sp/>A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>tvm::PrimExpr&amp;<sp/>B)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>topi::OpName(A,<sp/>B);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="namespacetopi_1abfd4456eb091b8150cd8e324b276e8b2" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a663f04b71464b8bb32a9498a71733200" kindref="member">logical_and</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&amp;&amp;<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="127" refid="namespacetopi_1a1c7800d681e491b45954820baf249ae4" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&amp;&amp;,<sp/><ref refid="namespacetopi_1a663f04b71464b8bb32a9498a71733200" kindref="member">logical_and</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="namespacetopi_1a2facc2b601530e674e5dd903ed5dcc83" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ac1866543337af365604bc7215a7cf30b" kindref="member">logical_or</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>||<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="141" refid="namespacetopi_1a7eb1ec922ee948b74be83603601801df" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">||,<sp/><ref refid="namespacetopi_1ac1866543337af365604bc7215a7cf30b" kindref="member">logical_or</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="namespacetopi_1a1942bddbf6c9c1ca1be1aa49359f67ce" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1adb0b26a18049c20f4c704ffdcfd9b26a" kindref="member">bitwise_and</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&amp;<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="155" refid="namespacetopi_1a6b148b2746c34daba96f3cd914f50061" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&amp;,<sp/><ref refid="namespacetopi_1adb0b26a18049c20f4c704ffdcfd9b26a" kindref="member">bitwise_and</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespacetopi_1a1cd6cd15c8db13b9a8bd5da9b2c543a2" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a8739fc442527f4063babae06a9b98c82" kindref="member">bitwise_or</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>|<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="169" refid="namespacetopi_1a8dc63da362b9f0a9f81d40e075e47997" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">|,<sp/><ref refid="namespacetopi_1a8739fc442527f4063babae06a9b98c82" kindref="member">bitwise_or</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="namespacetopi_1a1dfdb80cfffa32f36e1c491c1b050688" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ad8c706a823afc470753cabb9007925ec" kindref="member">bitwise_xor</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>^<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="183" refid="namespacetopi_1a24c2f0fcea7e4d0160bbc1460aacb0ac" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">^,<sp/><ref refid="namespacetopi_1ad8c706a823afc470753cabb9007925ec" kindref="member">bitwise_xor</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="namespacetopi_1ad0606e6f2b4fb7fa08ef1b3713b35ebc" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1aa894e21659f08e663915f88a16f64b2d" kindref="member">add</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="197" refid="namespacetopi_1ae695da6463ef2cc5f53595addc2eeb8b" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">+,<sp/><ref refid="namespacetopi_1aa894e21659f08e663915f88a16f64b2d" kindref="member">add</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="namespacetopi_1a130a3a82be00c6e92bfb3091d950115d" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1aae35ca7f2b19e58bfa1fe5af449380d1" kindref="member">subtract</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>-<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="211" refid="namespacetopi_1a53d191aeb501d1518deef6fb240f9871" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">-,<sp/><ref refid="namespacetopi_1aae35ca7f2b19e58bfa1fe5af449380d1" kindref="member">subtract</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="namespacetopi_1a91b5fb70ebd79ef901464795ef3abfc2" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ac3e9e4fa02b05853c13be69ec595aad7" kindref="member">multiply</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>*<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="225" refid="namespacetopi_1a33baa22e21f625b772b34cf99b234d6d" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">*,<sp/><ref refid="namespacetopi_1ac3e9e4fa02b05853c13be69ec595aad7" kindref="member">multiply</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="namespacetopi_1a6f29afd22f13ef5cec1c247c93381199" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ab98c1bef2250b920060a8d92f2db2d93" kindref="member">divide</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(a,<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a3927c7edf09081a9520e0d628b3cff5a" kindref="member">floor_divide</ref>,<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.dtype().is_int()<sp/>||<sp/>a.dtype().is_uint())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a25cb3bf64427a16a93529d0a5c40b6de" kindref="member">floordiv</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetopi_1acd86f6a79bf0f7cdb1296ae7829f8307" kindref="member">floor</ref>(<ref refid="namespacetvm_1a40fcc9952e1ff01a76f3b75dbd368fc1" kindref="member">div</ref>(a,<sp/>b));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257" refid="namespacetopi_1a2d719758884cddb6a8ec9c96652364d2" refkind="member"><highlight class="normal">});</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="namespacetopi_1ad39f0ac84fdb807b897f937ca5c22794" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ab32a7a76e3a94a1edba52436a1337cb6" kindref="member">mod</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ae3fd62ca6008d6f20e4845426ec47aa6" kindref="member">truncmod</ref>(a,<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a83fe39f90c5576ae3060e8a5489d2f39" kindref="member">floor_mod</ref>,<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.dtype().is_int()<sp/>||<sp/>a.dtype().is_uint())<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a74b2e0fb912a82f974e2b652f7de8d34" kindref="member">floormod</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>-<sp/><ref refid="namespacetopi_1a3927c7edf09081a9520e0d628b3cff5a" kindref="member">floor_divide</ref>(a,<sp/>b)<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289" refid="namespacetopi_1ae25ae66b5fc09f84349cd19408f7c9e3" refkind="member"><highlight class="normal">});</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="namespacetopi_1a4492e0c372c88ca8445ea287fb70f033" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a09126c7373a571b8f24e8206c24e6bf5" kindref="member">maximum</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1ab49bad0808ba033343e72ba37b39af2e" kindref="member">tvm::max</ref>(a,<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="namespacetopi_1a01fdc8ce8ff2295e10cb89de23c3da98" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1afab96b6fc623d4bbb98bd381435d4dea" kindref="member">minimum</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a9da780393e228969f77aa7550520a582" kindref="member">tvm::min</ref>(a,<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="namespacetopi_1af600fbd4945257ba8de0ac4f17e89506" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a042879ca152f316c9d19f941dbdf7582" kindref="member">power</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetvm_1a880f0cd15891153430b669f0b4eca2fe" kindref="member">tvm::pow</ref>(a,<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="namespacetopi_1a6fe04cd61879c2114ce70eaaf4caa07c" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a78a4d7cbe5668db729e1acf831c79034" kindref="member">left_shift</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;&lt;<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="342" refid="namespacetopi_1a17214322c35cdcc16af23a1d7d37c50c" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&lt;&lt;,<sp/><ref refid="namespacetopi_1a78a4d7cbe5668db729e1acf831c79034" kindref="member">left_shift</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="namespacetopi_1ae7574a7a362e9ee9e4f0b5a2de12e908" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a14301866288307e63c2ab414e67f6be3" kindref="member">right_shift</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;&gt;<sp/>b;<sp/>});</highlight></codeline>
<codeline lineno="356" refid="namespacetopi_1a276bae55f5c7dbf86196488820ef88bf" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1a7f3943bdaba8836ffa7d14457a7d730c" kindref="member">TOPI_DEFINE_OP_OVERLOAD</ref>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">&gt;&gt;,<sp/><ref refid="namespacetopi_1a14301866288307e63c2ab414e67f6be3" kindref="member">right_shift</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="namespacetopi_1aa77b5534818ae7616e8c14fbb3ef1fad" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a9bdc92081dabc451c196060d72aab223" kindref="member">greater</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="namespacetopi_1a83bebba2755a6399289bf9a2648c9498" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a6b003a9c4154ba0040d916918eecb7fe" kindref="member">less</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="namespacetopi_1ae2d6d5ecbff7ee50dfa45a81e3b691c4" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1ae10e1fb8c765a9ae15c12f45199375b3" kindref="member">equal</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="namespacetopi_1a0042af518f55a13e0c08b6eef85ec477" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a19da66c62c01b4c51d8db2e35b075b09" kindref="member">not_equal</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>!=<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="namespacetopi_1a4c9cd0d863c5d4cc9905deac1898164f" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a1b031e71272376edbdde858787b91b34" kindref="member">greater_equal</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="namespacetopi_1adae651be9016267aab069698c2df1d78" refkind="member"><highlight class="normal"><ref refid="broadcast_8h_1acb867d9c8250a748f59b5a47711b495a" kindref="member">TOPI_DEFINE_BCAST_OP</ref>(<ref refid="namespacetopi_1a7ca4a60628a697c7e589d2fe78984650" kindref="member">less_equal</ref>,<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;=<sp/>b);<sp/>});</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>topi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TOPI_BROADCAST_H_</highlight></codeline>
    </programlisting>
    <location file="topi/include/topi/broadcast.h"/>
  </compounddef>
</doxygen>
