<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="type__functor_8h" kind="file" language="C++">
    <compoundname>type_functor.h</compoundname>
    <includes refid="functor_8h" local="no">tvm/node/functor.h</includes>
    <includes refid="relay_2expr_8h" local="no">tvm/relay/expr.h</includes>
    <includes refid="relay_2adt_8h" local="no">tvm/relay/adt.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="12079">
        <label>tvm/ir/span.h</label>
        <link refid="span_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12051">
        <label>atomic</label>
      </node>
      <node id="12070">
        <label>functional</label>
      </node>
      <node id="12095">
        <label>tvm/relay/adt.h</label>
        <link refid="relay_2adt_8h"/>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12088" relation="include">
        </childnode>
        <childnode refid="12091" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12093" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12072">
        <label>limits</label>
      </node>
      <node id="12087">
        <label>tvm/ir/function.h</label>
        <link refid="ir_2function_8h"/>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12062">
        <label>tvm/runtime/module.h</label>
        <link refid="runtime_2module_8h"/>
        <childnode refid="12063" relation="include">
        </childnode>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12058" relation="include">
        </childnode>
        <childnode refid="12064" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12061" relation="include">
        </childnode>
      </node>
      <node id="12061">
        <label>tvm/runtime/packed_func.h</label>
        <link refid="packed__func_8h"/>
        <childnode refid="12042" relation="include">
        </childnode>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12062" relation="include">
        </childnode>
        <childnode refid="12066" relation="include">
        </childnode>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
        <childnode refid="12071" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12072" relation="include">
        </childnode>
        <childnode refid="12064" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12041">
        <label>tvm/node/functor.h</label>
        <link refid="functor_8h"/>
        <childnode refid="12042" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12090">
        <label>tvm/ir/env_func.h</label>
        <link refid="env__func_8h"/>
        <childnode refid="12060" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12085">
        <label>tvm/ir/type_relation.h</label>
        <link refid="type__relation_8h"/>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12086" relation="include">
        </childnode>
        <childnode refid="12090" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
      </node>
      <node id="12043">
        <label>tvm/runtime/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="12042" relation="include">
        </childnode>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12051" relation="include">
        </childnode>
      </node>
      <node id="12046">
        <label>stdint.h</label>
      </node>
      <node id="12066">
        <label>tvm/runtime/ndarray.h</label>
        <link refid="ndarray_8h"/>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12067" relation="include">
        </childnode>
        <childnode refid="12051" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12076">
        <label>tvm/node/structural_hash.h</label>
        <link refid="structural__hash_8h"/>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12041" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
      </node>
      <node id="12053">
        <label>tvm/relay/expr.h</label>
        <link refid="relay_2expr_8h"/>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12082" relation="include">
        </childnode>
        <childnode refid="12086" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
        <childnode refid="12091" relation="include">
        </childnode>
        <childnode refid="12093" relation="include">
        </childnode>
      </node>
      <node id="12092">
        <label>tvm/tir/expr.h</label>
        <link refid="tir_2expr_8h"/>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12041" relation="include">
        </childnode>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12081" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12078" relation="include">
        </childnode>
        <childnode refid="12072" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12049">
        <label>string</label>
      </node>
      <node id="12040">
        <label>include/tvm/ir/type_functor.h</label>
        <link refid="type_functor.h"/>
        <childnode refid="12041" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12095" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12055">
        <label>dmlc/common.h</label>
      </node>
      <node id="12077">
        <label>tvm/node/repr_printer.h</label>
        <link refid="repr__printer_8h"/>
        <childnode refid="12041" relation="include">
        </childnode>
        <childnode refid="12078" relation="include">
        </childnode>
      </node>
      <node id="12074">
        <label>tvm/node/container.h</label>
        <link refid="node_2container_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12058" relation="include">
        </childnode>
        <childnode refid="12061" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12075" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12089">
        <label>unordered_set</label>
      </node>
      <node id="12047">
        <label>stddef.h</label>
      </node>
      <node id="12091">
        <label>./base.h</label>
        <link refid="base_8h"/>
        <childnode refid="12079" relation="include">
        </childnode>
        <childnode refid="12092" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
      </node>
      <node id="12054">
        <label>tvm/ir/attrs.h</label>
        <link refid="ir_2attrs_8h"/>
        <childnode refid="12055" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12061" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12056">
        <label>tvm/ir/expr.h</label>
        <link refid="ir_2expr_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12079" relation="include">
        </childnode>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12081" relation="include">
        </childnode>
        <childnode refid="12072" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12088">
        <label>tvm/ir/adt.h</label>
        <link refid="ir_2adt_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12071">
        <label>tuple</label>
      </node>
      <node id="12042">
        <label>dmlc/logging.h</label>
      </node>
      <node id="12052">
        <label>vector</label>
      </node>
      <node id="12073">
        <label>tvm/node/structural_equal.h</label>
        <link refid="structural__equal_8h"/>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12041" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12063">
        <label>dmlc/io.h</label>
      </node>
      <node id="12044">
        <label>tvm/runtime/c_runtime_api.h</label>
        <link refid="c__runtime__api_8h"/>
        <childnode refid="12045" relation="include">
        </childnode>
        <childnode refid="12046" relation="include">
        </childnode>
        <childnode refid="12047" relation="include">
        </childnode>
      </node>
      <node id="12080">
        <label>tvm/ir/type.h</label>
        <link refid="ir_2type_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12079" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
      </node>
      <node id="12050">
        <label>utility</label>
      </node>
      <node id="12086">
        <label>tvm/ir/module.h</label>
        <link refid="ir_2module_8h"/>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12087" relation="include">
        </childnode>
        <childnode refid="12088" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12089" relation="include">
        </childnode>
      </node>
      <node id="12093">
        <label>./type.h</label>
        <link refid="relay_2type_8h"/>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12094" relation="include">
        </childnode>
        <childnode refid="12085" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12084" relation="include">
        </childnode>
        <childnode refid="12090" relation="include">
        </childnode>
        <childnode refid="12092" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12091" relation="include">
        </childnode>
      </node>
      <node id="12057">
        <label>tvm/node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12058" relation="include">
        </childnode>
        <childnode refid="12060" relation="include">
        </childnode>
        <childnode refid="12077" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
        <childnode refid="12073" relation="include">
        </childnode>
        <childnode refid="12076" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12068">
        <label>dmlc/serializer.h</label>
      </node>
      <node id="12082">
        <label>tvm/ir/op.h</label>
        <link refid="ir_2op_8h"/>
        <childnode refid="12083" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12084" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12085" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
      </node>
      <node id="12059">
        <label>cstdlib</label>
      </node>
      <node id="12078">
        <label>iostream</label>
      </node>
      <node id="12067">
        <label>tvm/runtime/serializer.h</label>
        <link refid="serializer_8h"/>
        <childnode refid="12063" relation="include">
        </childnode>
        <childnode refid="12068" relation="include">
        </childnode>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12066" relation="include">
        </childnode>
      </node>
      <node id="12065">
        <label>unordered_map</label>
      </node>
      <node id="12060">
        <label>tvm/node/reflection.h</label>
        <link refid="reflection_8h"/>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12058" relation="include">
        </childnode>
        <childnode refid="12061" relation="include">
        </childnode>
        <childnode refid="12066" relation="include">
        </childnode>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12073" relation="include">
        </childnode>
        <childnode refid="12076" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12058">
        <label>tvm/runtime/memory.h</label>
        <link refid="runtime_2memory_8h"/>
        <childnode refid="12043" relation="include">
        </childnode>
        <childnode refid="12059" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12084">
        <label>tvm/runtime/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="12061" relation="include">
        </childnode>
        <childnode refid="12049" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12050" relation="include">
        </childnode>
      </node>
      <node id="12083">
        <label>dmlc/registry.h</label>
      </node>
      <node id="12069">
        <label>tvm/runtime/data_type.h</label>
        <link refid="data__type_8h"/>
        <childnode refid="12044" relation="include">
        </childnode>
        <childnode refid="12042" relation="include">
        </childnode>
        <childnode refid="12048" relation="include">
        </childnode>
      </node>
      <node id="12048">
        <label>type_traits</label>
      </node>
      <node id="12081">
        <label>algorithm</label>
      </node>
      <node id="12045">
        <label>dlpack/dlpack.h</label>
      </node>
      <node id="12094">
        <label>tvm/ir/tensor_type.h</label>
        <link refid="tensor__type_8h"/>
        <childnode refid="12080" relation="include">
        </childnode>
        <childnode refid="12056" relation="include">
        </childnode>
      </node>
      <node id="12064">
        <label>memory</label>
      </node>
      <node id="12075">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innerclass refid="classtvm_1_1TypeFunctor" prot="public">tvm::TypeFunctor</innerclass>
    <innerclass refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4" prot="public">tvm::TypeFunctor&lt; R(const Type &amp;n, Args...)&gt;</innerclass>
    <innerclass refid="classtvm_1_1TypeVisitor" prot="public">tvm::TypeVisitor</innerclass>
    <innerclass refid="classtvm_1_1TypeMutator" prot="public">tvm::TypeMutator</innerclass>
    <innernamespace refid="namespacetvm">tvm</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="type__functor_8h_1ad222ca7b5f1a4a8c626d1f1e4b53cdb0" prot="public" static="no">
        <name>TYPE_FUNCTOR_DEFAULT</name>
        <initializer>{ return VisitTypeDefault_(op, std::forward&lt;Args&gt;(args)...); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type_functor.h" line="40" column="9" bodyfile="include/tvm/ir/type_functor.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" prot="public" static="no">
        <name>TVM_TYPE_FUNCTOR_DISPATCH</name>
        <param><defname>OP</defname></param>
        <initializer>vtable.template set_dispatch&lt;OP&gt;(                                     \
      [](const ObjectRef&amp; n, TSelf* self, Args... args) {               \
        return self-&gt;VisitType_(static_cast&lt;const OP*&gt;(n.get()),        \
                                std::forward&lt;Args&gt;(args)...);           \
      });</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type_functor.h" line="44" column="9" bodyfile="include/tvm/ir/type_functor.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A way to defined arbitrary function signature with dispatch on types. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>TVM_IR_TYPE_FUNCTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_IR_TYPE_FUNCTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="functor_8h" kindref="compound">tvm/node/functor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="relay_2expr_8h" kindref="compound">tvm/relay/expr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="relay_2adt_8h" kindref="compound">tvm/relay/adt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetvm" kindref="compound">tvm</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FType&gt;</highlight></codeline>
<codeline lineno="37" refid="classtvm_1_1TypeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1TypeFunctor" kindref="compound">TypeFunctor</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functions<sp/>to<sp/>be<sp/>overriden.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="type__functor_8h_1ad222ca7b5f1a4a8c626d1f1e4b53cdb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_FUNCTOR_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/>{<sp/>return<sp/>VisitTypeDefault_(op,<sp/>std::forward&lt;Args&gt;(args)...);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_TYPE_FUNCTOR_DISPATCH(OP)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>vtable.template<sp/>set_dispatch&lt;OP&gt;(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>ObjectRef&amp;<sp/>n,<sp/>TSelf*<sp/>self,<sp/>Args...<sp/>args)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self-&gt;VisitType_(static_cast&lt;const<sp/>OP*&gt;(n.get()),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Args&gt;(args)...);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="52" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtvm_1_1TypeFunctor" kindref="compound">TypeFunctor</ref>&lt;R(const<sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>n,<sp/>Args...)&gt;<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4" kindref="compound">TSelf</ref><sp/>=<sp/><ref refid="classtvm_1_1TypeFunctor" kindref="compound">TypeFunctor</ref>&lt;R(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>n,<sp/>Args...)&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1NodeFunctor" kindref="compound">FType</ref><sp/>=<sp/><ref refid="classtvm_1_1NodeFunctor" kindref="compound">tvm::NodeFunctor</ref>&lt;R(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObjectRef&amp;<sp/>n,<sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4" kindref="compound">TSelf</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>Args...)&gt;;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a24d4a3522ee6c4cdeed80dcdcc1424ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a24d4a3522ee6c4cdeed80dcdcc1424ad" kindref="member">result_type</ref><sp/>=<sp/>R;</highlight></codeline>
<codeline lineno="61" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a0a74cb61bb79cae0115553ed9a0ebc3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a0a74cb61bb79cae0115553ed9a0ebc3e" kindref="member">~TypeFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="68" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1abfc4d68a848ae2b0b374885dabe156c4" refkind="member"><highlight class="normal"><sp/><sp/>R<sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1abfc4d68a848ae2b0b374885dabe156c4" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>n,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitType(n,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1ab35d51c50343319187daf8dddb31b3a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>R<sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1ab35d51c50343319187daf8dddb31b3a2" kindref="member">VisitType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>n,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(n.defined());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1NodeFunctor" kindref="compound">FType</ref><sp/>vtable<sp/>=<sp/>InitVTable();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vtable(n,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>that<sp/>can<sp/>be<sp/>overriden<sp/>by<sp/>subclass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a2226d3d6677ef90628ce9d989a4b0f3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>R<sp/><ref refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a2226d3d6677ef90628ce9d989a4b0f3e" kindref="member">VisitType_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TensorTypeNode" kindref="compound">TensorTypeNode</ref>*<sp/>op,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...<sp/>args)<sp/><ref refid="type__functor_8h_1ad222ca7b5f1a4a8c626d1f1e4b53cdb0" kindref="member">TYPE_FUNCTOR_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="85" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a2d12e6b82d879dd6ec1614f592486401" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="86" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a02a16c27881cb2ab3532cca9ae68c1f5" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TypeConstraintNode" kindref="compound">TypeConstraintNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="87" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1af63866f6e7377bb74f393740bbc1b492" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="88" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a59f150c83a601663d0f56ca14afba603" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TypeRelationNode" kindref="compound">TypeRelationNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="89" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1ad1b38cf92f6a8400d0e0c9d7480ccbf7" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TupleTypeNode" kindref="compound">TupleTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="90" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1aa74b61efd6210a7d95e07086827297e0" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="91" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a4ed63aa95ed7c6a03f12bb0fd13ba868" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1RelayRefTypeNode" kindref="compound">RelayRefTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="92" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1ac080f078b2964af61b7bd4fb6f1c3339" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1GlobalTypeVarNode" kindref="compound">GlobalTypeVarNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="93" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a8964508f42a85ccc9e2c9dcd23e1e58d" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TypeCallNode" kindref="compound">TypeCallNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="94" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a91bc40008f698329ac0a908b2c9f02c1" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1TypeDataNode" kindref="compound">TypeDataNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="95" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1ad542e58430966e853bdef0ec2e01f379" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1PrimTypeNode" kindref="compound">PrimTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="96" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1aff7dbebbf8fd2fdd5ce9dd23a85fa36f" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitType_(const<sp/><ref refid="classtvm_1_1PointerTypeNode" kindref="compound">PointerTypeNode</ref>*<sp/>op,<sp/>Args...<sp/>args)<sp/>TYPE_FUNCTOR_DEFAULT;</highlight></codeline>
<codeline lineno="97" refid="classtvm_1_1TypeFunctor_3_01R_07const_01Type_01_6n_00_01Args_8_8_8_08_4_1a91553f9e04c39b3821a70ae4f7b0c597" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/>R<sp/>VisitTypeDefault_(const<sp/>Object*<sp/>op,<sp/>Args...)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(FATAL)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>have<sp/>a<sp/>default<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>op-&gt;GetTypeKey();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>unreachable,<sp/>written<sp/>to<sp/>stop<sp/>compiler<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>vtable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1NodeFunctor" kindref="compound">FType</ref><sp/>InitVTable()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtvm_1_1NodeFunctor" kindref="compound">FType</ref><sp/>vtable;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TensorTypeNode" kindref="compound">TensorTypeNode</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TypeConstraintNode" kindref="compound">TypeConstraintNode</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TypeRelationNode" kindref="compound">TypeRelationNode</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TupleTypeNode" kindref="compound">TupleTypeNode</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1RelayRefTypeNode" kindref="compound">RelayRefTypeNode</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1GlobalTypeVarNode" kindref="compound">GlobalTypeVarNode</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TypeCallNode" kindref="compound">TypeCallNode</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1TypeDataNode" kindref="compound">TypeDataNode</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1PrimTypeNode" kindref="compound">PrimTypeNode</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="type__functor_8h_1afaa114a04d18cd3f8f11995628692d74" kindref="member">TVM_TYPE_FUNCTOR_DISPATCH</ref>(<ref refid="classtvm_1_1PointerTypeNode" kindref="compound">PointerTypeNode</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vtable;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TVM_TYPE_FUNCTOR_DISPATCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classtvm_1_1TypeVisitor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1TypeVisitor" kindref="compound">TypeVisitor</ref><sp/>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeFunctor" kindref="compound">TypeFunctor</ref>&lt;void(const<sp/>Type&amp;<sp/>n)&gt;<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TensorTypeNode" kindref="compound">TensorTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TupleTypeNode" kindref="compound">TupleTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeRelationNode" kindref="compound">TypeRelationNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1RelayRefTypeNode" kindref="compound">RelayRefTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1GlobalTypeVarNode" kindref="compound">GlobalTypeVarNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeCallNode" kindref="compound">TypeCallNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeDataNode" kindref="compound">TypeDataNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimTypeNode" kindref="compound">PrimTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PointerTypeNode" kindref="compound">PointerTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classtvm_1_1TypeMutator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">TVM_DLL<sp/><ref refid="classtvm_1_1TypeMutator" kindref="compound">TypeMutator</ref><sp/>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeFunctor" kindref="compound">TypeFunctor</ref>&lt;Type(const<sp/>Type&amp;<sp/>n)&gt;<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>t)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TensorTypeNode" kindref="compound">TensorTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1IncompleteTypeNode" kindref="compound">IncompleteTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1FuncTypeNode" kindref="compound">FuncTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TupleTypeNode" kindref="compound">TupleTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeRelationNode" kindref="compound">TypeRelationNode</ref>*<sp/>type_rel)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1RelayRefTypeNode" kindref="compound">RelayRefTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1GlobalTypeVarNode" kindref="compound">GlobalTypeVarNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeCallNode" kindref="compound">TypeCallNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1TypeDataNode" kindref="compound">TypeDataNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PrimTypeNode" kindref="compound">PrimTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/>VisitType_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1PointerTypeNode" kindref="compound">PointerTypeNode</ref>*<sp/>op)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Type&gt;</ref><sp/>MutateArray(<ref refid="classtvm_1_1Array" kindref="compound">Array&lt;Type&gt;</ref><sp/>arr);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="classtvm_1_1Type" kindref="compound">Type</ref><sp/><ref refid="namespacetvm_1a7f0738778e1a4f1725bea3d6c801aab4" kindref="member">Bind</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Type" kindref="compound">Type</ref>&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtvm_1_1Map" kindref="compound">Map&lt;TypeVar, Type&gt;</ref>&amp;<sp/>args_map);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tvm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_IR_TYPE_FUNCTOR_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/ir/type_functor.h"/>
  </compounddef>
</doxygen>
