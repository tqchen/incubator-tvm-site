<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacetvm_1_1relay_1_1qnn_1_1transform" kind="namespace" language="C++">
    <compoundname>tvm::relay::qnn::transform</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetvm_1_1relay_1_1qnn_1_1transform_1a2323e3c38cc9ae1626cd98295b83e906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pass</type>
        <definition>Pass tvm::relay::qnn::transform::Legalize</definition>
        <argsstring>()</argsstring>
        <name>Legalize</name>
        <briefdescription>
<para>Legalizes a QNN expr. Contains specifically two types of Legalizations. First, converts/Lowers an expression containing QNN ops to an expression containing only core Relay ops. Each QNN op is lowered to a sequence of exisiting Relay ops. This is a target-independent pass. One can register the lowering/transformation function for this op using FTVMQnnCanonicalize attr_name for FTVMLegalize op attribute. Second, as opposed to Relay Legalize, this one legalizes only QNN ops. One can register a transformation/legalization function for an op by using the FTVMQnnLegalize attr_name for FTVMLegalize op attribute. The isolation of QNN and Relay Legalize gives us separation of concerns, leading to a better software practice. The legalization can be configured to happen per target. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pass. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/relay/qnn/transform.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/tvm/relay/qnn/transform.h" line="37" column="1"/>
  </compounddef>
</doxygen>
