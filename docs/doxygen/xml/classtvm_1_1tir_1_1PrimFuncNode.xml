<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1PrimFuncNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::PrimFuncNode</compoundname>
    <basecompoundref refid="classtvm_1_1BaseFuncNode" prot="public" virt="non-virtual">tvm::BaseFuncNode</basecompoundref>
    <includes refid="tir_2function_8h" local="no">function.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1PrimFuncNode_1a4ea77411935e78d975414f31e153fc78" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tir::Var</ref> &gt;</type>
        <definition>Array&lt;tir::Var&gt; tvm::tir::PrimFuncNode::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
<para>Function parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="48" column="1" bodyfile="include/tvm/tir/function.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1PrimFuncNode_1a9fce10a00a4a34c1fa52f7cca25b7e3b" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">tir::Stmt</ref></type>
        <definition>tir::Stmt tvm::tir::PrimFuncNode::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>The body of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="50" column="1" bodyfile="include/tvm/tir/function.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1PrimFuncNode_1aa325068615c301abec6656416cab8e09" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Type" kindref="compound">Type</ref></type>
        <definition>Type tvm::tir::PrimFuncNode::ret_type</definition>
        <argsstring></argsstring>
        <name>ret_type</name>
        <briefdescription>
<para>The return type of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="52" column="1" bodyfile="include/tvm/tir/function.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1PrimFuncNode_1aeb1f162516e09122852496f2a945d100" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1Map" kindref="compound">Map</ref>&lt; <ref refid="classtvm_1_1tir_1_1Var" kindref="compound">tir::Var</ref>, <ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref> &gt;</type>
        <definition>Map&lt;tir::Var, Buffer&gt; tvm::tir::PrimFuncNode::buffer_map</definition>
        <argsstring></argsstring>
        <name>buffer_map</name>
        <briefdescription>
<para>Maps some parameters to specific <ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref> data structures. </para>        </briefdescription>
        <detaileddescription>
<para>buffer_map provides a way to express data structure&apos;s field and shape constraints. The provided information is used in the program analysis and the code generation.</para><para><itemizedlist>
<listitem><para>It defines the vars in the <ref refid="classtvm_1_1tir_1_1Buffer" kindref="compound">Buffer</ref> (m, n) in the cases below when they appears in the buffer_map for the first time.</para></listitem><listitem><para>When a var appears multiple times, they translate into runtime assertion to check the field constraint.</para></listitem></itemizedlist>
</para><para><programlisting><codeline><highlight class="normal">#<sp/>The<sp/>corresponding<sp/>fields<sp/>of<sp/>f<sp/>are<sp/>as<sp/>follows</highlight></codeline>
<codeline><highlight class="normal">#</highlight></codeline>
<codeline><highlight class="normal">#<sp/>-<sp/>f.params<sp/>=<sp/>[a,<sp/>b]</highlight></codeline>
<codeline><highlight class="normal">#<sp/>-<sp/>f.buffer_map<sp/>=<sp/>{a:<sp/>A,<sp/>b:<sp/>B}</highlight></codeline>
<codeline><highlight class="normal">#<sp/>-<sp/>A<sp/>=<sp/>decl_buffer(shape=[m,<sp/>n])</highlight></codeline>
<codeline><highlight class="normal">#<sp/>-<sp/>B<sp/>=<sp/>decl_buffer(shape=[m,<sp/>n])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">def<sp/>f(a,<sp/>b):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>m,<sp/>n<sp/>=<sp/>var(),<sp/>var()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>bind_buffer(a,<sp/>shape=[m,<sp/>n])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>bind_buffer(b,<sp/>shape=[m,<sp/>n])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>body</highlight></codeline>
</programlisting></para><para>buffer_map is a sugar to express:<itemizedlist>
<listitem><para>Parameter unpacking: e.g. I can load a.shape[0] to get value of m</para></listitem><listitem><para>Constraint checking: a.shape[0] must equal b.shape[0] because they both corresponds to m.</para></listitem></itemizedlist>
</para><para>While we could have express parameter unpacking and constraint using normal statements, making buffer_map as first class citizen of <ref refid="classtvm_1_1tir_1_1PrimFunc" kindref="compound">PrimFunc</ref> will make program analysis much easier.</para><para><simplesect kind="note"><para>This field can be nullptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="93" column="1" bodyfile="include/tvm/tir/function.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1PrimFuncNode_1a27c7c172dade911d5292dfbfdca033f5" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::tir::PrimFuncNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;tir.PrimFunc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="131" column="1" bodyfile="include/tvm/tir/function.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1PrimFuncNode_1add7c60c29895497221750e01e54f5023" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::PrimFuncNode::VisitAttrs</definition>
        <argsstring>(tvm::AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">tvm::AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="95" column="1" bodyfile="include/tvm/tir/function.h" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1PrimFuncNode_1a424c7818ec81111ec8dc2bff6b0d62e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::PrimFuncNode::SEqualReduce</definition>
        <argsstring>(const PrimFuncNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1PrimFuncNode" kindref="compound">PrimFuncNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="105" column="1" bodyfile="include/tvm/tir/function.h" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1PrimFuncNode_1a82faf0ae143826287ecf4b48da4d904f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::PrimFuncNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="115" column="1" bodyfile="include/tvm/tir/function.h" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1PrimFuncNode_1a63f4bba334dff54fee2097d17804c045" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1FuncType" kindref="compound">FuncType</ref></type>
        <definition>FuncType tvm::tir::PrimFuncNode::func_type_annotation</definition>
        <argsstring>() const </argsstring>
        <name>func_type_annotation</name>
        <briefdescription>
<para>Return the derived function annotation of this function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function type annotation. </para></simplesect>
<simplesect kind="note"><para>The function type annotation of <ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref> is directly derived from the Vars without the need of type inference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1PrimFuncNode_1a612a3bbaa9418eb629180e80084a9d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::PrimFuncNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(PrimFuncNode, BaseFuncNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1PrimFuncNode" kindref="compound">PrimFuncNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1BaseFuncNode" kindref="compound">BaseFuncNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/function.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Primitive functions that contains TIR statements. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classtvm_1_1tir_1_1PrimFunc" kindref="compound">PrimFunc</ref> provides low-level code representation does not automatically manage</para><para><simplesect kind="see"><para><ref refid="classtvm_1_1tir_1_1PrimFunc" kindref="compound">PrimFunc</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6289">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="6290" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6290">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="6291" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6291">
        <label>Object</label>
      </node>
      <node id="6288">
        <label>tvm::BaseFuncNode</label>
        <link refid="classtvm_1_1BaseFuncNode"/>
        <childnode refid="6289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6287">
        <label>tvm::tir::PrimFuncNode</label>
        <link refid="classtvm_1_1tir_1_1PrimFuncNode"/>
        <childnode refid="6288" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6298">
        <label>ObjectRef</label>
      </node>
      <node id="6294">
        <label>tvm::RelayExprNode</label>
        <link refid="classtvm_1_1RelayExprNode"/>
        <childnode refid="6295" relation="public-inheritance">
        </childnode>
        <childnode refid="6297" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
        <childnode refid="6299" relation="usage">
          <edgelabel>+checked_type_</edgelabel>
        </childnode>
      </node>
      <node id="6295">
        <label>tvm::BaseExprNode</label>
        <link refid="classtvm_1_1BaseExprNode"/>
        <childnode refid="6296" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6297">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6301">
        <label>tvm::Attrs</label>
        <link refid="classtvm_1_1Attrs"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6296">
        <label>Object</label>
      </node>
      <node id="6300">
        <label>tvm::DictAttrs</label>
        <link refid="classtvm_1_1DictAttrs"/>
        <childnode refid="6301" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6303">
        <label>tvm::tir::Stmt</label>
        <link refid="classtvm_1_1tir_1_1Stmt"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6302">
        <label>tvm::Array&lt; tir::tvm::tir::Var &gt;</label>
        <link refid="classtvm_1_1Array"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6293">
        <label>tvm::BaseFuncNode</label>
        <link refid="classtvm_1_1BaseFuncNode"/>
        <childnode refid="6294" relation="public-inheritance">
        </childnode>
        <childnode refid="6300" relation="usage">
          <edgelabel>+attrs</edgelabel>
        </childnode>
      </node>
      <node id="6299">
        <label>tvm::Type</label>
        <link refid="classtvm_1_1Type"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6292">
        <label>tvm::tir::PrimFuncNode</label>
        <link refid="classtvm_1_1tir_1_1PrimFuncNode"/>
        <childnode refid="6293" relation="public-inheritance">
        </childnode>
        <childnode refid="6299" relation="usage">
          <edgelabel>+ret_type</edgelabel>
        </childnode>
        <childnode refid="6302" relation="usage">
          <edgelabel>+params</edgelabel>
        </childnode>
        <childnode refid="6303" relation="usage">
          <edgelabel>+body</edgelabel>
        </childnode>
        <childnode refid="6304" relation="usage">
          <edgelabel>+buffer_map</edgelabel>
        </childnode>
      </node>
      <node id="6304">
        <label>tvm::Map&lt; tir::tvm::tir::Var, tvm::tir::Buffer &gt;</label>
        <link refid="classtvm_1_1Map"/>
        <childnode refid="6298" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/function.h" line="45" column="1" bodyfile="include/tvm/tir/function.h" bodystart="45" bodyend="133"/>
    <listofallmembers>
      <member refid="classtvm_1_1BaseExprNode_1a905dcf65204e877b6ccb977cf375f2a0" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a13d7d1f1e6f790951caf200cd59c3620" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a27c7c172dade911d5292dfbfdca033f5" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a4fd1a615179d1eb5748990e5de46d668" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>attrs</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a9fce10a00a4a34c1fa52f7cca25b7e3b" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>body</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1aeb1f162516e09122852496f2a945d100" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>buffer_map</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89bfd23e109a842d18240277ffaaa130" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>checked_type</name></member>
      <member refid="classtvm_1_1RelayExprNode_1ae30ca49a8b84288fbc21d5f312f02929" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>checked_type_</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a63f4bba334dff54fee2097d17804c045" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>func_type_annotation</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a6f177158609cf9da9a4e0a9d3187e3d2" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>GetAttr</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a11694119d77e8d04a9fffd5e9a8b0766" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>HasNonzeroAttr</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a4ea77411935e78d975414f31e153fc78" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>params</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1aa325068615c301abec6656416cab8e09" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>ret_type</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a424c7818ec81111ec8dc2bff6b0d62e1" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a82faf0ae143826287ecf4b48da4d904f" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a904ae50be0b72eab079bed93829c9563" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>span</name></member>
      <member refid="classtvm_1_1BaseFuncNode_1a577e46c2eda9aec1f8a8e48444d00fd2" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a89eb638258551ea1ae2d0e578335474a" prot="public" virt="non-virtual" ambiguityscope="tvm::RelayExprNode::"><scope>tvm::tir::PrimFuncNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1BaseExprNode_1a831794c879d47c30cdd9cefd4f05d533" prot="public" virt="non-virtual" ambiguityscope="tvm::BaseExprNode::"><scope>tvm::tir::PrimFuncNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1a612a3bbaa9418eb629180e80084a9d69" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1RelayExprNode_1a60c73bac632a728a2a669bb34a1c3008" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>type_as</name></member>
      <member refid="classtvm_1_1tir_1_1PrimFuncNode_1add7c60c29895497221750e01e54f5023" prot="public" virt="non-virtual"><scope>tvm::tir::PrimFuncNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
