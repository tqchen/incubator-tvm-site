<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1GenericOpMap" kind="class" language="C++" prot="public">
    <compoundname>tvm::GenericOpMap</compoundname>
    <includes refid="ir_2op_8h" local="no">op.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1GenericOpMap_1af7ebaf5af32d51226208f533e6d5cb1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class OpRegistry</definition>
        <argsstring></argsstring>
        <name>OpRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="352" column="1" bodyfile="include/tvm/ir/op.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1GenericOpMap_1a52a0c2490fb325526a4da58c5647b3ae" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tvm::GenericOpMap::attr_name_</definition>
        <argsstring></argsstring>
        <name>attr_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="354" column="1" bodyfile="include/tvm/ir/op.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1GenericOpMap_1a88967e64d4fdac6bd7425d848e62a192" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">runtime::TVMRetValue</ref>, int &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;runtime::TVMRetValue, int&gt; &gt; tvm::GenericOpMap::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="356" column="1" bodyfile="include/tvm/ir/op.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1GenericOpMap_1aae9ad079762cba7d1ea7875734992506" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::GenericOpMap::count</definition>
        <argsstring>(const Op &amp;op) const </argsstring>
        <name>count</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Check if the map has op as key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if op is contained in map, 0 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="324" column="1" bodyfile="include/tvm/ir/op.h" bodystart="561" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1GenericOpMap_1a74e4a7eab2bf83c8b505e4942b5b7516" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">runtime::TVMRetValue</ref> &amp;</type>
        <definition>const runtime::TVMRetValue &amp; tvm::GenericOpMap::operator[]</definition>
        <argsstring>(const Op &amp;op) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="330" column="1" bodyfile="include/tvm/ir/op.h" bodystart="571" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1GenericOpMap_1a9adaf806540db27a3eb334a599fb8cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>ValueType</type>
        <definition>ValueType tvm::GenericOpMap::get</definition>
        <argsstring>(const Op &amp;op, ValueType def_value) const </argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="classtvm_1_1Op" kindref="compound">Op</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>def_value</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op with default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value when the key does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The content value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="339" column="1" bodyfile="include/tvm/ir/op.h" bodystart="581" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1GenericOpMap_1a204ef8651b7ec324ed2fbec84217a8fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>ValueType</type>
        <definition>ValueType tvm::GenericOpMap::get</definition>
        <argsstring>(const RelayExpr &amp;expr, ValueType def_value) const </argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="classtvm_1_1RelayExpr" kindref="compound">RelayExpr</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>def_value</declname>
        </param>
        <briefdescription>
<para>get the corresponding value element at op with default value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value when the key does not exist or if expr is not an <ref refid="classtvm_1_1Op" kindref="compound">Op</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the const reference to the content value. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The content value type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="349" column="1" bodyfile="include/tvm/ir/op.h" bodystart="592" bodyend="604"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtvm_1_1GenericOpMap_1aa82931192b47e7f6081b1cb31811fa1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::GenericOpMap::GenericOpMap</definition>
        <argsstring>()=default</argsstring>
        <name>GenericOpMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/op.h" line="358" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic map to store additional information of <ref refid="classtvm_1_1Op" kindref="compound">Op</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5188">
        <label>tvm::GenericOpMap</label>
        <link refid="classtvm_1_1GenericOpMap"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/op.h" line="317" column="1" bodyfile="include/tvm/ir/op.h" bodystart="317" bodyend="359"/>
    <listofallmembers>
      <member refid="classtvm_1_1GenericOpMap_1a52a0c2490fb325526a4da58c5647b3ae" prot="private" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>attr_name_</name></member>
      <member refid="classtvm_1_1GenericOpMap_1aae9ad079762cba7d1ea7875734992506" prot="public" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>count</name></member>
      <member refid="classtvm_1_1GenericOpMap_1a88967e64d4fdac6bd7425d848e62a192" prot="private" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>data_</name></member>
      <member refid="classtvm_1_1GenericOpMap_1aa82931192b47e7f6081b1cb31811fa1f" prot="private" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>GenericOpMap</name></member>
      <member refid="classtvm_1_1GenericOpMap_1a9adaf806540db27a3eb334a599fb8cb5" prot="public" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>get</name></member>
      <member refid="classtvm_1_1GenericOpMap_1a204ef8651b7ec324ed2fbec84217a8fa" prot="public" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>get</name></member>
      <member refid="classtvm_1_1GenericOpMap_1a74e4a7eab2bf83c8b505e4942b5b7516" prot="public" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>operator[]</name></member>
      <member refid="classtvm_1_1GenericOpMap_1af7ebaf5af32d51226208f533e6d5cb1d" prot="private" virt="non-virtual"><scope>tvm::GenericOpMap</scope><name>OpRegistry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
