<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1EnvFunc" kind="class" language="C++" prot="public">
    <compoundname>tvm::EnvFunc</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ObjectRef</basecompoundref>
    <includes refid="env__func_8h" local="no">env_func.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtvm_1_1EnvFunc_1aa40f838af3c55fe6ca8ecf2a256c8550" prot="public" static="no">
        <type><ref refid="classtvm_1_1EnvFuncNode" kindref="compound">EnvFuncNode</ref></type>
        <definition>using tvm::EnvFunc::ContainerType =  EnvFuncNode</definition>
        <argsstring></argsstring>
        <name>ContainerType</name>
        <briefdescription>
<para>specify container node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="101" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1EnvFunc_1aae6100a3a2f84f79fa8314c24fd516bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::EnvFunc::EnvFunc</definition>
        <argsstring>()</argsstring>
        <name>EnvFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="76" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1EnvFunc_1a1c210b670d3f990b6b8383a4abb7e6d6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::EnvFunc::EnvFunc</definition>
        <argsstring>(ObjectPtr&lt; Object &gt; n)</argsstring>
        <name>EnvFunc</name>
        <param>
          <type>ObjectPtr&lt; Object &gt;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="77" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1EnvFunc_1a4a8bfbfc8a923d8febc531173b3d213f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtvm_1_1EnvFuncNode" kindref="compound">EnvFuncNode</ref> *</type>
        <definition>const EnvFuncNode* tvm::EnvFunc::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal global function pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="79" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1EnvFunc_1a80e24e1342c276b1dfecf073b5be45f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtvm_1_1runtime_1_1TVMRetValue" kindref="compound">runtime::TVMRetValue</ref></type>
        <definition>runtime::TVMRetValue tvm::EnvFunc::operator()</definition>
        <argsstring>(Args &amp;&amp;...args) const </argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Invoke the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="88" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="88" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1EnvFunc_1a44b694c40d5ff79319ba02afa89fe5ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1EnvFunc" kindref="compound">EnvFunc</ref></type>
        <definition>static EnvFunc tvm::EnvFunc::Get</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>Get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a global function based on the name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the global function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created global function. </para></simplesect>
<simplesect kind="note"><para>The function can be unique </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/env_func.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Managed reference to <ref refid="classtvm_1_1EnvFuncNode" kindref="compound">EnvFuncNode</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classtvm_1_1EnvFuncNode" kindref="compound">EnvFuncNode</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="4923">
        <label>ObjectRef</label>
      </node>
      <node id="4922">
        <label>tvm::EnvFunc</label>
        <link refid="classtvm_1_1EnvFunc"/>
        <childnode refid="4923" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4925">
        <label>ObjectRef</label>
      </node>
      <node id="4924">
        <label>tvm::EnvFunc</label>
        <link refid="classtvm_1_1EnvFunc"/>
        <childnode refid="4925" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/env_func.h" line="74" column="1" bodyfile="include/tvm/ir/env_func.h" bodystart="74" bodyend="102"/>
    <listofallmembers>
      <member refid="classtvm_1_1EnvFunc_1aa40f838af3c55fe6ca8ecf2a256c8550" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>ContainerType</name></member>
      <member refid="classtvm_1_1EnvFunc_1aae6100a3a2f84f79fa8314c24fd516bc" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>EnvFunc</name></member>
      <member refid="classtvm_1_1EnvFunc_1a1c210b670d3f990b6b8383a4abb7e6d6" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>EnvFunc</name></member>
      <member refid="classtvm_1_1EnvFunc_1a44b694c40d5ff79319ba02afa89fe5ab" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>Get</name></member>
      <member refid="classtvm_1_1EnvFunc_1a80e24e1342c276b1dfecf073b5be45f1" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>operator()</name></member>
      <member refid="classtvm_1_1EnvFunc_1a4a8bfbfc8a923d8febc531173b3d213f" prot="public" virt="non-virtual"><scope>tvm::EnvFunc</scope><name>operator-&gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
