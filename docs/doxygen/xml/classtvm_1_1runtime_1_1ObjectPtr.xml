<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1runtime_1_1ObjectPtr" kind="class" language="C++" prot="public">
    <compoundname>tvm::runtime::ObjectPtr</compoundname>
    <includes refid="object_8h" local="no">object.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1runtime_1_1ObjectPtr_1abd146846d4d9894d3d8f5a1787101d4c" prot="private" static="no" mutable="no">
        <type><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> *</type>
        <definition>Object* tvm::runtime::ObjectPtr&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
<para>internal pointer field </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="470" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a0720b5f434e636e22a3ed34f847eec57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="481" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a5d7d1b555fd908e511caa42bd7ccfc71" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ObjectRef</definition>
        <argsstring></argsstring>
        <name>ObjectRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="482" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a7191cb82e9344bec1b5fd20f45b289f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct ObjectHash</definition>
        <argsstring></argsstring>
        <name>ObjectHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="483" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a4193bb155125953e77ded93c0fb46965" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class ObjectPtr</definition>
        <argsstring></argsstring>
        <name>ObjectPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="485" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a8fae619f3bd1a2b2f7273d8d6525032a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class ObjAllocatorBase</definition>
        <argsstring></argsstring>
        <name>ObjAllocatorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="487" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a9a9fd94393cfd7d4b6e6029348e3e19a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMPODValue_</definition>
        <argsstring></argsstring>
        <name>TVMPODValue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="488" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a35ae555d4becf356b16aeacd353d41ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMArgsSetter</definition>
        <argsstring></argsstring>
        <name>TVMArgsSetter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="489" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1ae0ea8b4adc6dab8c74086bceaef6b3e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMRetValue</definition>
        <argsstring></argsstring>
        <name>TVMRetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="490" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a7e8b2c6a4fde079ee813c425d2eb6b24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TVMArgValue</definition>
        <argsstring></argsstring>
        <name>TVMArgValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="491" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a4365e69ddcc4d8c13904852391b99268" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classtvm_1_1RelayRefType" kindref="compound">RelayRefType</ref></type>
          </param>
          <param>
            <type>typename ObjType</type>
          </param>
        </templateparamlist>
        <type>friend <ref refid="classtvm_1_1RelayRefType" kindref="compound">RelayRefType</ref></type>
        <definition>RelayRefType GetRef</definition>
        <argsstring>(const ObjType *ptr)</argsstring>
        <name>GetRef</name>
        <param>
          <type>const ObjType *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="493" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="857" bodyend="861"/>
      </memberdef>
      <memberdef kind="friend" id="classtvm_1_1runtime_1_1ObjectPtr_1a2d849c83a86bbe7e86022b3d6cfc5ee4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BaseType</type>
          </param>
          <param>
            <type>typename ObjType</type>
          </param>
        </templateparamlist>
        <type>friend <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; BaseType &gt;</type>
        <definition>ObjectPtr&lt;BaseType&gt; GetObjectPtr</definition>
        <argsstring>(ObjType *ptr)</argsstring>
        <name>GetObjectPtr</name>
        <param>
          <type>ObjType *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="495" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="864" bodyend="868"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a29eed1f62407d1ea7b28725ea620f0e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>()</argsstring>
        <name>ObjectPtr</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="348" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a4e8fc75dab845ba616f4d4dc31c5164f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="350" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="350" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a4feb081f219dfa65775d46f15fd898c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(const ObjectPtr&lt; T &gt; &amp;other)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="355" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="355" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1adccc0605a72bbf2806b0a2c415f82382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(const ObjectPtr&lt; U &gt; &amp;other)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; U &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="362" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1ab9a13c742256492a2bb19070e41697f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(ObjectPtr&lt; T &gt; &amp;&amp;other)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>move constructor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="371" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a62e18d1b81152c6caf93961eca6d04bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(ObjectPtr&lt; Y &gt; &amp;&amp;other)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; Y &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>move constructor </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="380" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="380" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1ac56d7fad8cbc348ad8ef0e7e23ee90e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::~ObjectPtr</definition>
        <argsstring>()</argsstring>
        <name>~ObjectPtr</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="387" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a0306cc87b99ff5f392fdb90d6aabc70f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::runtime::ObjectPtr&lt; T &gt;::swap</definition>
        <argsstring>(ObjectPtr&lt; T &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap this array with another <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="394" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="394" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a1bd42b6c6b4e971414983d3d8f2b884f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* tvm::runtime::ObjectPtr&lt; T &gt;::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Get the content of the pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="400" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="400" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a6e40337b5eff0d7629859b495af69361" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* tvm::runtime::ObjectPtr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="406" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a7f055002c740996976657bdd448d9899" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; tvm::runtime::ObjectPtr&lt; T &gt;::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="412" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="412" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1afda3c65f41e83e1c87145a216f8c846d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
        <definition>ObjectPtr&lt;T&gt;&amp; tvm::runtime::ObjectPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const ObjectPtr&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy assignmemt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to self. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="420" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="420" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a4ea3532cb25b896b47b609c7db788bf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
        <definition>ObjectPtr&lt;T&gt;&amp; tvm::runtime::ObjectPtr&lt; T &gt;::operator=</definition>
        <argsstring>(ObjectPtr&lt; T &gt; &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>move assignmemt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to self. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="431" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="431" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1ac4461465ba0e785794794e0405c96590" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::runtime::ObjectPtr&lt; T &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>reset the content of ptr to be nullptr </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="437" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="437" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a6e21dd2172469145baa7bf4d12a998ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::runtime::ObjectPtr&lt; T &gt;::use_count</definition>
        <argsstring>() const </argsstring>
        <name>use_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The use count of the ptr, for debug purposes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="444" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="444" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a34b83145402b1340466d1ea7e667cd27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectPtr&lt; T &gt;::unique</definition>
        <argsstring>() const </argsstring>
        <name>unique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether the reference is unique </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="448" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a687b3081346f3b35bee5abc77640e3ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectPtr&lt; T &gt;::operator==</definition>
        <argsstring>(const ObjectPtr&lt; T &gt; &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether two <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref> do not equal each other </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="452" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="452" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a7f135e291e6773f18c89d2af837e02da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectPtr&lt; T &gt;::operator!=</definition>
        <argsstring>(const ObjectPtr&lt; T &gt; &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether two <ref refid="classtvm_1_1runtime_1_1ObjectPtr" kindref="compound">ObjectPtr</ref> equals each other </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="456" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="456" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1aa05e0ea44b9ce636b4b9a9c1f7abab4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectPtr&lt; T &gt;::operator==</definition>
        <argsstring>(std::nullptr_t null) const </argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
          <declname>null</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the pointer is nullptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="460" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="460" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a739e2e97c1b3c6f41abaf937acd899ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::ObjectPtr&lt; T &gt;::operator!=</definition>
        <argsstring>(std::nullptr_t null) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
          <declname>null</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the pointer is not nullptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="464" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="464" bodyend="466"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1ObjectPtr_1a340fbd58a0dff02241738bf8ad51cc74" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::ObjectPtr&lt; T &gt;::ObjectPtr</definition>
        <argsstring>(Object *data)</argsstring>
        <name>ObjectPtr</name>
        <param>
          <type><ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>constructor from <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/object.h" line="475" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="475" bodyend="479"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A custom smart pointer for <ref refid="classtvm_1_1runtime_1_1Object" kindref="compound">Object</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the content data type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespacetvm_1_1runtime_1a93466f4543eedc3925c66ed0e7ef2671" kindref="member">make_object</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="5893">
        <label>tvm::runtime::ObjectPtr&lt; T &gt;</label>
        <link refid="classtvm_1_1runtime_1_1ObjectPtr"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/runtime/object.h" line="345" column="1" bodyfile="include/tvm/runtime/object.h" bodystart="345" bodyend="496"/>
    <listofallmembers>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1abd146846d4d9894d3d8f5a1787101d4c" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>data_</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a1bd42b6c6b4e971414983d3d8f2b884f" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>get</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a2d849c83a86bbe7e86022b3d6cfc5ee4" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>GetObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a4365e69ddcc4d8c13904852391b99268" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>GetRef</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a8fae619f3bd1a2b2f7273d8d6525032a" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjAllocatorBase</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a0720b5f434e636e22a3ed34f847eec57" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>Object</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a7191cb82e9344bec1b5fd20f45b289f1" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectHash</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a4193bb155125953e77ded93c0fb46965" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a29eed1f62407d1ea7b28725ea620f0e4" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a4e8fc75dab845ba616f4d4dc31c5164f" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a4feb081f219dfa65775d46f15fd898c4" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1adccc0605a72bbf2806b0a2c415f82382" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1ab9a13c742256492a2bb19070e41697f2" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a62e18d1b81152c6caf93961eca6d04bc" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a340fbd58a0dff02241738bf8ad51cc74" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectPtr</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a5d7d1b555fd908e511caa42bd7ccfc71" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>ObjectRef</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f135e291e6773f18c89d2af837e02da" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator!=</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a739e2e97c1b3c6f41abaf937acd899ed" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator!=</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a7f055002c740996976657bdd448d9899" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator*</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e40337b5eff0d7629859b495af69361" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator-&gt;</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1afda3c65f41e83e1c87145a216f8c846d" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator=</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a4ea3532cb25b896b47b609c7db788bf8" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator=</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a687b3081346f3b35bee5abc77640e3ae" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator==</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1aa05e0ea44b9ce636b4b9a9c1f7abab4c" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>operator==</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1ac4461465ba0e785794794e0405c96590" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>reset</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a0306cc87b99ff5f392fdb90d6aabc70f" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>swap</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a35ae555d4becf356b16aeacd353d41ee" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>TVMArgsSetter</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a7e8b2c6a4fde079ee813c425d2eb6b24" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>TVMArgValue</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a9a9fd94393cfd7d4b6e6029348e3e19a" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>TVMPODValue_</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1ae0ea8b4adc6dab8c74086bceaef6b3e1" prot="private" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>TVMRetValue</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a34b83145402b1340466d1ea7e667cd27" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>unique</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1a6e21dd2172469145baa7bf4d12a998ce" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>use_count</name></member>
      <member refid="classtvm_1_1runtime_1_1ObjectPtr_1ac56d7fad8cbc348ad8ef0e7e23ee90e2" prot="public" virt="non-virtual"><scope>tvm::runtime::ObjectPtr</scope><name>~ObjectPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
