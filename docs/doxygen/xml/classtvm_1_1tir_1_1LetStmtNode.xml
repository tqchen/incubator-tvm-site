<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1tir_1_1LetStmtNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::tir::LetStmtNode</compoundname>
    <basecompoundref refid="classtvm_1_1tir_1_1StmtNode" prot="public" virt="non-virtual">tvm::tir::StmtNode</basecompoundref>
    <includes refid="stmt_8h" local="no">stmt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetStmtNode_1ae701bd89e0cafb77ae5f9eec127d1fe8" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref></type>
        <definition>Var tvm::tir::LetStmtNode::var</definition>
        <argsstring></argsstring>
        <name>var</name>
        <briefdescription>
<para>The variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="58" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetStmtNode_1a3cf16e336e30a31fc78cc9291b655691" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
        <definition>PrimExpr tvm::tir::LetStmtNode::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The value to be binded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="60" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetStmtNode_1a91c45a2872aa76e40b39328ce7b7888c" prot="public" static="no" mutable="no">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>Stmt tvm::tir::LetStmtNode::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
<para>The body block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="62" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1tir_1_1LetStmtNode_1a4b1d0004f632e9294d233db436262d48" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::tir::LetStmtNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;LetStmt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="85" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetStmtNode_1a71dbfcfb3e13a23cd22528b167568e24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::LetStmtNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="64" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetStmtNode_1a4c640ef89fb13700a44a1c61e0b477ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::tir::LetStmtNode::SEqualReduce</definition>
        <argsstring>(const LetStmtNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1tir_1_1LetStmtNode" kindref="compound">LetStmtNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="70" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetStmtNode_1a0517cf139df41a3876410b0a37da27b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::tir::LetStmtNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="77" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetStmtNode_1aa5672c07c91b8b4b2ba4f8607a82df01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::tir::LetStmtNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(LetStmtNode, StmtNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1LetStmtNode" kindref="compound">LetStmtNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1StmtNode" kindref="compound">StmtNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1tir_1_1LetStmtNode_1a8f0084b73dd967346828e0b8586f40ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
        <definition>static Stmt tvm::tir::LetStmtNode::make</definition>
        <argsstring>(Var var, PrimExpr value, Stmt body)</argsstring>
        <name>make</name>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1Var" kindref="compound">Var</ref></type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1PrimExpr" kindref="compound">PrimExpr</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1tir_1_1Stmt" kindref="compound">Stmt</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/tir/stmt.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Let binding, bind var to value, then run body. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5581">
        <label>tvm::tir::LetStmtNode</label>
        <link refid="classtvm_1_1tir_1_1LetStmtNode"/>
        <childnode refid="5582" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5583">
        <label>Object</label>
      </node>
      <node id="5582">
        <label>tvm::tir::StmtNode</label>
        <link refid="classtvm_1_1tir_1_1StmtNode"/>
        <childnode refid="5583" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5590">
        <label>ObjectRef</label>
      </node>
      <node id="5584">
        <label>tvm::tir::LetStmtNode</label>
        <link refid="classtvm_1_1tir_1_1LetStmtNode"/>
        <childnode refid="5585" relation="public-inheritance">
        </childnode>
        <childnode refid="5587" relation="usage">
          <edgelabel>+var</edgelabel>
        </childnode>
        <childnode refid="5588" relation="usage">
          <edgelabel>+value</edgelabel>
        </childnode>
        <childnode refid="5591" relation="usage">
          <edgelabel>+body</edgelabel>
        </childnode>
      </node>
      <node id="5586">
        <label>Object</label>
      </node>
      <node id="5588">
        <label>tvm::PrimExpr</label>
        <link refid="classtvm_1_1PrimExpr"/>
        <childnode refid="5589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5591">
        <label>tvm::tir::Stmt</label>
        <link refid="classtvm_1_1tir_1_1Stmt"/>
        <childnode refid="5590" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5589">
        <label>tvm::BaseExpr</label>
        <link refid="classtvm_1_1BaseExpr"/>
        <childnode refid="5590" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5585">
        <label>tvm::tir::StmtNode</label>
        <link refid="classtvm_1_1tir_1_1StmtNode"/>
        <childnode refid="5586" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5587">
        <label>tvm::tir::Var</label>
        <link refid="classtvm_1_1tir_1_1Var"/>
        <childnode refid="5588" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tvm/tir/stmt.h" line="55" column="1" bodyfile="include/tvm/tir/stmt.h" bodystart="55" bodyend="87"/>
    <listofallmembers>
      <member refid="classtvm_1_1tir_1_1StmtNode_1a463ce5a124a6c222706888122bb44865" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1StmtNode_1ab7e026e32383e67e620719b025e00056" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a4b1d0004f632e9294d233db436262d48" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a91c45a2872aa76e40b39328ce7b7888c" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>body</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a8f0084b73dd967346828e0b8586f40ed" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>make</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a4c640ef89fb13700a44a1c61e0b477ea" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a0517cf139df41a3876410b0a37da27b7" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1tir_1_1StmtNode_1ab4627fb1adbea88d4fe3a33679569421" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1aa5672c07c91b8b4b2ba4f8607a82df01" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a3cf16e336e30a31fc78cc9291b655691" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>value</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1ae701bd89e0cafb77ae5f9eec127d1fe8" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>var</name></member>
      <member refid="classtvm_1_1tir_1_1LetStmtNode_1a71dbfcfb3e13a23cd22528b167568e24" prot="public" virt="non-virtual"><scope>tvm::tir::LetStmtNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
