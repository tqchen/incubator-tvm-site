<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1runtime_1_1DataType" kind="class" language="C++" prot="public">
    <compoundname>tvm::runtime::DataType</compoundname>
    <includes refid="data__type_8h" local="no">data_type.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7d" prot="public" static="no">
        <name>TypeCode</name>
        <enumvalue id="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7daba80c33310f753ce7578ba71f8b19450" prot="public">
          <name>kInt</name>
          <initializer>= kDLInt</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da2c35d4ea9e95ede0b5a1909a87cbc9f2" prot="public">
          <name>kUInt</name>
          <initializer>= kDLUInt</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da6622631a910a54272097f7f4b6373e9d" prot="public">
          <name>kFloat</name>
          <initializer>= kDLFloat</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da2a59b355bef5ebc40bd78833666197cb" prot="public">
          <name>kHandle</name>
          <initializer>= TVMTypeCode::kTVMOpaqueHandle</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="classtvm_1_1Type" kindref="compound">Type</ref> code for the <ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="42" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="42" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtvm_1_1runtime_1_1DataType_1af400f20c87733fdbc31f0920baa4f917" prot="private" static="no" mutable="no">
        <type>DLDataType</type>
        <definition>DLDataType tvm::runtime::DataType::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="226" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a6db427a47b8d503b10cd2aee6a39d3a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::DataType::DataType</definition>
        <argsstring>()</argsstring>
        <name>DataType</name>
        <briefdescription>
<para>default constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="49" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1aa27f63a2395ce1ac52e4d7740a31383b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::DataType::DataType</definition>
        <argsstring>(DLDataType dtype)</argsstring>
        <name>DataType</name>
        <param>
          <type>DLDataType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The DLDataType </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="54" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="54" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a58d36fef8d6b5fb39b01dccd79ff1db4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::DataType::DataType</definition>
        <argsstring>(int code, int bits, int lanes)</argsstring>
        <name>DataType</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lanes</declname>
        </param>
        <briefdescription>
<para><ref refid="classtvm_1_1Constructor" kindref="compound">Constructor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The type code. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits in the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="62" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a20aec12c682b0e73d3f47ba3b62c418b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::runtime::DataType::code</definition>
        <argsstring>() const </argsstring>
        <name>code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="68" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ac26a4b0d3de99a8c08ecc2618a8659d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::runtime::DataType::bits</definition>
        <argsstring>() const </argsstring>
        <name>bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of bits in the data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="72" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1acaf924d15f1b2cfef7e27ac5bbb3224e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::runtime::DataType::bytes</definition>
        <argsstring>() const </argsstring>
        <name>bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of bytes to store each scalar. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="76" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1abc92c7ca9966808f024983c76e12cf4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tvm::runtime::DataType::lanes</definition>
        <argsstring>() const </argsstring>
        <name>lanes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of lanes in the data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="80" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1aa8e03c0549459bb3a7293f9b1bf04b3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_scalar</definition>
        <argsstring>() const </argsstring>
        <name>is_scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a scalar type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="84" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a805fe49439d48debbc46c071b2957744" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_bool</definition>
        <argsstring>() const </argsstring>
        <name>is_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a scalar type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="88" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a4580dc7ac2f703780b0cc249e7d150a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_float</definition>
        <argsstring>() const </argsstring>
        <name>is_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a float type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="92" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ad2152f38ce867397b99bcbe3fba0618b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_float16</definition>
        <argsstring>() const </argsstring>
        <name>is_float16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a float16 type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="96" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1aa0f1df1d5f4ed20bea6260b8ae939e20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_int</definition>
        <argsstring>() const </argsstring>
        <name>is_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is an int type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="100" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a731b95a55b3dae496b9ecccffe834772" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_uint</definition>
        <argsstring>() const </argsstring>
        <name>is_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is an uint type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="104" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1af0ddd5dcfdee76fe344f4bfb7aff806d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_handle</definition>
        <argsstring>() const </argsstring>
        <name>is_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a handle type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="108" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a21d377fb6acaf48f03d94cee082e08e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_vector</definition>
        <argsstring>() const </argsstring>
        <name>is_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a vector type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="112" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a0990e6ef4d29b009f17702fecc4a0094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::is_vector_bool</definition>
        <argsstring>() const </argsstring>
        <name>is_vector_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether type is a bool vector type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="116" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ab188f54da1a54b34a11621fcb8feb6a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>DataType tvm::runtime::DataType::with_lanes</definition>
        <argsstring>(int lanes) const </argsstring>
        <name>with_lanes</name>
        <param>
          <type>int</type>
          <declname>lanes</declname>
        </param>
        <briefdescription>
<para>Create a new data type by change lanes to a specified value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The target number of lanes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="124" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a9cf48e54cda66f3351b331fcc6cca1dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>DataType tvm::runtime::DataType::with_bits</definition>
        <argsstring>(int bits) const </argsstring>
        <name>with_bits</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Create a new data type by change bits to a specified value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The target number of bits. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="132" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a022ff4c55c831167018e94213cac8564" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>DataType tvm::runtime::DataType::element_of</definition>
        <argsstring>() const </argsstring>
        <name>element_of</name>
        <briefdescription>
<para>Get the scalar version of the type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the result type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="139" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a50fe4658199e24d8287934220e1cc8ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::operator==</definition>
        <argsstring>(const DataType &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equal comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type to compre against. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The comparison resilt. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="147" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a5a41d89517a2ba67eaa7bd6b6f6c0b90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::runtime::DataType::operator!=</definition>
        <argsstring>(const DataType &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>NotEqual comparator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type to compre against. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The comparison resilt. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="158" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ab5fd476a3db6699ddb5a41236653fbd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tvm::runtime::DataType::operator DLDataType</definition>
        <argsstring>() const </argsstring>
        <name>operator DLDataType</name>
        <briefdescription>
<para>Converter to DLDataType. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the result. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="165" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="165" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::Int</definition>
        <argsstring>(int bits, int lanes=1)</argsstring>
        <name>Int</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lanes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct an int type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits in the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed data type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="175" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1ad1cf4571ee1a22c188c66ee2e6e6c042" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::UInt</definition>
        <argsstring>(int bits, int lanes=1)</argsstring>
        <name>UInt</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lanes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct an uint type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits in the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed data type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="184" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a237a714a6a16e14aa01fa4ac52426551" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::Float</definition>
        <argsstring>(int bits, int lanes=1)</argsstring>
        <name>Float</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lanes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct an uint type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits in the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed data type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="193" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a43941f847c40049ef292dc2873483e0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::Bool</definition>
        <argsstring>(int lanes=1)</argsstring>
        <name>Bool</name>
        <param>
          <type>int</type>
          <declname>lanes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct a bool type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed data type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="201" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1aebad9f7235dd20af649fb5c2113797b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::Handle</definition>
        <argsstring>(int bits=64, int lanes=1)</argsstring>
        <name>Handle</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
          <defval>64</defval>
        </param>
        <param>
          <type>int</type>
          <declname>lanes</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Construct a handle type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits in the type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lanes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lanes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The constructed data type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="210" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1runtime_1_1DataType_1a04f0e069017af3f0da47bc0c1fd80916" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref></type>
        <definition>static DataType tvm::runtime::DataType::ShapeIndex</definition>
        <argsstring>()</argsstring>
        <name>ShapeIndex</name>
        <briefdescription>
<para>Get the corresponding type of TVMShapeIndex. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of TVM shape index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/data_type.h" line="217" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="217" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Runtime primitive data type. </para>    </briefdescription>
    <detaileddescription>
<para>This class is a thin wrapper of DLDataType. We also make use of <ref refid="classtvm_1_1runtime_1_1DataType" kindref="compound">DataType</ref> in compiler to store quick hint </para>    </detaileddescription>
    <collaborationgraph>
      <node id="4829">
        <label>tvm::runtime::DataType</label>
        <link refid="classtvm_1_1runtime_1_1DataType"/>
      </node>
    </collaborationgraph>
    <location file="include/tvm/runtime/data_type.h" line="39" column="1" bodyfile="include/tvm/runtime/data_type.h" bodystart="39" bodyend="227"/>
    <listofallmembers>
      <member refid="classtvm_1_1runtime_1_1DataType_1ac26a4b0d3de99a8c08ecc2618a8659d9" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>bits</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a43941f847c40049ef292dc2873483e0d" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>Bool</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1acaf924d15f1b2cfef7e27ac5bbb3224e" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>bytes</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a20aec12c682b0e73d3f47ba3b62c418b" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>code</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1af400f20c87733fdbc31f0920baa4f917" prot="private" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>data_</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a6db427a47b8d503b10cd2aee6a39d3a9" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>DataType</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1aa27f63a2395ce1ac52e4d7740a31383b" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>DataType</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a58d36fef8d6b5fb39b01dccd79ff1db4" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>DataType</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a022ff4c55c831167018e94213cac8564" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>element_of</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a237a714a6a16e14aa01fa4ac52426551" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>Float</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1aebad9f7235dd20af649fb5c2113797b8" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>Handle</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1ab45f13dd70d982d9f977c79b6f7fac98" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>Int</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a805fe49439d48debbc46c071b2957744" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_bool</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a4580dc7ac2f703780b0cc249e7d150a2" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_float</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1ad2152f38ce867397b99bcbe3fba0618b" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_float16</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1af0ddd5dcfdee76fe344f4bfb7aff806d" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_handle</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1aa0f1df1d5f4ed20bea6260b8ae939e20" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_int</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1aa8e03c0549459bb3a7293f9b1bf04b3e" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_scalar</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a731b95a55b3dae496b9ecccffe834772" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_uint</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a21d377fb6acaf48f03d94cee082e08e9" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_vector</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a0990e6ef4d29b009f17702fecc4a0094" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>is_vector_bool</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da6622631a910a54272097f7f4b6373e9d" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>kFloat</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da2a59b355bef5ebc40bd78833666197cb" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>kHandle</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7daba80c33310f753ce7578ba71f8b19450" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>kInt</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7da2c35d4ea9e95ede0b5a1909a87cbc9f2" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>kUInt</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1abc92c7ca9966808f024983c76e12cf4a" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>lanes</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1ab5fd476a3db6699ddb5a41236653fbd7" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>operator DLDataType</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a5a41d89517a2ba67eaa7bd6b6f6c0b90" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>operator!=</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a50fe4658199e24d8287934220e1cc8ab" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>operator==</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a04f0e069017af3f0da47bc0c1fd80916" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>ShapeIndex</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a3c9ce1627be2550f656cd37b6c698c7d" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>TypeCode</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1ad1cf4571ee1a22c188c66ee2e6e6c042" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>UInt</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1a9cf48e54cda66f3351b331fcc6cca1dc" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>with_bits</name></member>
      <member refid="classtvm_1_1runtime_1_1DataType_1ab188f54da1a54b34a11621fcb8feb6a7" prot="public" virt="non-virtual"><scope>tvm::runtime::DataType</scope><name>with_lanes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
