<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="utvm__runtime_8h" kind="file" language="C++">
    <compoundname>utvm_runtime.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="14638">
        <label>include/tvm/runtime/micro/standalone/utvm_runtime.h</label>
        <link refid="utvm_runtime.h"/>
        <childnode refid="14639" relation="include">
        </childnode>
        <childnode refid="14640" relation="include">
        </childnode>
      </node>
      <node id="14640">
        <label>stdint.h</label>
      </node>
      <node id="14639">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" prot="public" static="no">
        <name>TVM_MICRO_RUNTIME_API_API</name>
        <initializer>extern &quot;C&quot; __attribute__((visibility(&quot;default&quot;)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="26" column="9" bodyfile="include/tvm/runtime/micro/standalone/utvm_runtime.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="utvm__runtime_8h_1a7b1c4e56ee09250e6910e460527a1088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UTVMRuntimeCreate</definition>
        <argsstring>(const char *json, size_t json_len, void *module)</argsstring>
        <name>UTVMRuntimeCreate</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>json_len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1abf893bf85d65824c181844b5837287b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UTVMRuntimeDestroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>UTVMRuntimeDestroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1a30d55e38bd6d3e2e2f02fbe713c5254d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UTVMRuntimeSetInput</definition>
        <argsstring>(void *handle, int index, void *tensor)</argsstring>
        <name>UTVMRuntimeSetInput</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1af1809b86c1f76b3e59e077f5a223d035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UTVMRuntimeRun</definition>
        <argsstring>(void *handle)</argsstring>
        <name>UTVMRuntimeRun</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1a4dbabaa36630d5034cb9b011be1d7c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UTVMRuntimeGetOutput</definition>
        <argsstring>(void *handle, int index, void *tensor)</argsstring>
        <name>UTVMRuntimeGetOutput</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1a6abb5a26789e5997394a7f3e8e92187f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UTVMRuntimeDSOModuleCreate</definition>
        <argsstring>(const char *so, size_t so_len)</argsstring>
        <name>UTVMRuntimeDSOModuleCreate</name>
        <param>
          <type>const char *</type>
          <declname>so</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>so_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="utvm__runtime_8h_1ae1285eaab9ec43f529f654ea5fc5e496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UTVMRuntimeDSOModuleDestroy</definition>
        <argsstring>(void *module)</argsstring>
        <name>UTVMRuntimeDSOModuleDestroy</name>
        <param>
          <type>void *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h" line="40" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TVM_RUNTIME_MICRO_STANDALONE_UTVM_RUNTIME_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_RUNTIME_MICRO_STANDALONE_UTVM_RUNTIME_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TVM_MICRO_RUNTIME_API_API<sp/>extern<sp/>&quot;C&quot;<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="utvm__runtime_8h_1a7b1c4e56ee09250e6910e460527a1088" kindref="member">UTVMRuntimeCreate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>json_len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>module);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utvm__runtime_8h_1abf893bf85d65824c181844b5837287b6" kindref="member">UTVMRuntimeDestroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utvm__runtime_8h_1a30d55e38bd6d3e2e2f02fbe713c5254d" kindref="member">UTVMRuntimeSetInput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tensor);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utvm__runtime_8h_1af1809b86c1f76b3e59e077f5a223d035" kindref="member">UTVMRuntimeRun</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utvm__runtime_8h_1a4dbabaa36630d5034cb9b011be1d7c35" kindref="member">UTVMRuntimeGetOutput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>tensor);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="utvm__runtime_8h_1a6abb5a26789e5997394a7f3e8e92187f" kindref="member">UTVMRuntimeDSOModuleCreate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>so,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>so_len);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="utvm__runtime_8h_1a82bcf22ac3cc35341edf8624944d2b6e" kindref="member">TVM_MICRO_RUNTIME_API_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utvm__runtime_8h_1ae1285eaab9ec43f529f654ea5fc5e496" kindref="member">UTVMRuntimeDSOModuleDestroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>module);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TVM_MICRO_RUNTIME_API_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TVM_RUNTIME_MICRO_STANDALONE_UTVM_RUNTIME_H_</highlight></codeline>
    </programlisting>
    <location file="include/tvm/runtime/micro/standalone/utvm_runtime.h"/>
  </compounddef>
</doxygen>
