<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtvm_1_1TypeVarNode" kind="class" language="C++" prot="public">
    <compoundname>tvm::TypeVarNode</compoundname>
    <basecompoundref refid="classtvm_1_1TypeNode" prot="public" virt="non-virtual">tvm::TypeNode</basecompoundref>
    <includes refid="ir_2type_8h" local="no">type.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtvm_1_1TypeVarNode_1a417cf13dd23ee15ac8d1fb274fff46eb" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tvm::TypeVarNode::name_hint</definition>
        <argsstring></argsstring>
        <name>name_hint</name>
        <briefdescription>
<para>The name of the variable, this only acts as a hint to the user, and is not used for equality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="229" column="1" bodyfile="include/tvm/ir/type.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtvm_1_1TypeVarNode_1afc08e151afef3c4644ba8d2cd796106a" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetvm_1acd267f8d7f55da6ac681239831963279" kindref="member">TypeKind</ref></type>
        <definition>TypeKind tvm::TypeVarNode::kind</definition>
        <argsstring></argsstring>
        <name>kind</name>
        <briefdescription>
<para>The kind of type parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="231" column="1" bodyfile="include/tvm/ir/type.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtvm_1_1TypeVarNode_1acee77b1f71e1ecda9212a47d123e2c06" prot="public" static="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tvm::TypeVarNode::_type_key</definition>
        <argsstring></argsstring>
        <name>_type_key</name>
        <initializer>= &quot;TypeVar&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="250" column="1" bodyfile="include/tvm/ir/type.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtvm_1_1TypeVarNode_1a1ff00c9482ca9e0366e40237180189c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::TypeVarNode::VisitAttrs</definition>
        <argsstring>(AttrVisitor *v)</argsstring>
        <name>VisitAttrs</name>
        <param>
          <type><ref refid="classtvm_1_1AttrVisitor" kindref="compound">AttrVisitor</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="233" column="1" bodyfile="include/tvm/ir/type.h" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1TypeVarNode_1aa705547c1fd4e702d2d9f295ce609605" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tvm::TypeVarNode::SEqualReduce</definition>
        <argsstring>(const TypeVarNode *other, SEqualReducer equal) const </argsstring>
        <name>SEqualReduce</name>
        <param>
          <type>const <ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classtvm_1_1SEqualReducer" kindref="compound">SEqualReducer</ref></type>
          <declname>equal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="239" column="1" bodyfile="include/tvm/ir/type.h" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1TypeVarNode_1a301a22d01b973716f47a13a29119cfd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tvm::TypeVarNode::SHashReduce</definition>
        <argsstring>(SHashReducer hash_reduce) const </argsstring>
        <name>SHashReduce</name>
        <param>
          <type><ref refid="classtvm_1_1SHashReducer" kindref="compound">SHashReducer</ref></type>
          <declname>hash_reduce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="245" column="1" bodyfile="include/tvm/ir/type.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtvm_1_1TypeVarNode_1a7c32797e2abcdf3a1278d4f9973eb192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tvm::TypeVarNode::TVM_DECLARE_FINAL_OBJECT_INFO</definition>
        <argsstring>(TypeVarNode, TypeNode)</argsstring>
        <name>TVM_DECLARE_FINAL_OBJECT_INFO</name>
        <param>
          <type><ref refid="classtvm_1_1TypeVarNode" kindref="compound">TypeVarNode</ref></type>
        </param>
        <param>
          <type><ref refid="classtvm_1_1TypeNode" kindref="compound">TypeNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tvm/ir/type.h" line="251" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtvm_1_1Type" kindref="compound">Type</ref> parameter in functions. </para>    </briefdescription>
    <detaileddescription>
<para>A type variable can be viewed as template parameter in c++ template function.</para><para>For example, in the following pesudo code, the <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref> of f is <ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref>(&quot;n&quot;, kind=kShapeVar). This function can take in a Tensor with shape=(3, 3) and returns a Tensor with shape=(9,)</para><para><programlisting><codeline><highlight class="normal">template&lt;i32<sp/>n&gt;</highlight></codeline>
<codeline><highlight class="normal">f(x<sp/>:<sp/>Tensor[i32,<sp/>(n,<sp/>n)])<sp/>-&gt;<sp/>Tensor[i32,<sp/>(n<sp/>*<sp/>n)]</highlight></codeline>
</programlisting> <simplesect kind="see"><para><ref refid="classtvm_1_1TypeVar" kindref="compound">TypeVar</ref>, <ref refid="namespacetvm_1acd267f8d7f55da6ac681239831963279" kindref="member">TypeKind</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7495">
        <label>tvm::TypeVarNode</label>
        <link refid="classtvm_1_1TypeVarNode"/>
        <childnode refid="7496" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7496">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="7497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7497">
        <label>Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7502">
        <label>ObjectRef</label>
      </node>
      <node id="7498">
        <label>tvm::TypeVarNode</label>
        <link refid="classtvm_1_1TypeVarNode"/>
        <childnode refid="7499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7501">
        <label>tvm::Span</label>
        <link refid="classtvm_1_1Span"/>
        <childnode refid="7502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7499">
        <label>tvm::TypeNode</label>
        <link refid="classtvm_1_1TypeNode"/>
        <childnode refid="7500" relation="public-inheritance">
        </childnode>
        <childnode refid="7501" relation="usage">
          <edgelabel>+span</edgelabel>
        </childnode>
      </node>
      <node id="7500">
        <label>Object</label>
      </node>
    </collaborationgraph>
    <location file="include/tvm/ir/type.h" line="222" column="1" bodyfile="include/tvm/ir/type.h" bodystart="222" bodyend="252"/>
    <listofallmembers>
      <member refid="classtvm_1_1TypeNode_1ab02f7d165755f57689f986aca467a7e5" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>_type_has_method_sequal_reduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a4179c7d7d55d1141cadfd19547fb1344" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>_type_has_method_shash_reduce</name></member>
      <member refid="classtvm_1_1TypeVarNode_1acee77b1f71e1ecda9212a47d123e2c06" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>_type_key</name></member>
      <member refid="classtvm_1_1TypeVarNode_1afc08e151afef3c4644ba8d2cd796106a" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>kind</name></member>
      <member refid="classtvm_1_1TypeVarNode_1a417cf13dd23ee15ac8d1fb274fff46eb" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>name_hint</name></member>
      <member refid="classtvm_1_1TypeVarNode_1aa705547c1fd4e702d2d9f295ce609605" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>SEqualReduce</name></member>
      <member refid="classtvm_1_1TypeVarNode_1a301a22d01b973716f47a13a29119cfd9" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>SHashReduce</name></member>
      <member refid="classtvm_1_1TypeNode_1a7b06d502a5162d51bb205691bbb95bb5" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>span</name></member>
      <member refid="classtvm_1_1TypeNode_1abadff70e220806f889e81a0ad3bca0da" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>TVM_DECLARE_BASE_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1TypeVarNode_1a7c32797e2abcdf3a1278d4f9973eb192" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>TVM_DECLARE_FINAL_OBJECT_INFO</name></member>
      <member refid="classtvm_1_1TypeVarNode_1a1ff00c9482ca9e0366e40237180189c7" prot="public" virt="non-virtual"><scope>tvm::TypeVarNode</scope><name>VisitAttrs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
